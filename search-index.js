var searchIndex = JSON.parse('{\
"clientd":{"doc":"","t":[13,4,3,3,3,3,3,3,3,13,3,3,3,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,11,11,12,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["ClientError","ClientdError","InfoResponse","Json","PegInAddressResponse","PegInOutResponse","PegInPayload","PendingResponse","PendingTransaction","ServerError","SpendPayload","SpendResponse","TieredCount","TieredNoteCount","WaitBlockHeightPayload","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","call","clone","clone","clone","clone_into","clone_into","clone_into","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_request","height","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into_response","json_success","new","new","notes","notes","peg_in_address","pending","provide","qty","quantity","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","source","tier","to_owned","to_owned","to_owned","to_string","transaction","transactions","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txid","txid","txout_proof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","value","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["clientdd":["","","","","","","Struct used with the axum json-extractor to proccess the …","","Holds a pending transaction with the txid, the quantity of …","","","","Represents an e-cash tier (msat by convention) grouped …","","struct to process wait_block_height request payload","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[17,0,0,0,0,0,0,0,0,17,0,0,0,0,0,10,34,17,8,4,10,11,12,13,14,15,5,6,16,34,17,8,4,10,11,12,13,14,15,5,6,16,0,4,5,6,4,5,6,34,17,8,4,10,11,12,13,14,15,5,6,16,34,17,8,4,10,11,12,13,14,15,5,6,16,8,4,10,11,12,13,14,15,5,6,16,34,17,8,4,10,11,12,13,14,15,5,6,16,17,17,4,5,6,34,17,17,8,4,10,11,12,13,14,15,5,6,6,16,34,8,34,17,8,4,10,11,12,13,14,15,5,6,16,34,17,8,4,10,11,12,13,14,15,5,6,16,17,0,11,12,11,15,13,11,17,16,5,8,4,10,11,12,13,14,15,5,6,16,17,5,4,5,6,17,4,12,34,17,8,4,10,11,12,13,14,15,5,6,16,34,17,8,4,10,11,12,13,14,15,5,6,16,14,16,4,34,17,8,4,10,11,12,13,14,15,5,6,16,16,34,17,8,4,10,11,12,13,14,15,5,6,16],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[3,[2]]]],[4,4],[5,5],[6,6],[[]],[[]],[[]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[],[[9,[8]]]],[[],[[9,[4]]]],[[],[[9,[10]]]],[[],[[9,[11]]]],[[],[[9,[12]]]],[[],[[9,[13]]]],[[],[[9,[14]]]],[[],[[9,[15]]]],[[],[[9,[5]]]],[[],[[9,[6]]]],[[],[[9,[16]]]],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[7],[[17,18],19],[[17,18],19],[[4,18],19],[[5,18],19],[[6,18],19],[[]],[20,17],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[22,[21]]],6],[[]],[[]],[23,[[26,[[25,[24]]]]]],0,[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,27],0,[[[22,[21]],28],11],[28,12],0,0,0,0,[29],0,0,[8,9],[4,9],[10,9],[11,9],[12,9],[13,9],[14,9],[15,9],[5,9],[6,9],[16,9],[17,[[31,[30]]]],0,[[]],[[]],[[]],[[],32],0,0,[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],0,0,0,[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],[[],33],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[15,"str"],[4,"Value"],[6,"Result"],[3,"PegInPayload"],[3,"TieredCount"],[3,"TieredNoteCount"],[15,"usize"],[3,"WaitBlockHeightPayload"],[4,"Result"],[3,"SpendPayload"],[3,"InfoResponse"],[3,"PendingResponse"],[3,"PegInAddressResponse"],[3,"PegInOutResponse"],[3,"SpendResponse"],[3,"PendingTransaction"],[4,"ClientdError"],[3,"Formatter"],[6,"Result"],[4,"ClientError"],[3,"SpendableNote"],[3,"TieredMulti"],[3,"RequestParts"],[8,"Future"],[3,"Box"],[3,"Pin"],[6,"Response"],[3,"Vec"],[3,"Demand"],[8,"Error"],[4,"Option"],[3,"String"],[3,"TypeId"],[3,"Json"]]},\
"clientd_cli":{"doc":"","t":[3,4,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12],"n":["Cli","Commands","Info","NewPegInAddress","PegIn","Pending","Spend","VersionHash","WaitBlockHeight","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","main","print_response","raw_json","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","amount","height","transaction","txout_proof"],"q":["clientd_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clientd_cli::Commands","","",""],"d":["","","rpc-method: info()","rpc-method: pegin_address()","rpc-method peg_in()","rpc-method: pending()","rpc-method_ spend()","Print the latest git commit hash this bin. was build with","rpc-method: wait_block_height()","","","","","","","","","","call JSON-2.0 RPC method","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","print unformatted json","","","","","","","","","","","","","A minimint (ecash) amount","","The Bitcoin Transaction","The TxOutProof which was created from sending BTC to the …"],"i":[0,0,7,7,7,7,7,7,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,0,4,4,7,4,7,4,7,4,7,4,7,4,7,15,16,17,17],"f":[0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[]],[[[13,[12]],11]],0,[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Commands"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[4,"Value"],[6,"Result"],[3,"TypeId"],[13,"Spend"],[13,"WaitBlockHeight"],[13,"PegIn"]]},\
"configgen":{"doc":"","t":[3,4,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12],"n":["Cli","Command","Generate","VersionHash","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","main","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","base_port","bitcoind_rpc","denominations","dir_out_path","federation_name","num_nodes"],"q":["configgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","configgen::Command","","","","",""],"d":["","","Config generator for Fedimint Federation","Print the latest git commit hash this bin. was build with","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Base port","<code>bitcoind</code> json rpc endpoint","Available denominations of notes issues by the federation …","Directory to output all the generated config files","Federation name","Number of nodes in the federation"],"i":[0,0,7,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,4,7,4,7,4,7,4,7,4,7,4,7,13,13,13,13,13,13],"f":[0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Command"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"TypeId"],[13,"Generate"]]},\
"distributedgen":{"doc":"","t":[3,4,13,13,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12],"n":["Cli","Command","CreateCert","Run","VersionHash","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","gen_tls","group_id","has_subcommand","init","init","into","into","main","parse_peer_params","run_dkg","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","address","base_port","bitcoind_rpc","certs","denominations","dir_out_path","dir_out_path","federation_name","name","password","password"],"q":["distributedgen","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","distributedgen::Command","","","","","","","","","",""],"d":["","","Creates a connection cert string that must be shared with …","All peers must run distributed key gen at the same time to …","Print the latest git commit hash this bin. was build with","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Our external address","Our base port, ports may be used from base_port to …","<code>bitcoind</code> json rpc endpoint","Comma-separated list of connection certs from all peers …","Available denominations of notes issues by the federation …","Directory to output all the generated config files","Directory to output all the generated config files","Federation name, same for all peers","Our node name, must be unique among peers","The password that encrypts the configs, will prompt if not …","The password that encrypts the configs, will prompt if not …"],"i":[0,0,7,7,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,0,4,7,4,7,4,7,0,0,0,4,7,4,7,4,7,4,7,4,7,4,7,23,23,24,24,24,23,24,24,23,23,24],"f":[0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[8,9,10,9,11],9],[[],[[13,[12]]]],[14,15],[[],2],[[],2],[[]],[[]],[[]],[9,16],[[8,[18,[17]],9,[18,[9]],9,19,20],21],[[],6],[[],6],[[],6],[[],6],[[],22],[[],22],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Command"],[3,"Path"],[3,"String"],[15,"u16"],[3,"LessSafeKey"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"PeerServerParams"],[3,"Amount"],[3,"Vec"],[3,"PrivateKey"],[3,"TaskGroup"],[6,"Cancellable"],[3,"TypeId"],[13,"CreateCert"],[13,"Run"]]},\
"fedimint_api":{"doc":"","t":[3,8,18,16,3,16,18,13,8,3,4,3,2,2,3,13,18,14,14,14,11,11,10,11,11,11,10,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,14,14,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,11,12,0,14,14,11,0,11,12,11,11,11,11,14,11,11,11,12,11,14,11,11,11,11,11,2,11,11,11,11,0,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,6,3,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,13,13,3,8,3,4,4,3,4,13,13,13,13,8,13,3,3,13,13,8,3,13,4,8,8,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,10,12,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,12,12,12,12,12,12,12,12,11,11,11,5,12,0,11,11,11,11,11,11,11,11,10,12,11,11,12,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,5,11,11,11,5,11,11,11,11,11,3,4,3,3,17,17,17,17,8,8,8,6,8,8,3,3,8,8,8,8,8,3,13,3,11,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,10,10,10,10,0,11,11,11,11,11,10,10,10,10,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,10,10,10,10,10,10,10,10,11,11,14,12,11,11,11,11,11,0,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,8,16,8,18,16,10,11,11,11,11,10,11,10,11,10,11,10,11,11,11,11,11,10,11,10,10,11,11,11,11,11,5,8,8,8,3,3,10,10,10,10,10,10,10,10,10,11,11,11,11,10,10,11,11,10,10,11,10,11,10,11,10,11,11,11,11,10,11,11,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,10,10,11,11,13,18,3,3,3,8,8,8,4,3,8,4,13,8,8,13,16,13,6,8,13,4,16,13,13,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,11,11,11,11,11,12,12,0,11,11,10,10,10,10,11,10,10,0,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,3,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,3,13,3,3,13,4,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,11,11,11,11,11,11,8,24,3,8,8,24,6,6,24,11,11,0,10,10,11,10,11,11,11,11,11,14,14,11,11,11,0,0,11,11,11,11,11,14,14,3,3,16,16,8,6,6,16,3,8,4,13,16,16,18,16,16,8,16,16,3,8,16,18,12,12,10,14,10,10,10,0,10,10,11,10,11,11,11,11,11,11,11,11,11,11,10,11,11,12,10,10,10,11,12,11,11,11,11,11,11,11,11,11,11,10,12,11,0,11,11,11,11,11,10,12,10,11,11,10,12,11,12,11,10,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,10,10,11,11,11,11,11,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,8,10,0,8,8,3,3,10,10,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,10,10,10,10,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,5,12,11,12,11,12,11,11,12,11,11,3,3,3,3,3,3,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,12,12,12,11,11,11,12,11,11,12,11,11,11,11,11,12,12,12,11,11,11,5,5,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,5,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Amount","BitcoinHash","DISPLAY_BACKWARD","Engine","Feerate","Inner","LEN","NotANumber","NumPeers","OutPoint","ParseAmountError","PeerId","ServerModulePlugin","Tiered","TransactionId","WrongBitcoinAmount","ZERO","__api_endpoint","_dyn_newtype_define_inner","_dyn_newtype_impl_deref_mut","add","add_assign","all_zeros","all_zeros","as_bits","as_hash","as_inner","as_inner","as_ref","base32_len","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","calculate_fee","cancellable","check_base32","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","core","db","degree","deref","deserialize","deserialize","deserialize","deserialize","deserialize","div","dyn_newtype_define","dyn_newtype_impl_dyn_clone_passhthrough","encode_hex","encode_hex_upper","encoding","engine","engine","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_engine","from_hash","from_inner","from_inner","from_milli_sats","from_msat","from_sat","from_slice","from_slice","from_slice_delegated","from_str","from_str","from_str_in","hash","hash","hash","hash","hash","hash","index","into","into","into","into","into","into","into_inner","into_inner","macros","max_evil","milli_sat","module","module_dyn_newtype_impl_encode_decode","module_plugin_trait_define","mul","net","one_honest","out_idx","partial_cmp","partial_cmp","partial_cmp","partial_cmp","plugin_types_trait_impl","provide","rem","rem_assign","sats_per_kvb","saturating_sub","serde_module_encoding_wrapper","serialize","serialize","serialize","serialize","serialize","server","source","sub","sub_assign","sum","task","threshold","tiered","tiered_multi","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_usize","total","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","txid","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","Cancellable","Cancelled","borrow","borrow_mut","fmt","fmt","from","into","provide","to_string","try_from","try_into","type_id","vzip","BitcoindRpcCfg","ClientConfig","ClientModuleConfig","Commit","DistributedGen","Dkg","DkgGroup","DkgKeys","DkgMessage","DkgPeerMsg","DkgRunner","DkgStep","Extract","G1","G2","HashedCommit","ISupportedDkgMessage","Messages","ModuleConfigGenParams","Node","PublicKey","Result","SGroup","ServerModuleConfig","Share","SupportedDkgMessage","TypedClientModuleConfig","TypedServerModuleConfig","add","bitcoin_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","btc_rpc_address","btc_rpc_pass","btc_rpc_user","cast","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","commitments","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize2","dkg_config","eq","eq","eq","eq","eq","f1_poly","f2_poly","fake_config_gen_params","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_msg","from_msg","from_msg","gen_g","gen_h","get_module","hash","hash","hashed_commits","into","into","into","into","into","into","into","into","into","into","into","into","into","mint_amounts","modules","multi","name","new","new","nodes","other","our_id","our_id","peers","peers","pk_shares","public_key_set","run","run_g1","run_g2","scalar","secret_key_share","serde_commit","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize2","sk_shares","step","tbs","threshold","threshold_crypto","to_client_config","to_erased","to_erased","to_msg","to_msg","to_msg","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_typed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url","validate_config","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","Wrap","borrow","borrow_mut","deserialize","deserialize","from","into","serialize","serialize","try_from","try_into","type_id","vzip","ConsensusItem","FinalizationError","Input","KeyPair","MODULE_KEY_GLOBAL","MODULE_KEY_LN","MODULE_KEY_MINT","MODULE_KEY_WALLET","ModuleConsensusItem","ModuleDecode","ModuleInput","ModuleKey","ModuleOutput","ModuleOutputOutcome","Output","OutputOutcome","PluginConsensusItem","PluginDecode","PluginInput","PluginOutput","PluginOutputOutcome","Signature","SomethingWentWrong","Transaction","add_xonly_tweak","as_any","as_any","as_any","as_any","as_mut_ptr","as_ptr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","dangerous_assume_tweaked","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","display_secret","dyn_hash","dyn_hash","dyn_hash","dyn_hash","encode","eq","eq","eq","eq","eq","erased_eq","erased_eq","erased_eq","erased_eq","erased_eq","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_seckey_slice","from_seckey_str","from_seckey_str_global","from_secret_key","from_str","hash","hash","hash","hash","hash","inputs","into","into","into","into","into","into","into","into","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new","new_global","newtype_impl_eq_passthrough","outputs","partial_cmp","public_key","secret_bytes","secret_key","serialize","server","sign_schnorr","signature","tap_tweak","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak_add_assign","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x_only_public_key","ClientModule","ClientModulePlugin","Decoder","IClientModule","MODULE_KEY","Module","as_any","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","deref","fmt","from","from","input_amount","into","module_key","output_amount","to_owned","try_from","try_into","type_id","vzip","module_decode_key_prefixed_decodable","IServerModule","ModuleVerificationCache","PluginVerificationCache","ServerModule","VerificationCache","api_base_name","api_endpoints","apply_input","apply_output","as_any","as_any","audit","await_consensus_proposal","begin_consensus_epoch","borrow","borrow","borrow_mut","borrow_mut","build_verification_cache","clone","clone","clone_into","consensus_proposal","decode_consensus_item","decode_consensus_item","decode_input","decode_input","decode_output","decode_output","decode_output_outcome","decode_output_outcome","deref","deref","deref_mut","end_consensus_epoch","fmt","fmt","from","from","from","from","into","into","module_key","module_key","module_key","output_status","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","validate_input","validate_output","vzip","vzip","AltTest","DB_PREFIX","Database","DatabaseDeleteOperation","DatabaseInsertOperation","DatabaseKey","DatabaseKeyPrefix","DatabaseKeyPrefixConst","DatabaseOperation","DatabaseTransaction","DatabaseValue","DecodingError","Delete","IDatabase","IDatabaseTransaction","Insert","Key","Other","PrefixIter","SerializableDatabaseValue","Test","TestDbKeyPrefix","Value","WrongLength","WrongPrefix","begin_transaction","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","commit_tx","commit_tx","default","default","deref","deref","deref_mut","expect_write_conflict","find_by_prefix","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","get_value","insert_entry","insert_new_entry","into","into","into","into","into","into","key","key","mem_impl","other","provide","raw_find_by_prefix","raw_get_bytes","raw_insert_bytes","raw_remove_entry","remove_entry","rollback_tx_to_savepoint","set_tx_savepoint","tests","to_bytes","to_bytes","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","value","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","vzip","vzip","vzip","vzip","vzip","vzip","wrong_length","wrong_prefix","expected","expected","found","found","DummyError","MemDatabase","MemDbIter","MemTransaction","begin_transaction","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","commit_tx","data","data","db","default","dump_db","eq","fmt","fmt","fmt","from","from","from","from","into","into","into","into","into_iter","new","next","num_pending_operations","num_savepoint_operations","operations","raw_find_by_prefix","raw_get_bytes","raw_insert_bytes","raw_remove_entry","rollback_tx_to_savepoint","savepoint","set_tx_savepoint","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","tx_data","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","AltDbPrefixTestPrefix","AltTest","AltTestKey","DbPrefixTestPrefix","Test","TestDbKeyPrefix","TestKey","TestVal","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","eq","expect_write_conflict","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","verify_commit","verify_find_by_prefix","verify_insert_elements","verify_phantom_entry","verify_prevent_dirty_reads","verify_prevent_nonrepeatable_reads","verify_read_own_writes","verify_remove_existing","verify_remove_nonexisting","verify_rollback_to_savepoint","vzip","vzip","vzip","vzip","vzip","vzip","Decodable","Decodable","DecodeError","DynEncodable","Encodable","Encodable","ModuleKey","ModuleRegistry","UnzipConsensus","borrow","borrow_mut","btc","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","fmt","fmt","from","from_err","from_str","impl_encode_decode_num","impl_encode_decode_tuple","into","new_custom","provide","secp256k1","tbs","to_string","try_from","try_into","type_id","vzip","impl_encode_decode_bridge","impl_external_encode_bls","ApiEndpoint","ApiError","ConsensusItem","Decoder","FederationModuleConfigGen","HandlerFn","HandlerFnReturn","Input","InputMeta","IntoModuleError","ModuleError","Other","Output","OutputOutcome","PATH","Param","Response","ServerModulePlugin","State","Target","TransactionItemAmount","TypedApiEndpoint","VerificationCache","ZERO","amount","amount","api_base_name","api_endpoint","api_endpoints","apply_input","apply_output","audit","audit","await_consensus_proposal","bad_request","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","clone","clone_into","code","consensus_proposal","distributed_gen","end_consensus_epoch","eq","fee","fmt","fmt","fmt","fmt","from","from","from","from","from","from","handle","handler","hash","interconnect","into","into","into","into","into","into_module_error_other","message","module_key","new","not_found","output_status","path","provide","puk_keys","source","to_client_config","to_owned","to_string","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","validate_config","validate_input","validate_output","vzip","vzip","vzip","vzip","vzip","Audit","AuditItem","add_items","borrow","borrow","borrow_mut","borrow_mut","default","fmt","fmt","from","from","into","into","items","milli_sat","name","sum","to_string","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ModuleInterconect","call","peers","IMuxPeerConnections","IPeerConnections","MuxPeerConnections","PeerConnections","ban_peer","ban_peer","borrow","borrow","borrow_mut","borrow_mut","clone","clone_into","deref","deref","deref_mut","fake","from","from","into","into","into_dyn","into_dyn","receive","receive","send","send","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FakePeerConnections","ban_peer","borrow","borrow_mut","from","into","make_fake_peer_connection","peer_id","receive","rx","send","task_handle","try_from","try_into","tx","type_id","vzip","Elapsed","RwLock","RwLockReadGuard","RwLockWriteGuard","TaskGroup","TaskGroupInner","TaskHandle","TaskPanicGuard","block_in_place","blocking_read","blocking_write","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","channel_penalty_msat","clone","clone","clone_into","clone_into","completed","const_new","const_with_max_readers","data","data","default","default","default","deref","deref","deref_mut","downgrade","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","get_mut","imp","inner","inner","inner","install_kill_handler","into","into","into","into","into","into","into","into","into_inner","into_mapped","is_shutting_down","is_shutting_down","is_shutting_down","join","join_all","make_handle","make_shutdown_rx","map","map","marker","marker","mr","name","new","new","on_shutdown","on_shutdown","payment_path_failed","payment_path_successful","permits_acquired","probe_failed","probe_successful","provide","read","read_owned","s","s","s","shutdown","shutdown","shutdown_join_all","sleep","sleep_until","spawn","spawn_local","timeout","to_owned","to_owned","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_map","try_map","try_read","try_read_owned","try_write","try_write_owned","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","with_max_readers","write","write_owned","RwLock","RwLockReadGuard","RwLockWriteGuard","block_in_place","c","data","data","marker","marker","mr","permits_acquired","s","s","s","sleep","sleep_until","spawn","spawn_local","timeout","InvalidAmountTierError","Tiered","as_map","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","cmp","deserialize","deserialize","eq","eq","fmt","fmt","fmt","from","from","from_iter","get","hash","hash","into","into","iter","partial_cmp","serialize","serialize","structural_eq","tier","tiers","to_owned","to_owned","to_public","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","TieredMulti","TieredMultiZip","_pd","borrow","borrow","borrow_mut","borrow_mut","check_tiers","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","default","deserialize","eq","extend","fmt","from","from","from_bytes","from_iter","get","get_mut","hash","into","into","into_iter","into_iter","is_empty","item_count","iter_items","iter_tiers","iters","map","new","new","next","represent_amount","select_coins","serialize","structural_eq","tier_count","tiers","to_bytes","to_owned","total_amount","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_apifedimint_api::cancellable","","","","","","","","","","","","","","fedimint_api::configfedimint_api::config::serde_commit","","","","","","","","","","","","","fedimint_api::corefedimint_api::core::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::core::encode","fedimint_api::core::server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db::DecodingError","","","","fedimint_api::db::mem_impl","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::db::tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::encoding","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::encoding::btc","fedimint_api::encoding::tbs","fedimint_api::module","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::module::audit","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::module::interconnect","","fedimint_api::net","fedimint_api::net::peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::net::peers::fake","","","","","","","","","","","","","","","","","fedimint_api::task","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::task::imp","","","","","","","","","","","","","","","","","","","fedimint_api::tiered","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_api::tiered_multi","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["Represents an amount of BTC inside the system. The base …","Trait which applies to hashes of all types.","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","","The byte array that represents the hash internally.","Length of the hash, in bytes.","","for consensus-related calculations given the number of …","","","","","","A transaction id for peg-ins, peg-outs and reissuances","","","Example","","","","","Returns an all zero hash.","","","Converts this type into the inner hash type.","Unwraps the hash and returns a reference to the underlying …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fedimint Core API (common) module interface","","Degree of a underlying polynomial to require <code>threshold</code> …","","","","","","","","Define “dyn newtype” (a newtype over <code>dyn Trait</code>)","Implement <code>Clone</code> on a “dyn newtype”","","","This module defines a binary encoding interface which is …","Constructs a new engine.","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Produces a hash from the current state of a given engine.","","Creates this type from the inner hash type.","Constructs a hash from the underlying byte array.","","","","","Copies a byte slice into a hash object.","","","","","","Hashes some bytes.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","","","number of peers that can be evil without disrupting the …","","","Implement <code>Encodable</code> and <code>Decodable</code> for a “module dyn …","Define a “plugin” trait","","","number of peers to select such that one is honest (under …","","","","","","Implements the <code>Plugin*</code> traits for all associated types of …","","","","","","Creates a struct that can be used to make our …","","","","","","","","","","","","number of peers required for a signature","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Operation that can potentially get cancelled returning no …","An error used as a “cancelled” marker in <code>Cancellable</code>.","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","Total client config","Config for the client-side of a particular Federation …","","","","Defines a group (e.g. G1 or G2) that we can generate keys …","","","Things that a <code>distributed_gen</code> config can send between peers","","","","","","","Supported (by Fedimint’s code) <code>DkgMessage&lt;T&gt;</code> types","","Global Fedimint configuration generation settings passed …","","","","","Config for the server-side of a particular Federation …","","<code>enum</code> version of <code>SupportedDkgMessage</code>","","","Create another DKG with <code>threshold</code> signatures required","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Default &amp; fake config gen params for things like tests","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get a second generator by hashing the first one to the …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Create multiple DKGs with the same <code>threshold</code> signatures …","","Creates the DKG and the first step of the algorithm","Create a single DKG with <code>threshold</code> signatures required","","extra options for extra settings and modules","","","","","","","Runs the DKG algorithms with our peers","Create keys from G1 (48B keys, 96B messages) used in …","Create keys from G2 (96B keys, 48B messages) used in <code>tbs</code>","PeerIds are offset by 1, since evaluating a poly at 0 …","","Handling the Group serialization with a wrapper","","","","","","","","","","","Runs a single step of the DKG algorithm, processing a <code>msg</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","An owned, immutable output of a <code>Transaction</code> before it was …","","An owned, immutable input to a <code>Transaction</code>","Opaque data structure that holds a keypair consisting of a …","","","","Temporary constant for the modules we already have","","","Something that can be an <code>Input</code> in a <code>Transaction</code>","A module key identifing a module","Something that can be an <code>Output</code> in a <code>Transaction</code>","","An owned, immutable output of a <code>Transaction</code>","An owned, immutable output of a <code>Transaction</code> before it was …","","Module Decoder trait","","","","","","Transaction that was already signed","Tweaks a keypair by first converting the public key to an …","","","","","Obtains a raw mutable pointer suitable for use with FFI …","Obtains a raw const pointer suitable for use with FFI …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Decode <code>ConsensusItem</code> compatible with this module, after …","Decode <code>ConsensusItem</code> compatible with this module, after …","Decode <code>Input</code> compatible with this module, after the module …","Decode <code>Input</code> compatible with this module, after the module …","Decode <code>Output</code> compatible with this module, after the …","Decode <code>Output</code> compatible with this module, after the …","Decode <code>OutputOutcome</code> compatible with this module, after …","Decode <code>OutputOutcome</code> compatible with this module, after …","","","","","","","","","","Formats the explicit byte value of the secret key kept …","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Creates a <code>KeyPair</code> directly from a secret key slice.","Creates a <code>KeyPair</code> directly from a secret key string.","Creates a <code>KeyPair</code> directly from a secret key string and …","Creates a <code>KeyPair</code> directly from a Secp256k1 secret key.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Module key","Module key","","","","","Generates a new random secret key.","Generates a new random secret key using the global …","","","","Returns the <code>PublicKey</code> for this <code>KeyPair</code>.","Returns the secret bytes for this key pair.","Returns the <code>SecretKey</code> for this <code>KeyPair</code>.","","Fedimint Core Server module interface","Constructs an schnorr signature for <code>msg</code> using the global …","","Tweaks private and public keys within an untweaked <code>KeyPair</code> …","","","","","","","","","","","","","","","","","","","","","","","","","","","Tweaks a keypair by adding the given tweak to the secret …","","","","","","","","","","","","","","","","","Returns the <code>XOnlyPublicKey</code> (and it’s <code>Parity</code>) for this …","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the amount represented by the input and the fee …","Calls <code>U::from(self)</code>.","","Returns the amount represented by the output and the fee …","","","","","","","Backend side module interface","","","","","Defines the prefix for API endpoints defined by the module.","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","","","","","Some modules may have slow to verify inputs that would …","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","This function is called once all transactions have been …","","","Returns the argument unchanged.","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Retrieve the current status of the output. Depending on …","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","A handle to a type-erased database implementation","","","","","","","A handle to a type-erased database implementation","","","","","Fedimint requires that the database implementation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Create a savepoint during the transaction that can be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Data which can be encoded in a consensus-consistent way","","","Object-safe trait for things that can encode themselves","Data which can be encoded in a consensus-consistent way","","","","","","","","Decode an object with a well-defined format","Encode an object with a well-defined format. Returns the …","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Definition of an API endpoint defined by a module <code>M</code>.","","","","","","","","","Extension trait with a function to map <code>Result</code>s used by …","","","","","example: /transaction","","","","","","Information about the amount represented by an input or …","","","","","","Defines the prefix for API endpoints defined by the module.","Example","Returns a list of custom API endpoints defined by the …","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","","Queries the database and returns all assets and …","Blocks until a new <code>consensus_proposal</code> is available.","","This function is called once before transaction processing …","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","This module’s contribution to the next consensus proposal","","This function is called once all transactions have been …","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Handler for the API call that takes the following …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Retrieve the current status of the output. Depending on …","Path under which the API endpoint can be reached. It …","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","Provides an interface to call APIs of other modules","Simulates a call to an API endpoint of another module. …","","Like <code>IPeerConnections</code> but with an ability to handle …","Connection manager that tries to keep connections open to …","Owned <code>MuxPeerConnections</code> trait object type","Owned <code>PeerConnections</code> trait object type","Removes a peer connection in case of misbehavior","Removes a peer connection in case of misbehavior","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Converts the struct to a <code>PeerConnection</code> trait object","Converts the struct to a <code>PeerConnection</code> trait object","Await receipt of a message from any connected peer.","Await receipt of a message from any connected peer.","Send a message to a specific peer.","Send a message to a specific destination at specific peer.","","","","","","","","","","","Removes a peer connection in case of misbehavior","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a fake link between <code>peer1</code> and <code>peer2</code> for test …","","","","","","","","","","","","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","A group of task working together","","","","","Blockingly locks this <code>RwLock</code> with shared read access.","Blockingly locks this <code>RwLock</code> with exclusive write access.","","","","","","","","","","","","","","","","","","","","","","","Did the future completed successfully (no panic)","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","","","","","","","","","Atomically downgrades a write lock into a read lock …","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns a mutable reference to the underlying data.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Consumes the lock, returning the underlying data.","Converts this <code>RwLockWriteGuard</code> into an …","","Is task group shutting down?","Was the shutdown requested, either externally or due to …","","","","Make a <code>oneshot::Receiver</code> that will fire on shutdown","Makes a new <code>RwLockReadGuard</code> for a component of the locked …","Makes a new <code>RwLockMappedWriteGuard</code> for a component of the …","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked.","","","","","","","","","Locks this <code>RwLock</code> with shared read access, causing the …","Locks this <code>RwLock</code> with shared read access, causing the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Attempts to make a new <code>RwLockReadGuard</code> for a component of …","Attempts to make  a new <code>RwLockMappedWriteGuard</code> for a …","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with shared read access.","Attempts to acquire this <code>RwLock</code> with exclusive write …","Attempts to acquire this <code>RwLock</code> with exclusive write …","","","","","","","","","","","","","","","","","Creates a new instance of an <code>RwLock&lt;T&gt;</code> which is unlocked …","Locks this <code>RwLock</code> with exclusive write access, causing the …","Locks this <code>RwLock</code> with exclusive write access, causing the …","An asynchronous reader-writer lock.","RAII structure used to release the shared read access of a …","RAII structure used to release the exclusive write access …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Returns a reference to the key of the specified tier","","","","","","","","","","","","","","Represents coins of different denominations.","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Creates a new MultiZip Iterator from <code>Coins</code> iterators. …","","","","Select coins with total amount of <em>at least</em> <code>amount</code>. If more …","","","","","","","","","","","","","","",""],"i":[0,0,167,167,0,167,167,24,0,0,0,0,0,0,0,24,1,0,0,0,1,1,167,2,2,2,167,2,2,2,0,2,2,13,1,14,24,6,2,13,1,14,24,6,6,0,2,2,13,1,14,6,2,13,1,14,6,2,13,1,6,0,2,13,1,14,6,2,13,1,14,6,2,13,1,14,6,0,0,168,2,2,13,1,14,6,1,0,0,2,2,0,167,2,2,13,1,14,6,2,2,2,13,13,1,1,14,14,24,24,6,2,2,13,13,1,1,14,24,24,24,6,2,2,13,1,14,6,167,2,2,167,2,1,1,1,167,2,2,2,1,1,167,2,13,1,14,6,2,2,13,1,14,24,6,167,2,0,168,1,0,0,0,1,0,168,14,2,13,1,6,0,24,1,1,6,1,0,2,13,1,14,6,0,24,1,1,1,0,168,0,0,2,13,1,14,6,2,2,13,1,14,6,2,13,1,14,24,13,168,2,2,13,1,14,24,6,2,13,1,14,24,6,14,2,13,1,14,24,6,2,13,1,14,24,6,2,0,0,44,44,44,44,44,44,44,44,44,44,44,44,0,0,0,48,56,0,0,0,0,0,0,0,48,57,57,48,0,49,0,0,56,49,0,0,48,0,0,0,45,62,62,47,45,53,54,50,55,56,57,49,59,48,60,62,47,45,53,54,50,55,56,57,49,59,48,60,47,60,60,60,50,53,54,50,55,56,57,49,59,48,60,53,54,50,55,56,57,49,59,48,60,47,53,54,50,55,56,57,48,60,169,45,53,54,50,55,48,47,47,62,54,53,54,50,55,56,57,49,59,48,60,62,47,45,53,54,50,50,55,55,56,57,49,59,48,60,170,48,48,47,47,54,47,53,47,62,47,45,53,54,50,55,56,57,49,59,48,60,62,54,45,53,47,45,54,62,47,45,47,45,47,59,45,45,45,0,59,0,53,54,50,55,56,57,48,60,169,47,47,59,47,59,73,73,51,170,48,48,53,54,50,55,56,57,49,59,48,60,55,62,47,45,53,54,50,55,56,57,49,59,48,60,62,47,45,53,54,50,55,56,57,49,59,48,60,62,47,45,53,54,50,55,56,57,49,59,48,60,53,73,62,47,45,53,54,50,55,56,57,49,59,48,60,0,74,74,0,74,74,74,0,74,74,74,74,74,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,171,0,75,172,173,174,175,75,75,171,75,81,82,83,84,85,86,171,75,81,82,83,84,85,86,0,172,173,174,175,75,81,82,83,84,75,81,82,83,84,75,75,81,82,83,84,85,86,75,81,82,83,84,85,86,75,81,82,83,84,85,86,75,176,177,176,177,176,177,176,177,81,82,83,84,81,82,83,84,75,75,172,173,174,175,0,75,81,82,83,84,172,173,174,175,0,75,81,82,83,84,171,75,75,81,81,82,82,83,83,84,84,85,86,75,81,82,83,84,75,75,75,75,75,75,81,82,83,84,86,171,75,81,82,83,84,85,86,172,173,174,175,178,179,180,181,75,75,0,86,75,75,75,75,75,0,75,86,75,75,81,82,83,84,75,81,82,83,84,171,75,81,82,83,84,85,86,171,75,81,82,83,84,85,86,75,171,75,81,82,83,84,85,86,171,75,81,82,83,84,85,86,75,0,0,182,0,182,182,183,96,96,96,96,183,96,183,96,183,96,183,96,96,96,96,96,182,96,183,182,96,96,96,96,96,0,0,0,0,0,0,184,184,184,184,185,184,184,184,184,102,98,102,98,184,185,98,98,184,184,98,184,98,184,98,184,98,102,98,102,184,102,98,102,102,98,98,102,98,185,186,184,184,98,102,98,102,98,102,98,184,184,102,98,121,187,0,0,0,0,0,0,0,0,0,0,113,0,0,113,187,30,0,0,121,0,187,30,30,188,111,112,113,110,101,30,111,112,113,110,101,30,110,110,189,101,111,112,110,101,101,0,101,111,112,113,110,30,30,111,112,113,110,110,101,101,30,190,191,101,101,101,111,112,113,110,101,30,111,112,0,30,30,189,189,189,189,101,189,189,0,192,193,110,30,111,112,113,110,101,30,111,112,113,110,101,30,111,112,113,110,101,30,111,0,0,0,0,0,0,0,0,0,0,111,112,113,110,101,30,30,30,194,195,194,195,0,0,0,0,117,120,117,118,119,120,117,118,119,118,120,117,118,117,117,119,117,118,119,120,117,118,119,120,117,118,119,120,117,120,118,118,118,118,118,118,118,118,118,118,120,117,118,119,120,117,118,119,118,120,117,118,119,120,117,118,119,0,121,0,0,121,0,0,0,121,122,123,124,125,126,121,122,123,124,125,126,121,121,122,123,124,125,126,122,123,124,125,126,122,123,124,125,126,126,0,122,123,124,125,126,121,122,123,124,125,126,122,122,123,123,124,124,125,125,126,121,122,123,124,125,126,122,122,123,123,124,124,125,125,126,121,121,122,123,124,125,126,121,122,123,124,125,126,121,122,123,124,125,126,0,0,0,0,0,0,0,0,0,0,121,122,123,124,125,126,0,0,0,0,0,0,0,0,0,17,17,0,196,197,127,127,17,17,17,17,17,0,0,17,17,17,0,0,17,17,17,17,17,0,0,0,0,198,198,0,0,0,198,0,0,0,104,198,198,199,199,199,0,199,200,0,0,198,97,103,97,198,0,198,198,198,0,198,198,129,198,103,99,97,129,104,103,99,97,129,104,198,97,97,129,198,201,198,97,97,97,129,104,104,103,99,97,129,104,104,199,99,97,0,103,99,97,129,104,200,129,198,129,129,198,99,104,103,104,201,97,104,201,103,99,97,129,104,103,99,97,129,104,103,99,97,129,104,201,198,198,103,99,97,129,104,0,0,105,133,105,133,105,105,133,105,133,105,133,105,105,133,133,105,133,105,133,105,133,105,133,105,133,105,0,100,0,0,0,0,0,202,203,134,69,134,69,69,69,134,69,134,0,134,69,134,69,202,203,202,203,202,203,69,134,69,134,69,134,69,134,69,0,135,135,135,135,135,0,135,135,135,135,135,135,135,135,135,135,0,0,0,0,0,0,0,0,0,137,137,144,145,143,130,136,138,139,137,144,145,143,130,136,138,139,137,137,139,130,136,130,136,144,137,137,138,139,143,130,137,138,139,139,139,144,138,139,145,145,143,130,136,138,138,139,139,137,144,145,143,130,136,138,139,137,137,137,137,0,144,130,136,130,144,145,143,130,136,138,139,137,137,139,144,136,143,143,130,130,136,138,139,138,139,137,144,130,137,136,143,139,139,139,139,139,145,137,137,138,139,137,143,130,130,0,0,130,130,0,130,136,145,138,139,144,145,143,130,136,138,139,137,144,145,143,130,136,138,139,137,138,139,137,137,137,137,144,145,143,130,136,138,139,137,144,145,143,130,136,138,139,137,137,137,137,0,0,0,0,137,138,139,138,139,137,139,138,139,137,0,0,0,0,0,0,0,158,159,158,159,158,159,158,159,158,159,159,158,159,158,159,159,158,159,158,158,158,159,158,159,158,158,159,159,158,158,158,158,159,158,158,159,159,158,159,158,159,158,159,158,0,0,166,166,165,166,165,165,165,165,165,165,165,165,165,165,165,165,166,165,165,165,165,165,165,166,165,166,165,165,165,165,165,166,165,166,165,166,165,165,165,165,165,165,165,165,165,166,165,166,165,166,165,166,165],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1]],[[1,1]],[[]],[[],2],[[],3],[2,4],[[]],[2],[2],[[],5],0,[[]],[2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[6,7],8],0,[[],[[12,[[11,[9,10]]]]]],[2,2],[13,13],[1,1],[14,14],[6,6],[[]],[[]],[[]],[[]],[[]],[[2,2],15],[[13,13],15],[[1,1],15],[[6,6],15],0,[16,[[12,[2,17]]]],[16,[[12,[13,17]]]],[16,[[12,[1,17]]]],[16,[[12,[14,17]]]],[16,[[12,[6,17]]]],[2,[[12,[5,18]]]],[13,[[12,[5,18]]]],[1,[[12,[5,18]]]],[14,[[12,[5,18]]]],[6,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],0,0,[[],5],[2],[20,[[12,[2]]]],[[],[[12,[13]]]],[[],[[12,[1]]]],[[],[[12,[14]]]],[[],[[12,[6]]]],[[1,1]],0,0,[[]],[[]],0,[[]],[[]],[[2,2],21],[[13,13],21],[[1,1],21],[[14,14],21],[[6,6],21],[[2,22],23],[[2,22],23],[[2,22],23],[[13,22],23],[[13,22],23],[[1,22],23],[[1,22],23],[[14,22],23],[[14,22],23],[[24,22],23],[[24,22],23],[[6,22],23],[4,2],[[]],[[]],[25,13],[8,1],[[]],[[]],[26,24],[27,24],[[]],[[]],[[],[[12,[28]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[[]],[[],2],[4,2],[[]],[[],2],[7,1],[7,1],[7,1],[[],[[12,[31]]]],[[],[[12,[2,31]]]],[[],[[12,[2,31]]]],[32,[[12,[2]]]],[32,[[12,[1]]]],[[32,33],[[12,[1,24]]]],[[]],[2],[13],[1],[14],[6],[[2,34]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2],0,[[],5],0,0,0,0,[[1,7]],0,[[],5],0,[[2,2],[[35,[15]]]],[[13,13],[[35,[15]]]],[[1,1],[[35,[15]]]],[[6,6],[[35,[15]]]],0,[36],[[1,1]],[[1,1]],0,[[1,1],1],0,[[2,37],12],[13,12],[1,12],[14,12],[6,12],0,[24,[[35,[38]]]],[[1,1]],[[1,1]],[39,1],0,[[],5],0,0,[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],41],[[]],[[]],[[]],[[]],[[]],[[],41],[[],41],[[],41],[[],41],[[],41],[13,5],[[],5],[[],[[12,[3,42]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[],12],0,0,[[]],[[]],[[44,22],23],[[44,22],23],[[]],[[]],[36],[[],41],[[],12],[[],12],[[],43],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[45,5]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[47,[46]],[48,[46]]],[[49,[46]]]],0,0,0,[50,[[52,[51]]]],[53,53],[54,54],[50,50],[55,55],[56,56],[57,57],[[[49,[[0,[58,46]]]]],[[49,[[0,[58,46]]]]]],[[[59,[58]]],[[59,[58]]]],[[[48,[[0,[58,46]]]]],[[48,[[0,[58,46]]]]]],[60,60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[12,[53]]]],[[],[[12,[54]]]],[[],[[12,[50]]]],[[],[[12,[55]]]],[[],[[12,[56]]]],[[],[[12,[57]]]],[[],[[12,[[48,[46]]]]]],[[],[[12,[60]]]],[20,12],0,[[53,53],21],[[54,54],21],[[50,50],21],[[55,55],21],[[[48,[[0,[61,46]]]],48],21],0,0,[[],62],0,[[53,22],23],[[54,22],23],[[50,22],23],[[55,22],23],[[56,22],23],[[57,22],23],[[[49,[[0,[63,46]]]],22],23],[[[59,[63]],22],23],[[[48,[[0,[63,46]]]],22],23],[[60,22],23],[[]],[[]],[[]],[[]],[[]],[64,50],[[]],[[]],[64,55],[[]],[[]],[[]],[[]],[[]],[[]],[57,52],[57,[[52,[[48,[65]]]]]],[57,[[52,[[48,[66]]]]]],0,[[[47,[46]]],46],[[54,32],[[52,[67]]]],[[[47,[46]],[11,[46]]],4],[53],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[11,5,13],45],0,[[46,13,[11,[13]],5]],[[5,13],45],0,0,0,0,0,0,0,0,[[45,68,46,69],[[71,[[70,[[59,[46]]]]]]]],[[45,68,69],[[71,[[70,[[59,[66]]]]]]]],[[45,68,69],[[71,[[70,[[59,[65]]]]]]]],[13,72],0,0,[53,12],[54,12],[50,12],[55,12],[56,12],[57,12],[[[48,[46]]],12],[60,12],[37,12],0,[[[47,[46]],13,[48,[46]]],[[49,[46]]]],[[[59,[65]]]],0,[[[59,[66]]]],[[],50],[[],55],[[],50],[[],57],[[[48,[65]]],57],[[[48,[66]]],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,[[52,[73]]]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],0,[13,52],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[20,[[12,[[11,[46]]]]]],[20,[[12,[[74,[46]]]]]],[[]],[[]],[37,12],[[[74,[46]],37],12],[[],12],[[],12],[[],43],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[75,76,77],[[12,[75,78]]]],[[],79],[[],79],[[],79],[[],79],[75,80],[75,80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],81],[[],82],[[],83],[[],84],[75,75],[81,81],[82,82],[83,83],[84,84],[[]],[[]],[[]],[[]],[[]],[[75,75],15],[16,[[12,[75,17]]]],[29,[[12,[81,17]]]],[29,[[12,[82,17]]]],[29,[[12,[83,17]]]],[29,[[12,[84,17]]]],[16,[[12,[85,17]]]],[29,[[12,[86,17]]]],[75,[[12,[5,18]]]],[81,[[12,[5,18]]]],[82,[[12,[5,18]]]],[83,[[12,[5,18]]]],[84,[[12,[5,18]]]],[85,[[12,[5,18]]]],[86,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[75,87],[88,[[12,[84,17]]]],[88,[[12,[84,17]]]],[88,[[12,[81,17]]]],[88,[[12,[81,17]]]],[88,[[12,[82,17]]]],[88,[[12,[82,17]]]],[88,[[12,[83,17]]]],[88,[[12,[83,17]]]],[81],[82],[83],[84],[81],[82],[83],[84],[[],[[12,[75]]]],[75,89],[[],7],[[],7],[[],7],[[],7],0,[[75,75],21],[[81,81],21],[[82,82],21],[[83,83],21],[[84,84],21],[81,21],[82,21],[83,21],[84,21],0,[[75,22],[[12,[90]]]],[[81,22],23],[[82,22],23],[[83,22],23],[[84,22],23],[[]],[87,75],[[]],[[],81],[[]],[[],82],[[]],[[],83],[[]],[[],84],[[]],[[]],[[]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[76,[[12,[75,78]]]],[[76,32],[[12,[75,78]]]],[32,[[12,[75,78]]]],[[76,91],75],[32,[[12,[75]]]],[75],[81],[82],[83],[84],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[76,75],[[],75],0,0,[[75,75],[[35,[15]]]],[75,92],[75],[75,91],[75,12],0,[[75,93],94],0,[[75,76,[35,[95]]],87],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[]],[[]],[[]],[[]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[75,76,77],[[12,[78]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75],0,0,0,0,0,0,[[],79],[[]],[[]],[96,96],[[]],[88,[[12,[84,17]]]],[[96,88],[[12,[84,17]]]],[88,[[12,[81,17]]]],[[96,88],[[12,[81,17]]]],[88,[[12,[82,17]]]],[[96,88],[[12,[82,17]]]],[88,[[12,[83,17]]]],[[96,88],[[12,[83,17]]]],[96],[[96,22],23],[[]],[[],96],[[],97],[[]],[[],68],[[],97],[[]],[[],12],[[],12],[[],43],[[]],[29,[[12,[17]]]],0,0,0,0,0,[[],32],[[],[[11,[[99,[98]]]]]],[[100,101,81,102],[[12,[103,104]]]],[[101,82,14],[[12,[97,104]]]],[[],79],[[],79],[105],[[],[[108,[[107,[106]]]]]],[[101,11],[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[],102],[[],102],[98,98],[[]],[[],[[108,[[107,[106]]]]]],[88,[[12,[84,17]]]],[[98,88],[[12,[84,17]]]],[88,[[12,[81,17]]]],[[98,88],[[12,[81,17]]]],[88,[[12,[82,17]]]],[[98,88],[[12,[82,17]]]],[88,[[12,[83,17]]]],[[98,88],[[12,[83,17]]]],[102],[98],[102],[[109,101],[[108,[[107,[106]]]]]],[[102,22],23],[[98,22],23],[[]],[[],102],[[],98],[[]],[[]],[[]],[[],68],[[],68],[[],68],[14,[[35,[83]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[100,102,81],[[12,[103,104]]]],[82,[[12,[97,104]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[110,110],[[]],[107,[[108,[[107,[106]]]]]],[101,52],[[],111],[[],112],[110],[101],[101],[110],[101,39],[[111,22],23],[[112,22],23],[[113,22],23],[[110,22],23],[[30,22],23],[[30,22],23],[[]],[[]],[[]],[[]],[[],110],[[]],[[],101],[[]],[[],[[52,[30]]]],[16,[[52,[30]]]],[101,[[52,[35]]]],[101,[[52,[35]]]],[101,[[52,[35]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[0,[38,114,115]]],30],[36],[[],116],[[],[[52,[[35,[[11,[40]]]]]]]],[[[11,[40]]],[[52,[[35,[[11,[40]]]]]]]],[[],[[52,[[35,[[11,[40]]]]]]]],[101,[[52,[35]]]],[[]],[[]],0,[[],[[11,[40]]]],[[],[[11,[40]]]],[[]],[[],41],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],0,[110],[110],[110],[110],[110],[110],[110],[110],[110],[110],[[]],[[]],[[]],[[]],[[]],[[]],[[5,5],30],[[40,40],30],0,0,0,0,0,0,0,0,[117,101],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[107,[118]]],[[108,[[107,[106]]]]]],0,0,0,[[],117],[117],[[119,119],21],[[117,22],23],[[118,22],23],[[119,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],117],[120,35],0,0,0,[118,116],[118,[[52,[[35,[[11,[40]]]]]]]],[[118,[11,[40]]],[[52,[[35,[[11,[40]]]]]]]],[118,[[52,[[35,[[11,[40]]]]]]]],[118],0,[118],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],0,[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[121,121],[[]],[16,[[12,[122,17]]]],[16,[[12,[123,17]]]],[16,[[12,[124,17]]]],[16,[[12,[125,17]]]],[16,[[12,[126,17]]]],[122,[[12,[5,18]]]],[123,[[12,[5,18]]]],[124,[[12,[5,18]]]],[125,[[12,[5,18]]]],[126,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[126,126],21],[110],[[122,22],23],[[123,22],23],[[124,22],23],[[125,22],23],[[126,22],23],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[12,[30]]]],[29,[[12,[30]]]],[[],[[12,[30]]]],[29,[[12,[30]]]],[29,[[12,[30]]]],[[],[[12,[30]]]],[29,[[12,[30]]]],[[],[[12,[30]]]],[29,[[12,[30]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[],[[11,[40,10]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[110],[110],[110],[110],[110],[110],[110],[110],[110],[110],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],0,[16,[[12,[17]]]],[[],[[12,[5,18]]]],[127,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[17,22],23],[[17,22],23],[[]],[[[0,[38,114,115]]],17],[32,17],0,0,[[]],[128,17],[36],0,0,[[],41],[[],12],[[],12],[[],43],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],32],0,[[],[[11,[99]]]],[[100,101],[[12,[103,104]]]],[[101,14],[[12,[97,104]]]],0,[105],[[],[[108,[[107,[106]]]]]],[41,129],[[101,11],[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[0,[39,114]]]],[97,97],[[]],0,[[],[[108,[[107,[106]]]]]],[[69,13,62,130],[[108,[[107,[106]]]]]],[[109,101],[[108,[[107,[106]]]]]],[[97,97],21],0,[[97,22],23],[[129,22],23],[[104,22],23],[[104,22],23],[[]],[[]],[[]],[[]],[[]],[128,104],[[],[[108,[[107,[106]]]]]],0,[97],0,[[]],[[]],[[]],[[]],[[]],[[]],0,[[],131],[[132,41],129],[41,129],[14,35],0,[36],0,[104,[[35,[38]]]],[55,[[52,[50]]]],[[]],[[],41],[62],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[],43],[[],43],[[],43],[[13,55],52],[100,[[12,[103,104]]]],[[],[[12,[97,104]]]],[[]],[[]],[[]],[[]],[[]],0,0,[[105,110]],[[]],[[]],[[]],[[]],[[],105],[[133,22],23],[[105,22],23],[[]],[[]],[[]],[[]],0,0,0,[105,133],[[],41],[[],41],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[]],[[]],0,[[32,41,64],[[108,[[107,[106]]]]]],0,0,0,0,0,[13,[[108,[[107,[106]]]]]],[13,[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[[69,[58,58]]],[[69,[58,58]]]],[[]],[134],[69],[134],0,[[]],[[]],[[]],[[]],[[],134],[[],69],[[],[[108,[[107,[106]]]]]],[[],[[108,[[107,[106]]]]]],[[],[[108,[[107,[106]]]]]],[[],[[108,[[107,[106]]]]]],[[]],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[]],[[]],0,[[135,13],[[108,[[107,[106]]]]]],[[]],[[]],[[]],[[]],[[13,13,5,136]],0,[135,[[108,[[107,[106]]]]]],0,[135,[[108,[[107,[106]]]]]],0,[[],12],[[],12],0,[[],43],[[]],0,0,0,0,0,0,0,0,[[]],[137,138],[137,139],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[7,140,140,141],7],[130,130],[136,136],[[]],[[]],0,[[],137],[142,137],0,0,[[],143],[[],130],[[],137],[138],[139],[139],[139,138],[144],[138],[139],[[145,22],23],[[145,22],23],[[143,22],23],[[130,22],23],[[136,22],23],[[138,22],[[12,[90]]]],[[138,22],[[12,[90]]]],[[139,22],[[12,[90]]]],[[139,22],[[12,[90]]]],[[137,22],[[12,[90]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[146],[[],137],[[]],[137],0,0,0,0,[130],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[137],[139,147],[144,21],[136,21],0,0,[130,52],[130,136],[136,148],[138,138],[139,147],0,0,0,0,[[],130],[[],137],[[136,[0,[149,114]]]],0,[7],[[]],0,[7],[[]],[36],[137,106],[[[150,[137]]],106],0,0,0,[143],[130],[130,52],[151],[152],[[130,[153,[41]],[0,[149,114]]]],[[130,[153,[41]],149]],[151,[[12,[145]]]],[[]],[[]],[[],41],[[],41],[[],41],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[[],12],[138,[[12,[138,138]]]],[139,[[12,[147,139]]]],[137,[[12,[138,154]]]],[[[150,[137]]],[[12,[155,154]]]],[137,[[12,[139,154]]]],[[[150,[137]]],[[12,[156,154]]]],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[],43],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[142,137],[137,106],[[[150,[137]]],106],0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,[151],[152],[[],[[35,[157]]]],[[],[[35,[157]]]],[151,[[12,[145]]]],0,0,[158,29],[[]],[[]],[[]],[[]],[159,159],[[[158,[58]]],[[158,[58]]]],[[]],[[]],[[159,159],15],[[],[[12,[159]]]],[[],[[12,[158]]]],[[159,159],21],[[[158,[61]],158],21],[[159,22],23],[[159,22],23],[[[158,[63]],22],23],[[]],[[]],[160,158],[[158,1],35],[159],[[[158,[161]]]],[[]],[[]],[158,39],[[159,159],[[35,[15]]]],[159,12],[158,12],[[158,158],21],[[158,1],[[12,[159]]]],[158,162],[[]],[[]],[[[158,[163]]],[[158,[164]]]],[[],41],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[165,158],[[12,[159]]]],[[[165,[58]]],[[165,[58]]]],[[]],[16,[[12,[165,17]]]],[165,[[12,[5,18]]]],[19,[[12,[5,18]]]],[[],165],[[],[[12,[165]]]],[[[165,[61]],165],21],[[165,160]],[[[165,[63]],22],23],[[]],[[]],[29,[[12,[30]]]],[160,165],[[165,1],[[35,[11]]]],[[165,1],[[35,[11]]]],[[[165,[161]]]],[[]],[[]],[[]],[165],[165,21],[165,5],[165,[[0,[39,162]]]],[165,39],0,[165,[[12,[165]]]],[11,166],[[[29,[1,11]]],165],[166,35],[[1,158],165],[[165,1],[[35,[165]]]],[165,12],[[165,165],21],[165,5],[165,39],[[],[[11,[40,10]]]],[[]],[165,1],[[],12],[[],12],[[],12],[[],12],[[],43],[[],43],[[]],[[]]],"p":[[3,"Amount"],[3,"TransactionId"],[3,"BitSlice"],[3,"Hash"],[15,"usize"],[3,"Feerate"],[15,"u64"],[3,"Amount"],[3,"u5"],[3,"Global"],[3,"Vec"],[4,"Result"],[3,"PeerId"],[3,"OutPoint"],[4,"Ordering"],[6,"ModuleRegistry"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[8,"Deserializer"],[15,"bool"],[3,"Formatter"],[6,"Result"],[4,"ParseAmountError"],[15,"u16"],[4,"ParseAmountError"],[3,"ParseIntError"],[4,"Error"],[3,"BTreeMap"],[4,"DecodingError"],[4,"Error"],[15,"str"],[4,"Denomination"],[8,"SliceIndex"],[4,"Option"],[3,"Demand"],[8,"Serializer"],[8,"Error"],[8,"Iterator"],[15,"u8"],[3,"String"],[4,"BitSpanError"],[3,"TypeId"],[3,"Cancelled"],[3,"DkgRunner"],[8,"DkgGroup"],[3,"Dkg"],[4,"DkgMessage"],[4,"DkgStep"],[3,"ClientModuleConfig"],[8,"TypedClientModuleConfig"],[6,"Result"],[3,"Node"],[3,"ClientConfig"],[3,"ServerModuleConfig"],[4,"DkgPeerMsg"],[4,"SupportedDkgMessage"],[8,"Clone"],[3,"DkgKeys"],[3,"BitcoindRpcCfg"],[8,"PartialEq"],[3,"ModuleConfigGenParams"],[8,"Debug"],[4,"Value"],[3,"G2Projective"],[3,"G1Projective"],[8,"DeserializeOwned"],[6,"ModuleKey"],[3,"MuxPeerConnections"],[3,"HashMap"],[6,"Cancellable"],[3,"Scalar"],[8,"TypedServerModuleConfig"],[3,"Wrap"],[3,"KeyPair"],[3,"Secp256k1"],[3,"Scalar"],[4,"Error"],[8,"Any"],[3,"KeyPair"],[3,"Input"],[3,"Output"],[3,"OutputOutcome"],[3,"ConsensusItem"],[3,"Signature"],[3,"Transaction"],[3,"TweakedKeyPair"],[8,"Read"],[3,"DisplaySecret"],[3,"Error"],[3,"SecretKey"],[3,"PublicKey"],[3,"Message"],[3,"Signature"],[3,"TapBranchHash"],[3,"ClientModule"],[3,"TransactionItemAmount"],[3,"ServerModule"],[3,"ApiEndpoint"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[3,"VerificationCache"],[3,"InputMeta"],[4,"ModuleError"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"HashSet"],[3,"Database"],[3,"DatabaseInsertOperation"],[3,"DatabaseDeleteOperation"],[4,"DatabaseOperation"],[8,"Send"],[8,"Sync"],[6,"PrefixIter"],[3,"MemDatabase"],[3,"MemTransaction"],[3,"DummyError"],[3,"MemDbIter"],[4,"TestDbKeyPrefix"],[3,"TestKey"],[3,"DbPrefixTestPrefix"],[3,"AltTestKey"],[3,"AltDbPrefixTestPrefix"],[3,"TestVal"],[8,"DynEncodable"],[3,"Error"],[3,"ApiError"],[3,"TaskGroup"],[6,"ModuleKey"],[15,"i32"],[3,"AuditItem"],[3,"PeerConnections"],[3,"FakePeerConnections"],[3,"TaskHandle"],[3,"RwLock"],[3,"RwLockReadGuard"],[3,"RwLockWriteGuard"],[3,"NodeId"],[3,"ChannelUsage"],[15,"u32"],[3,"TaskGroupInner"],[3,"TaskPanicGuard"],[3,"Elapsed"],[15,"never"],[3,"RwLockMappedWriteGuard"],[3,"Receiver"],[8,"FnOnce"],[3,"Arc"],[3,"Duration"],[3,"Instant"],[8,"Into"],[3,"TryLockError"],[3,"OwnedRwLockReadGuard"],[3,"OwnedRwLockWriteGuard"],[3,"JoinHandle"],[3,"Tiered"],[3,"InvalidAmountTierError"],[8,"IntoIterator"],[8,"Hash"],[8,"DoubleEndedIterator"],[3,"SecretKeyShare"],[3,"PublicKeyShare"],[3,"TieredMulti"],[3,"TieredMultiZip"],[8,"BitcoinHash"],[8,"NumPeers"],[8,"SGroup"],[8,"ISupportedDkgMessage"],[4,"FinalizationError"],[8,"ModuleInput"],[8,"ModuleOutput"],[8,"ModuleOutputOutcome"],[8,"ModuleConsensusItem"],[8,"PluginDecode"],[8,"ModuleDecode"],[8,"PluginInput"],[8,"PluginOutput"],[8,"PluginOutputOutcome"],[8,"PluginConsensusItem"],[8,"ClientModulePlugin"],[8,"IClientModule"],[8,"IServerModule"],[8,"ModuleVerificationCache"],[8,"PluginVerificationCache"],[8,"DatabaseKeyPrefixConst"],[8,"IDatabase"],[8,"IDatabaseTransaction"],[8,"DatabaseKey"],[8,"DatabaseValue"],[8,"DatabaseKeyPrefix"],[8,"SerializableDatabaseValue"],[13,"WrongPrefix"],[13,"WrongLength"],[8,"Decodable"],[8,"Encodable"],[8,"ServerModulePlugin"],[8,"TypedApiEndpoint"],[8,"IntoModuleError"],[8,"FederationModuleConfigGen"],[8,"IPeerConnections"],[8,"IMuxPeerConnections"]]},\
"fedimint_bitcoind":{"doc":"","t":[3,4,8,6,3,13,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,10,11,12,11,11,11,12,11,11,11,11,10,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,5,11,11,11,11,11,11,11,11,11,11],"n":["BitcoindRpc","Error","IBitcoindRpc","Result","RetryClient","Rpc","base_sleep","bitcoincore_rpc","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","deref","fmt","fmt","fmt","fmt","from","from","from","from","from","get_block","get_block","get_block_hash","get_block_hash","get_block_height","get_block_height","get_fee_rate","get_fee_rate","get_network","get_network","inner","into","into","into","max_retries","new","provide","retry_call","source","submit_transaction","submit_transaction","task_handle","to_owned","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Client","ErrorReporting","RPC_VERIFY_ALREADY_IN_CHAIN","borrow","borrow","borrow_mut","borrow_mut","call","fmt","fmt","from","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","inner","into","into","make_bitcoind_rpc","new","submit_transaction","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_bitcoind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_bitcoind::bitcoincore_rpc","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","Trait that allows interacting with the Bitcoin blockchain","","Wrapper around <code>IBitcoindRpc</code> that will retry failed calls","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the block with the given hash","","Returns the block hash at a given height","","Returns the current block height","","Estimates the fee rate for a given confirmation target. …","","Returns the Bitcoin network the node is connected to","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","Submits a transaction to the Bitcoin network","","","","","","","","","","","","","","","","","","Wrapper around <code>bitcoincore_rpc::Client</code> logging failures","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","",""],"i":[0,0,0,0,0,2,6,0,2,1,6,2,1,6,1,1,1,2,2,1,6,2,2,1,1,6,29,6,29,6,29,6,29,6,29,6,6,2,1,6,6,6,2,6,2,29,6,6,1,2,2,1,6,2,1,6,2,1,6,2,1,6,0,0,0,23,27,23,27,23,23,27,23,27,27,27,27,27,27,23,23,27,0,23,27,23,27,23,27,23,27,23,27],"f":[0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[1,1],[[]],[1],[[2,3],4],[[2,3],4],[[1,3],4],[[[6,[5]],3],4],[[]],[7,2],[[]],[[],1],[[]],[8,[[11,[[10,[9]]]]]],[[6,8],[[11,[[10,[9]]]]]],[12,[[11,[[10,[9]]]]]],[[6,12],[[11,[[10,[9]]]]]],[[],[[11,[[10,[9]]]]]],[6,[[11,[[10,[9]]]]]],[13,[[11,[[10,[9]]]]]],[[6,13],[[11,[[10,[9]]]]]],[[],[[11,[[10,[9]]]]]],[6,[[11,[[10,[9]]]]]],0,[[]],[[]],[[]],0,[14,6],[15],[6,16],[2,[[18,[17]]]],[19,[[11,[[10,[9]]]]]],[[6,19],[[11,[[10,[9]]]]]],0,[[]],[[],20],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[],22],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[23,24],[[26,[25]]]],[[[23,[5]],3],4],[[[27,[5]],3],4],[[]],[[]],[[27,8],[[11,[[10,[9]]]]]],[[27,12],[[11,[[10,[9]]]]]],[27,[[11,[[10,[9]]]]]],[[27,13],[[11,[[10,[9]]]]]],[27,[[11,[[10,[9]]]]]],0,[[]],[[]],[[28,14],[[16,[1]]]],[[],23],[[27,19],[[11,[[10,[9]]]]]],[[],21],[[],21],[[],21],[[],21],[[],22],[[],22],[[]],[[]]],"p":[[3,"BitcoindRpc"],[4,"Error"],[3,"Formatter"],[6,"Result"],[8,"Debug"],[3,"RetryClient"],[3,"Error"],[3,"BlockHash"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"u64"],[15,"u16"],[3,"TaskHandle"],[3,"Demand"],[6,"Result"],[8,"Error"],[4,"Option"],[3,"Transaction"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"ErrorReporting"],[15,"str"],[8,"Deserialize"],[6,"Result"],[3,"Client"],[3,"BitcoindRpcCfg"],[8,"IBitcoindRpc"]]},\
"fedimint_build":{"doc":"","t":[5],"n":["print_git_hash"],"q":["fedimint_build"],"d":[""],"i":[0],"f":[[[]]],"p":[]},\
"fedimint_cli":{"doc":"","t":[13,3,3,4,3,4,6,4,4,13,13,8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,3,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,12,10,11,12,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12],"n":["AlreadySpent","Cli","CliError","CliErrorKind","CliNoWorkdir","CliOutput","CliResult","Command","CommandNoWorkdir","ConnectInfo","ConnectInfo","ErrorHandler","Fetch","Fetch","GeneralFailure","GeneralFederationError","IOError","Info","Info","InsufficientBalance","InvalidValue","JoinFederation","JoinFederation","ListGateways","ListGateways","LnInvoice","LnInvoice","LnPay","LnPay","NetworkError","OSError","PayRequest","PegIn","PegIn","PegInAddress","PegInAddress","PegOut","PegOut","Reissue","Reissue","SerializationError","Spend","Spend","SwitchGateway","SwitchGateway","Timeout","Validate","Validate","VersionHash","VersionHash","VersionHash","WaitBlockHeight","WaitBlockHeight","WaitInvoice","WaitInvoice","augment_args","augment_args","augment_args_for_update","augment_args_for_update","augment_subcommands","augment_subcommands","augment_subcommands_for_update","augment_subcommands_for_update","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","coins","command","command","command","command","command_for_update","command_for_update","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","from_arg_matches_mut","group_id","group_id","handle_command","has_subcommand","has_subcommand","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","invoice","kind","main","message","or_terminate","provide","raw_error","serialize","serialize","serialize","serialize","to_string","to_string","transform","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","workdir","address","all_valid","connect_info","contract_id","details","details","gateways","hash","id","id","invoice","issuance","joined","new_gateway","num_gateways","paid_in_tx","reached","token","total_amount","total_num_notes","tx_id","address","amount","amount","bolt11","coins","coins","connect","description","expiry_time","height","invoice","pubkey","satoshis","transaction","txout_proof"],"q":["fedimint_clifedimint_cli::CliOutput","","","","","","","","","","","","","","","","","","","","","fedimint_cli::Command","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","Config enabling client to establish websocket connection …","","","Fetch (re-)issued notes and finalize issuance process","","","","","Display wallet info (holdings, tiers)","","","","Join a federation using it’s ConnectInfo","","List registered gateways","","Create a lightning invoice to receive payment via gateway","","Pay a lightning invoice via a gateway","","","","","Issue tokens in exchange for a peg-in proof (not yet …","","Generate a new peg-in address, funds sent to it can later …","","Withdraw funds from the federation","","Reissue tokens received from a third party to avoid double …","","","Prepare notes to send to a third party as a payment","","Switch active gateway","","","Validate tokens without claiming them (only checks if …","","Print the latest git commit hash this bin. was build with","Print the latest git commit hash this bin. was build with","","Wait for the fed to reach a consensus block height","","Wait for incoming invoice to be paid","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The working directory of the client containing the config …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","node public key for a gateway","","",""],"i":[3,0,0,0,0,0,0,0,0,6,19,0,6,19,3,3,3,6,19,3,3,6,19,6,19,6,19,6,19,3,3,0,6,19,6,19,6,19,6,19,3,6,19,6,19,3,6,19,6,18,19,6,19,6,19,15,17,15,17,18,19,18,19,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,5,15,17,15,17,15,17,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,3,5,6,3,9,15,17,18,19,5,6,3,9,9,5,6,3,9,9,15,17,18,19,5,15,17,18,19,15,17,18,19,15,17,0,18,19,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,5,9,0,9,28,9,9,6,3,9,5,6,9,28,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,6,3,9,15,17,18,19,5,15,17,18,19,15,17,18,19,6,3,9,15,17,18,19,5,15,29,30,31,32,30,33,34,35,36,37,38,39,40,41,34,42,43,44,33,33,45,46,47,48,49,50,51,52,48,48,53,54,55,46,56,56],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],1],[[],1],0,0,[[],1],[[],1],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[2],[[],[[4,[3]]]],[[],[[4,[5]]]],[2],[2],[2],[2],[2],[2],[2],[2],[[6,7],8],[[3,7],8],[[9,7],8],[[9,7],8],[[5,7],8],[[]],[[]],[[3,10,[13,[[12,[11]]]]],9],[[]],[[]],[[]],[[]],[[]],[[]],[14,[[4,[15,16]]]],[14,[[4,[17,16]]]],[14,[[4,[18,16]]]],[14,[[4,[19,16]]]],[14,[[4,[15,16]]]],[14,[[4,[17,16]]]],[14,[[4,[18,16]]]],[14,[[4,[19,16]]]],[[],[[13,[20]]]],[[],[[13,[20]]]],[[15,[22,[21]],23],[[4,[6,9]]]],[10,24],[10,24],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[],2],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],0,[[3,10]],[25],0,[6,4],[3,4],[9,4],[5,4],[[],26],[[],26],[[3,10],[[4,[6,9]]]],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],4],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[15,14],[[4,[16]]]],[[17,14],[[4,[16]]]],[[18,14],[[4,[16]]]],[[19,14],[[4,[16]]]],[[15,14],[[4,[16]]]],[[17,14],[[4,[16]]]],[[18,14],[[4,[16]]]],[[19,14],[[4,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[4,"CliErrorKind"],[4,"Result"],[3,"PayRequest"],[4,"CliOutput"],[3,"Formatter"],[6,"Result"],[3,"CliError"],[15,"str"],[8,"Error"],[3,"Box"],[4,"Option"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[3,"CliNoWorkdir"],[4,"CommandNoWorkdir"],[4,"Command"],[3,"Id"],[3,"UserClientConfig"],[3,"Client"],[3,"OsRng"],[15,"bool"],[3,"Demand"],[3,"String"],[3,"TypeId"],[8,"ErrorHandler"],[13,"PegInAddress"],[13,"Validate"],[13,"ConnectInfo"],[13,"LnPay"],[13,"Info"],[13,"ListGateways"],[13,"VersionHash"],[13,"PegIn"],[13,"Reissue"],[13,"LnInvoice"],[13,"Fetch"],[13,"JoinFederation"],[13,"SwitchGateway"],[13,"WaitInvoice"],[13,"WaitBlockHeight"],[13,"Spend"],[13,"PegOut"],[13,"PegOut"],[13,"Spend"],[13,"LnInvoice"],[13,"LnPay"],[13,"Reissue"],[13,"Validate"],[13,"JoinFederation"],[13,"WaitBlockHeight"],[13,"WaitInvoice"],[13,"SwitchGateway"],[13,"PegIn"]]},\
"fedimint_client":{"doc":"This is a sketch/frame of future “modularized” …","t":[],"n":[],"q":[],"d":[],"i":[],"f":[],"p":[]},\
"fedimint_core":{"doc":"","t":[4,13,13,11,11,0,11,11,11,0,11,11,11,11,11,11,0,0,11,11,0,11,11,11,11,5,0,5,5,4,3,13,3,3,4,13,13,13,8,13,13,13,13,13,3,3,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,2,2,2,13,13,13,4,13,3,4,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,12,12,4,13,13,13,13,13,13,4,3,3,4,13,13,13,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,5,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["CoreError","MismatchingVariant","PendingPreimage","borrow","borrow_mut","config","deref","deref_mut","drop","epoch","fmt","fmt","from","init","into","is_retryable","modules","outcome","provide","to_string","transaction","try_from","try_into","type_id","vzip","load_from_file","serde_binary_human_readable","deserialize","serialize","ConsensusItem","EpochHistory","EpochInfo","EpochSignature","EpochSignatureShare","EpochVerifyError","InvalidEpochHash","InvalidPreviousEpochHash","InvalidSignature","IterUnzipConsensusItem","LN","Mint","MissingPreviousEpoch","MissingSignature","NotEnoughValidSigShares","OutcomeHistory","SerdeConsensusItem","SerdeEpochHistory","Transaction","UnzipConsensusItem","Wallet","add_sig_to_prev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_info","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","items","last_hash","ln","mint","new","outcome","serialize","serialize","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_inner","try_into_inner","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_consensus_item","verify_hash","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","ln","mint","wallet","Accepted","LN","Mint","OutputOutcome","Rejected","SerdeOutputOutcome","TransactionStatus","TryIntoOutcome","Wallet","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","fmt","fmt","fmt","from","from","from","from","from_bytes","hash","hash","hash","init","init","init","into","into","into","serialize","serialize","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_inner","try_into_outcome","try_into_variant","type_id","type_id","type_id","vzip","vzip","vzip","epoch","outputs","Input","InvalidSignature","LN","LN","Mint","Mint","MissingSignature","Output","SerdeTransaction","Transaction","TransactionError","UnbalancedTransaction","Wallet","Wallet","agg_keys","agg_sign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","init","init","init","init","init","inputs","into","into","into","into","into","new_pre_session","outputs","provide","serialize","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_inner","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","type_id","type_id","validate_signature","vzip","vzip","vzip","vzip","vzip","fee","inputs","outputs"],"q":["fedimint_core","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::config","","fedimint_core::config::serde_binary_human_readable","","fedimint_core::epochfedimint_core::modules","","","fedimint_core::outcome","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::outcome::TransactionStatus","","fedimint_core::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_core::transaction::TransactionError","",""],"d":["","","","","","Fedimint toplevel config","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The transaction was accepted and is now being processed","","","","The rejected state is only recorded if the error happens …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","An Input consumed by a Transaction is defined within a …","","","","","","","","","An atomic value transfer operation within the Fedimint …","","","","","Aggregate a stream of public keys.","Create an aggregated signature over the <code>msg</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Precompute a combined public key and the hash of the given …","<code>Output</code>s created as a result of the transaction","","","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","","","Validate the aggregated Schnorr Signature signed over the …","","","","","","","",""],"i":[0,2,2,2,2,0,2,2,2,0,2,2,2,2,2,2,0,0,2,2,0,2,2,2,2,0,0,0,0,0,0,17,0,0,0,16,16,16,0,17,17,16,16,16,0,0,0,17,0,17,14,17,36,18,19,20,14,21,22,16,17,36,18,19,20,14,21,22,16,17,18,19,20,14,21,22,17,18,19,20,14,21,22,17,19,20,14,22,17,19,20,14,22,17,19,20,14,22,17,36,18,19,20,14,21,22,16,17,36,18,19,20,14,21,22,16,18,19,20,21,17,36,18,19,20,14,21,22,16,22,36,17,18,19,20,14,21,22,16,17,18,19,20,14,21,22,16,17,36,18,18,19,20,14,21,21,22,16,17,19,20,14,22,17,18,19,20,14,21,22,22,14,17,36,18,19,20,14,21,22,16,17,36,18,19,20,14,21,22,16,22,22,36,36,14,14,18,19,20,21,14,17,19,20,14,22,17,18,19,20,14,21,22,36,17,36,18,19,20,14,21,22,16,17,36,18,19,20,14,21,22,16,18,21,17,36,18,19,20,14,21,22,16,53,14,14,17,36,18,19,20,14,21,22,16,36,0,0,0,38,39,39,0,38,0,0,0,39,38,39,40,38,39,40,38,39,40,38,39,40,39,39,39,38,39,40,38,39,40,38,40,38,39,40,38,39,40,38,39,40,38,39,40,40,39,38,39,40,38,39,40,38,39,40,38,40,39,38,39,40,38,39,40,38,39,40,40,41,39,38,39,40,38,39,40,54,54,0,49,47,48,47,48,49,0,0,0,0,49,47,48,0,0,45,46,47,48,49,45,46,47,48,49,45,46,47,48,45,46,47,48,45,47,48,45,47,48,45,47,48,45,46,47,48,49,45,46,47,48,49,46,47,48,45,46,47,48,49,45,46,47,48,45,46,47,48,49,49,45,46,46,47,48,49,45,47,48,45,46,47,48,45,46,47,48,49,45,45,46,47,48,49,0,45,49,46,47,48,45,45,47,48,45,46,47,48,49,45,46,47,48,49,45,46,47,48,49,46,45,45,45,46,47,48,49,45,45,46,47,48,49,55,55,55],"f":[0,0,0,[[]],[[]],0,[1],[1],[1],0,[[2,3],4],[[2,3],4],[[]],[[],1],[[]],[2,5],0,0,[6],[[],7],0,[[],8],[[],8],[[],9],[[]],[10,11],0,[12,[[8,[11]]]],[13,8],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[14,15,14],[[8,[14,16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[17,17],[18,18],[19,19],[20,20],[14,14],[21,21],[22,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[23,[[8,[17,24]]]],[23,[[8,[19,24]]]],[23,[[8,[20,24]]]],[23,[[8,[14,24]]]],[23,[[8,[22,24]]]],[17,[[8,[1,25]]]],[19,[[8,[1,25]]]],[20,[[8,[1,25]]]],[14,[[8,[1,25]]]],[22,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[8,[18]]]],[[],[[8,[19]]]],[[],[[8,[20]]]],[[],[[8,[21]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,[[17,17],5],[[18,18],5],[[19,19],5],[[20,20],5],[[14,14],5],[[21,21],5],[[22,22],5],[[16,16],5],[[17,3],4],[[18,3],4],[[19,3],4],[[20,3],4],[[14,3],4],[[21,3],4],[[22,3],4],[[16,3],4],[[]],[[]],[[]],[17,18],[[]],[[]],[[]],[[]],[14,21],[[]],[[]],[27,[[8,[28]]]],[27,[[8,[28]]]],[27,[[8,[28]]]],[27,[[8,[28]]]],[27,[[8,[28]]]],[17],[18],[19],[20],[14],[21],[22,29],[22],0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[30,[27,[31,[32,[17]]]],33],14],0,[18,8],[19,8],[20,8],[21,8],0,[[],[[32,[34,35]]]],[[],[[32,[34,35]]]],[[],[[32,[34,35]]]],[[],[[32,[34,35]]]],[[],[[32,[34,35]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[18,23],[[8,[17,24]]]],[[21,23],[[8,[14,24]]]],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],9],[[],36],[[14,33],[[8,[16]]]],[[14,37],[[8,[16]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[38,38],[39,39],[40,40],[[]],[[]],[[]],[23,[[8,[39,24]]]],[39,[[8,[1,25]]]],[26,[[8,[1,25]]]],[1],[1],[1],[1],[1],[1],[[],[[8,[38]]]],[[],[[8,[40]]]],[1],[1],[1],[[38,38],5],[[39,39],5],[[40,40],5],[[38,3],4],[[39,3],4],[[40,3],4],[[]],[[]],[[]],[39,40],[27,[[8,[28]]]],[38],[39],[40],[[],1],[[],1],[[],1],[[]],[[]],[[]],[38,8],[40,8],[[],[[32,[34,35]]]],[[]],[[]],[[]],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[40,23],[[8,[39,24]]]],[39,[[8,[2]]]],[39,[[8,[41,2]]]],[[],9],[[],9],[[],9],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],42],[43,44],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[45,45],[46,46],[47,47],[48,48],[[]],[[]],[[]],[[]],[23,[[8,[45,24]]]],[23,[[8,[47,24]]]],[23,[[8,[48,24]]]],[45,[[8,[1,25]]]],[47,[[8,[1,25]]]],[48,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[26,[[8,[1,25]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[8,[46]]]],[[],[[8,[47]]]],[[],[[8,[48]]]],[1],[1],[1],[1],[1],[[45,45],5],[[46,46],5],[[47,47],5],[[48,48],5],[[45,3],4],[[46,3],4],[[47,3],4],[[48,3],4],[[49,3],4],[[49,3],4],[[]],[45,46],[[]],[[]],[[]],[[]],[27,[[8,[28]]]],[27,[[8,[28]]]],[27,[[8,[28]]]],[45],[46],[47],[48],[[],1],[[],1],[[],1],[[],1],[[],1],0,[[]],[[]],[[]],[[]],[[]],[43,50],0,[6],[46,8],[47,8],[48,8],0,[[],[[32,[34,35]]]],[[],[[32,[34,35]]]],[[],[[32,[34,35]]]],[[]],[[]],[[]],[[]],[[],7],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[],8],[[46,23],[[8,[45,24]]]],[45,51],[[],51],[[],9],[[],9],[[],9],[[],9],[[],9],[[45,52],[[8,[49]]]],[[]],[[]],[[]],[[]],[[]],0,0,0],"p":[[15,"usize"],[4,"CoreError"],[3,"Formatter"],[6,"Result"],[15,"bool"],[3,"Demand"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"Path"],[8,"DeserializeOwned"],[8,"Deserializer"],[8,"Serializer"],[3,"EpochHistory"],[3,"PublicKeySet"],[4,"EpochVerifyError"],[4,"ConsensusItem"],[3,"SerdeConsensusItem"],[3,"EpochSignatureShare"],[3,"EpochSignature"],[3,"SerdeEpochHistory"],[3,"OutcomeHistory"],[6,"ModuleRegistry"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[3,"BTreeMap"],[4,"DecodingError"],[3,"Hash"],[15,"u64"],[3,"PeerId"],[3,"Vec"],[4,"Option"],[15,"u8"],[3,"Global"],[3,"UnzipConsensusItem"],[3,"PublicKey"],[4,"TransactionStatus"],[4,"OutputOutcome"],[3,"SerdeOutputOutcome"],[8,"TryIntoOutcome"],[3,"XOnlyPublicKey"],[3,"Secp256k1"],[3,"Signature"],[3,"Transaction"],[3,"SerdeTransaction"],[4,"Input"],[4,"Output"],[4,"TransactionError"],[3,"MusigKeyAggCache"],[3,"TransactionId"],[8,"Iterator"],[8,"IterUnzipConsensusItem"],[13,"Accepted"],[13,"UnbalancedTransaction"]]},\
"fedimint_derive":{"doc":"","t":[24,24,24],"n":["Decodable","Encodable","UnzipConsensus"],"q":["fedimint_derive","",""],"d":["","",""],"i":[0,0,0],"f":[0,0,0],"p":[]},\
"fedimint_ln":{"doc":"Lightning Module","t":[13,13,13,3,13,3,13,13,13,13,13,3,3,3,3,3,4,4,4,3,13,13,13,13,13,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,3,4,4,3,4,8,13,13,13,13,13,13,13,3,13,3,3,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,12,12,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,12,11,12,11,11,11,11,11,12,11,13,3,3,13,3,3,13,3,4,13,3,3,13,3,3,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CancelOutgoing","Contract","Contract","ContractAccount","ContractNotReady","ContractOutput","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","LightningConsensusItem","LightningGateway","LightningInput","LightningModule","LightningModuleConfigGen","LightningModuleError","LightningOutput","LightningOutputOutcome","LightningVerificationCache","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","UnknownContract","ZeroOutput","amount","amount","amount","api","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","contract","contract","contract_id","contract_id","contracts","db","db","decode_consensus_item","decode_input","decode_output","decode_output_outcome","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_eq","erased_eq","erased_eq","erased_eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_contract_account","get_offer","get_offers","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","list_gateways","mint_pub_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new","node_pub_key","output_status","output_status","provide","register_gateway","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","share","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","validate_decryption_share","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","contract","gateway_signature","id","id","outcome","LIGHTNING_MODULE_KEY","LightningModuleDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_input","decode_output","decode_output_outcome","default","from","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","LightningModuleClientConfig","LightningModuleConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contract_input","contract_output","default","deserialize","deserialize","deserialize","eq","eq","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_client_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","Account","Account","Account","AccountContractOutcome","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifyableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","Some","account","all_zeros","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","into","into","into","into","into","into","into","into","into","into","into_inner","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","AccountContract","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deserialize","eq","fmt","from","from_bytes","hash","into","key","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","FundedIncomingContract","IncomingContract","IncomingContractOffer","OfferId","all_zeros","amount","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","decrypted_preimage","deref","deserialize","deserialize","deserialize","deserialize","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","id","index","into","into","into","into","into_inner","out_point","partial_cmp","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","CANCELLATION_TAG","OutgoingContract","borrow","borrow_mut","cancellation_message","cancelled","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deserialize","eq","fmt","from","from_bytes","gateway_key","hash","hash","into","invoice","serialize","timelock","to_bytes","to_owned","try_from","try_into","type_id","user_key","vzip","AgreedDecryptionShare","AgreedDecryptionShareKey","AgreedDecryptionShareKeyPrefix","Contract","ContractKey","ContractKeyPrefix","ContractUpdate","ContractUpdateKey","DbKeyPrefix","LightningGateway","LightningGatewayKey","LightningGatewayKeyPrefix","Offer","OfferKey","OfferKeyPrefix","ProposeDecryptionShare","ProposeDecryptionShareKey","ProposeDecryptionShareKeyPrefix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_lnfedimint_ln::LightningOutput","","fedimint_ln::LightningOutputOutcome","","","fedimint_ln::common","","","","","","","","","","","","","","","","","","fedimint_ln::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::account","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::contracts::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_ln::dbd":["Allow early refund of outgoing contract","Fund contract","","","","","","","","","","","","","The lightning module implements an account system. It does …","","","Represents an output of the Lightning module.","","","","","","Creat incoming contract offer","","","","While for now we only support spending the entire contract …","","","","","","","","","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","","","","","","","","Queries the database and returns all assets and …","","Blocks until a new <code>consensus_proposal</code> is available.","","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","Contract to update","Signature of gateway","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","The decrypted preimage was valid","","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","","Create a Schnorr public key from this preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic contract to hold money in a pub key locked …","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","Creates this type from the inner hash type.","","","","","Key that can unlock contract in case the decrypted …","","","","","","Payment hash which’s corresponding preimage is being sold","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","Returns the argument unchanged.","","Public key of the LN gateway allowed to claim the HTLC …","","Hash that can be used to spend the output before the …","Calls <code>U::from(self)</code>.","Invoice containing metadata on how to obtain the preimage","","Block height at which the money will be spendable by the …","","","","","","Public key of the user that can claim the money back after …","","","Preimage decryption shares we received","Preimage decryption shares we received","","","","","","","","","","","","","","","Our preimage decryption shares that still need to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[25,25,29,0,48,0,48,48,48,48,48,0,0,0,0,0,0,0,0,0,48,48,48,25,29,48,48,24,26,27,30,2,2,2,2,2,2,2,2,2,24,25,29,32,33,2,2,2,2,2,2,0,40,2,24,25,26,27,29,30,32,33,48,40,2,24,25,26,27,29,30,32,33,48,2,2,2,24,24,25,25,26,27,29,29,30,32,32,33,33,24,25,26,27,29,30,32,33,0,0,24,25,26,27,29,30,32,33,24,25,26,27,29,30,32,33,24,25,26,27,29,30,32,33,2,2,26,27,24,32,0,0,2,2,2,2,2,24,25,26,27,29,30,32,33,40,24,25,29,32,2,2,24,25,26,27,29,30,32,33,48,24,25,29,32,2,24,25,26,27,29,30,32,33,48,48,40,2,24,25,26,27,29,30,32,33,48,24,25,26,27,29,30,32,33,2,2,2,24,25,26,27,29,30,32,33,40,2,24,25,26,27,29,30,32,33,48,2,30,2,2,24,24,25,25,29,29,32,32,33,33,2,30,2,2,48,2,24,25,26,27,29,30,32,33,32,24,25,26,27,29,30,32,33,40,24,25,26,27,29,30,32,33,48,40,40,2,24,25,26,27,29,30,32,33,48,40,2,24,25,26,27,29,30,32,33,48,40,2,24,25,26,27,29,30,32,33,48,40,2,2,2,2,2,40,2,24,25,26,27,29,30,32,33,48,24,110,110,111,112,111,0,0,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,71,0,0,0,60,72,73,60,72,73,60,72,73,60,72,73,73,73,73,60,72,73,72,73,60,72,60,72,73,60,72,73,72,73,60,72,73,60,72,73,60,72,60,60,60,60,72,73,60,72,73,60,72,73,60,72,73,60,60,72,73,76,77,78,0,0,0,0,0,0,0,0,76,77,78,82,76,77,78,0,82,0,0,82,0,53,53,53,53,53,53,53,53,76,77,78,79,80,81,82,70,69,53,76,77,78,79,80,81,82,70,69,53,53,76,77,78,79,80,81,82,70,69,53,76,77,78,79,80,81,82,70,69,53,53,76,77,78,79,80,81,82,70,69,53,76,77,78,79,80,81,82,70,69,53,76,77,78,79,80,81,82,70,69,113,76,77,53,53,76,77,78,79,80,81,82,70,69,53,53,53,53,76,77,78,79,80,81,82,70,69,53,53,53,76,77,78,79,80,81,82,70,69,53,53,76,77,78,79,80,81,82,70,69,53,53,76,77,78,79,80,81,82,70,69,53,53,53,53,53,53,53,76,77,78,79,80,81,82,70,69,0,53,53,76,77,78,79,80,81,82,70,69,53,70,0,53,53,76,77,78,79,80,81,82,70,69,53,76,77,78,79,80,81,82,70,69,76,53,76,53,76,77,78,79,80,81,82,70,69,81,53,53,53,76,77,78,79,80,81,82,70,69,53,76,77,78,79,80,81,82,70,69,53,76,77,78,79,80,81,82,70,69,53,76,77,78,79,80,81,82,70,69,53,0,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,93,0,0,0,0,94,56,94,94,94,94,94,56,95,96,94,94,56,95,96,94,94,56,95,96,94,56,95,96,94,94,56,95,96,94,56,95,96,94,56,95,96,94,96,95,95,94,56,95,96,94,94,94,56,95,94,56,95,96,94,56,56,95,96,94,94,94,56,95,96,94,94,94,56,95,96,94,94,94,94,94,94,94,95,56,95,96,94,56,95,56,94,56,95,96,94,94,96,94,56,95,96,94,56,95,96,94,94,56,95,96,94,94,94,56,95,96,94,56,95,96,94,56,95,96,94,56,95,96,94,94,0,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,98,0,0,98,0,0,98,0,0,98,0,0,98,0,0,98,0,0,98,99,100,101,102,103,104,108,105,109,106,107,98,99,100,101,102,103,104,108,105,109,106,107,98,99,100,98,99,100,99,100,101,102,103,104,105,106,107,99,100,101,102,103,104,108,105,109,106,107,99,100,101,102,103,104,108,105,109,106,107,99,100,101,102,103,104,108,105,109,106,107,98,99,100,101,102,103,104,108,105,109,106,107,99,99,100,100,101,101,102,102,103,103,104,104,105,105,106,106,107,107,98,99,100,101,102,103,104,108,105,109,106,107,99,99,100,100,101,101,102,102,103,103,104,104,108,108,105,105,109,109,106,106,107,107,98,99,100,98,99,100,101,102,103,104,108,105,109,106,107,98,99,100,101,102,103,104,108,105,109,106,107,98,99,100,101,102,103,104,108,105,109,106,107,98,99,100,101,102,103,104,108,105,109,106,107],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],1],[2,1],[[],[[6,[[4,[3]],5]]]],[2,[[6,[[4,[2]]]]]],[[2,7,8],[[11,[9,10]]]],[[7,8,12,13],[[11,[9,10]]]],[[8,14,15],[[11,[16,10]]]],[[2,8,15],[[11,[16,10]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[18],[[2,18]],[[],[[21,[[20,[19,5]]]]]],[2,[[21,[[20,[19]]]]]],[[8,[6,[5]]],[[21,[[20,[19,5]]]]]],[[2,8,6],[[21,[[20,[19]]]]]],[7,22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[2,23]],[[],13],0,[24,24],[[],12],[25,25],[[],14],[26,26],[27,27],[[],28],[29,29],[30,30],[[],31],[32,32],[33,33],[[],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[34,[[11,[24,35]]]],[34,[[11,[25,35]]]],[34,[[11,[26,35]]]],[34,[[11,[27,35]]]],[34,[[11,[29,35]]]],[34,[[11,[30,35]]]],[34,[[11,[32,35]]]],[34,[[11,[33,35]]]],[24,[[11,[36,37]]]],[25,[[11,[36,37]]]],[26,[[11,[36,37]]]],[27,[[11,[36,37]]]],[29,[[11,[36,37]]]],[30,[[11,[36,37]]]],[32,[[11,[36,37]]]],[33,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[2,[[21,[[20,[19]]]]]],[[],[[21,[[20,[19,5]]]]]],0,0,0,0,0,0,0,[39,[[11,[31,35]]]],[39,[[11,[12,35]]]],[39,[[11,[14,35]]]],[39,[[11,[28,35]]]],[[],[[11,[24]]]],[[],[[11,[25]]]],[[],[[11,[26]]]],[[],[[11,[27]]]],[[],[[11,[29]]]],[[],[[11,[30]]]],[[],[[11,[32]]]],[[],[[11,[33]]]],[[40,41,42,43,44],[[21,[[20,[19]]]]]],[[],45],[[],45],[[],45],[[],45],[[46,8],[[21,[[20,[19,5]]]]]],[[2,46,8],[[21,[[20,[19]]]]]],[[24,24],47],[[25,25],47],[[26,26],47],[[27,27],47],[[29,29],47],[[30,30],47],[[32,32],47],[[33,33],47],[[48,48],47],[12,47],[14,47],[28,47],[31,47],[[2,49],50],[[24,49],50],[[25,49],50],[[26,49],50],[[27,49],50],[[29,49],50],[[30,49],50],[[32,49],50],[[33,49],50],[[48,49],50],[[48,49],50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[[2,53],[[54,[27]]]],[[2,55],[[54,[56]]]],[2,[[6,[56]]]],[24],[25],[26],[27],[29],[30],[32],[33],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[2,[[6,[30]]]],0,[[],57],[2,58],[[],57],[24,59],[[],57],[25,59],[29,59],[[],57],[32,59],[[],57],[33,59],[[],57],[[60,61],2],0,[15,[[54,[28]]]],[[2,15],54],[62],[[2,30]],[24,11],[25,11],[26,11],[27,11],[29,11],[30,11],[32,11],[33,11],0,[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[40,64],[[66,[65]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],67],[[40,43]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[40,42,64],66],[[2,42,69,70],47],[[2,7],[[11,[9,10]]]],[[7,13,12],[[11,[9,10]]]],[14,[[11,[16,10]]]],[2,[[11,[16,10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[71,71],[[]],[39,[[11,[31,35]]]],[39,[[11,[12,35]]]],[39,[[11,[14,35]]]],[39,[[11,[28,35]]]],[[],71],[[]],[[]],[[]],[[],11],[[],11],[[],68],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[60,60],[72,72],[73,73],[[]],[[]],[[]],0,0,[[],73],[[],[[11,[60]]]],[[],[[11,[72]]]],[[],[[11,[73]]]],[[72,72],47],[[73,73],47],0,0,[[60,49],50],[[72,49],50],[[73,49],50],[[]],[[]],[[]],[72],[73],[[]],[[]],[[]],[60,11],[72,11],[73,11],0,0,0,0,[60,65],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],68],[[],68],[[],68],[[60,42],66],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],53],[[],74],[53,55],[53],[53],[[],36],[[]],[53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[[6,[75,5]]]]]],[53,53],[76,76],[77,77],[78,78],[79,79],[80,80],[81,81],[82,82],[70,70],[69,69],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[53,53],83],[34,[[11,[53,35]]]],[34,[[11,[76,35]]]],[34,[[11,[77,35]]]],[34,[[11,[78,35]]]],[34,[[11,[79,35]]]],[34,[[11,[80,35]]]],[34,[[11,[81,35]]]],[34,[[11,[82,35]]]],[34,[[11,[70,35]]]],[34,[[11,[69,35]]]],[53,[[11,[36,37]]]],[76,[[11,[36,37]]]],[77,[[11,[36,37]]]],[78,[[11,[36,37]]]],[79,[[11,[36,37]]]],[80,[[11,[36,37]]]],[81,[[11,[36,37]]]],[82,[[11,[36,37]]]],[70,[[11,[36,37]]]],[69,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[[],53],[76,53],[77,53],[53],[84,[[11,[53]]]],[[],[[11,[76]]]],[[],[[11,[77]]]],[[],[[11,[78]]]],[[],[[11,[79]]]],[[],[[11,[80]]]],[[],[[11,[81]]]],[[],[[11,[82]]]],[[],[[11,[70]]]],[[],[[11,[69]]]],[[]],[[]],[[]],[[53,53],47],[[76,76],47],[[77,77],47],[[78,78],47],[[79,79],47],[[80,80],47],[[81,81],47],[[82,82],47],[[70,70],47],[[69,69],47],[[53,49],50],[[53,49],50],[[53,49],50],[[76,49],50],[[77,49],50],[[78,49],50],[[79,49],50],[[80,49],50],[[81,49],50],[[82,49],50],[[70,49],50],[[69,49],50],[[]],[55,53],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[85]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[[],53],[55,53],[[],53],[[],[[11,[53,86]]]],[[],[[11,[53,86]]]],[1,[[11,[53]]]],[53],[76],[77],[78],[79],[80],[81],[82],[70],[69],0,[[53,87]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[53],[[81,88],70],0,[[53,53],[[54,[83]]]],[[53,89],11],[76,11],[77,11],[78,11],[79,11],[80,11],[81,11],[82,11],[70,11],[69,11],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[76,15],77],[[],67],[76,78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[81,[[11,[90,91]]]],[[],67],[[],[[11,[74,92]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],11],0,[[]],[[]],[93,93],[[]],[34,[[11,[93,35]]]],[93,[[11,[36,37]]]],[38,[[11,[36,37]]]],[93,53],[[],[[11,[93]]]],[[93,93],47],[[93,49],50],[[]],[51,[[11,[52]]]],[93],[[]],0,[93,11],[[],[[6,[63,5]]]],[[]],[[],11],[[],11],[[],68],[[]],0,0,0,0,[[],94],0,[[],74],[94,55],[94],[94],[[],36],[[]],[[]],[[]],[94],[[]],[[]],[[]],[[]],[[]],[[],[[11,[[6,[75,5]]]]]],[56,56],[95,95],[96,96],[94,94],[[]],[[]],[[]],[[]],[[94,94],83],[34,[[11,[56,35]]]],[34,[[11,[95,35]]]],[34,[[11,[96,35]]]],[34,[[11,[94,35]]]],[56,[[11,[36,37]]]],[95,[[11,[36,37]]]],[96,[[11,[36,37]]]],[94,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],0,[95,53],0,[94],[[],[[11,[56]]]],[[],[[11,[95]]]],[[],[[11,[96]]]],[84,[[11,[94]]]],[[]],[[]],0,0,[[]],[[56,56],47],[[95,95],47],[[96,96],47],[[94,94],47],0,[[56,49],50],[[95,49],50],[[96,49],50],[[94,49],50],[[94,49],50],[[94,49],50],[[]],[[]],[[]],[55,94],[[]],[[],[[11,[85]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[[],94],[55,94],[[],94],[[],[[11,[94,86]]]],[[],[[11,[94,86]]]],[1,[[11,[94]]]],0,[56],[95],[96],[94],0,0,[56,94],[[94,87]],[[]],[[]],[[]],[[]],[94],0,[[94,94],[[54,[83]]]],[56,11],[95,11],[96,11],[[94,89],11],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],67],[[]],[[]],[[]],[[]],[[],67],[[],[[11,[74,92]]]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],68],[[],68],[[],68],[[],68],[[]],[[]],[[]],[[]],[[],11],0,0,[[]],[[]],[97,55],0,[97,97],[[]],[34,[[11,[97,35]]]],[97,[[11,[36,37]]]],[38,[[11,[36,37]]]],[97,53],[[],[[11,[97]]]],[[97,97],47],[[97,49],50],[[]],[51,[[11,[52]]]],0,[97],0,[[]],0,[97,11],0,[[],[[6,[63,5]]]],[[]],[[],11],[[],11],[[],68],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[98,98],[99,99],[100,100],[[]],[[]],[[]],[34,[[11,[99,35]]]],[34,[[11,[100,35]]]],[34,[[11,[101,35]]]],[34,[[11,[102,35]]]],[34,[[11,[103,35]]]],[34,[[11,[104,35]]]],[34,[[11,[105,35]]]],[34,[[11,[106,35]]]],[34,[[11,[107,35]]]],[99,[[11,[36,37]]]],[100,[[11,[36,37]]]],[101,[[11,[36,37]]]],[102,[[11,[36,37]]]],[103,[[11,[36,37]]]],[104,[[11,[36,37]]]],[108,[[11,[36,37]]]],[105,[[11,[36,37]]]],[109,[[11,[36,37]]]],[106,[[11,[36,37]]]],[107,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[38,[[11,[36,37]]]],[[99,49],50],[[100,49],50],[[101,49],50],[[102,49],50],[[103,49],50],[[104,49],50],[[108,49],50],[[105,49],50],[[109,49],50],[[106,49],50],[[107,49],50],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[51,[[11,[52]]]],[[],[[11,[52]]]],[51,[[11,[52]]]],[[],[[11,[52]]]],[[],[[11,[52]]]],[51,[[11,[52]]]],[[],[[11,[52]]]],[51,[[11,[52]]]],[51,[[11,[52]]]],[[],[[11,[52]]]],[51,[[11,[52]]]],[[],[[11,[52]]]],[51,[[11,[52]]]],[[],[[11,[52]]]],[[],[[11,[52]]]],[51,[[11,[52]]]],[[],[[11,[52]]]],[51,[[11,[52]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[],[[6,[63,5]]]],[[]],[[]],[[]],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],11],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[],68],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[15,"str"],[3,"LightningModule"],[3,"ServerModule"],[3,"ApiEndpoint"],[3,"Global"],[3,"Vec"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[3,"InputMeta"],[4,"ModuleError"],[4,"Result"],[3,"Input"],[3,"VerificationCache"],[3,"Output"],[3,"OutPoint"],[3,"TransactionItemAmount"],[8,"Any"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[15,"u32"],[8,"Iterator"],[3,"LightningInput"],[4,"LightningOutput"],[3,"ContractOutput"],[3,"ContractAccount"],[3,"OutputOutcome"],[4,"LightningOutputOutcome"],[3,"LightningGateway"],[3,"ConsensusItem"],[3,"LightningConsensusItem"],[3,"LightningVerificationCache"],[6,"ModuleRegistry"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[8,"Read"],[3,"LightningModuleConfigGen"],[3,"MuxPeerConnections"],[3,"PeerId"],[3,"ModuleConfigGenParams"],[3,"TaskGroup"],[15,"u64"],[3,"HashSet"],[15,"bool"],[4,"LightningModuleError"],[3,"Formatter"],[6,"Result"],[3,"BTreeMap"],[4,"DecodingError"],[3,"ContractId"],[4,"Option"],[3,"Hash"],[3,"IncomingContractOffer"],[15,"u16"],[6,"ModuleKey"],[6,"ModuleKey"],[3,"LightningModuleConfig"],[3,"Database"],[3,"Demand"],[15,"u8"],[3,"ServerModuleConfig"],[3,"ClientModuleConfig"],[6,"Result"],[3,"String"],[3,"TypeId"],[3,"PreimageDecryptionShare"],[3,"EncryptedPreimage"],[3,"LightningModuleDecoder"],[3,"LightningModuleClientConfig"],[3,"FeeConsensus"],[3,"BitSlice"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[4,"ContractOutcome"],[3,"AccountContractOutcome"],[3,"OutgoingContractOutcome"],[3,"Preimage"],[4,"DecryptedPreimage"],[4,"Ordering"],[8,"Deserializer"],[4,"Error"],[4,"Error"],[8,"SliceIndex"],[3,"PublicKey"],[8,"Serializer"],[3,"XOnlyPublicKey"],[4,"Error"],[4,"BitSpanError"],[3,"AccountContract"],[3,"OfferId"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[4,"DbKeyPrefix"],[3,"ContractKey"],[3,"ContractKeyPrefix"],[3,"ContractUpdateKey"],[3,"OfferKey"],[3,"OfferKeyPrefix"],[3,"ProposeDecryptionShareKey"],[3,"AgreedDecryptionShareKey"],[3,"LightningGatewayKey"],[3,"LightningGatewayKeyPrefix"],[3,"ProposeDecryptionShareKeyPrefix"],[3,"AgreedDecryptionShareKeyPrefix"],[13,"CancelOutgoing"],[13,"Contract"],[13,"Offer"],[8,"IdentifyableContract"]]},\
"fedimint_mint":{"doc":"","tn":["BlindNonce","CombineError","DifferentNonce","DifferentStructureSigShare","InvalidAmountTier","InvalidAmountTier","InvalidCoin","InvalidSignature","InvalidSignature","Mint","MintConfigGenerator","MintConsensusItem","MintError","MintInput","MintOutput","MintOutputOutcome","MintShareErrors","MultiplePeerContributions","NoOwnContribution","Nonce","Note","PartialSigResponse","PartiallySignedRequest","PeerErrorType","SigResponse","SignRequest","SpentCoin","TooFewCoins","TooFewShares","TooFewValidShares","VerificationCache","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","blind_sign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","db","db","decode_consensus_item","decode_input","decode_output","decode_output_outcome","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_eq","erased_eq","erased_eq","erased_eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new","out_point","output_status","output_status","partial_signature","process_partial_signature","provide","provide","pub_key","pub_key","pub_key_shares","sec_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","spend_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_coins","validate_config","validate_input","validate_input","validate_output","validate_output","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MINT_MODULE_KEY","MintModuleDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_input","decode_output","decode_output_outcome","default","deref","deref_mut","drop","from","init","into","to_owned","try_from","try_into","type_id","vzip","FeeConsensus","MintClientConfig","MintConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coin_issuance_abs","coin_spend_abs","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","peer_tbs_pks","serialize","serialize","serialize","tbs_pks","tbs_sks","threshold","to_client_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","CoinNonce","DbKeyPrefix","Issuance","IssuanceTotal","MintAuditItem","MintAuditItemKey","MintAuditItemKeyPrefix","NonceKey","OutputOutcome","OutputOutcomeKey","ProposedPartialSig","ProposedPartialSignatureKey","ProposedPartialSignaturesKeyPrefix","ReceivedPartialSig","ReceivedPartialSignatureKey","ReceivedPartialSignatureKeyOutputPrefix","ReceivedPartialSignaturesKeyPrefix","Redemption","RedemptionTotal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","peer_id","request_id","request_id","request_id","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":["fedimint_mintfedimint_mint::common","","","","","","","","","","","","","","","","","","","","","","fedimint_mint::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_mint::dbd":["<code>Nonce</code> but blinded by the user key","","","","","","","","","Data structures taking into account different amount tiers …","","","","","","","Represents an array of mint indexes that delivered faulty …","","","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","Blind signature share for a <code>SignRequest</code>","","","Blind signature for a <code>SignRequest</code>","Request to blind sign a certain amount of coins","","","","","","","","","","Try to spend a transaction input. On success all necessary …","","","Try to create an output (e.g. issue coins, peg-out BTC, …","","","","","","","","Queries the database and returns all assets and …","","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Constructs a new mint","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","Validate a transaction output before submitting it to the …","","Verify the coin’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Represents the amounts of issued (signed) and redeemed …","","","","Transaction id and output index identifying an output …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,41,41,41,25,25,41,25,0,0,0,0,0,0,0,0,42,42,0,0,0,0,0,0,0,25,25,42,42,0,1,1,1,1,1,1,1,1,1,33,34,35,37,39,1,1,1,1,1,1,1,50,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,50,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,1,1,1,28,29,24,30,31,32,22,33,33,34,34,35,35,37,37,39,39,40,41,42,25,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,1,0,0,28,29,24,30,31,32,22,34,35,37,39,28,29,24,30,31,32,22,34,35,37,39,28,29,24,30,31,32,22,34,35,37,39,1,1,0,1,1,1,1,1,29,34,50,1,28,29,24,30,31,32,22,33,34,34,35,35,37,37,39,39,40,41,42,25,50,1,28,29,24,30,31,32,22,33,34,34,35,35,37,37,39,39,40,41,42,25,28,29,24,30,31,32,22,34,35,37,39,50,50,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,34,35,37,39,1,1,28,29,24,30,31,32,22,34,35,37,39,40,41,42,25,34,35,37,39,29,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,42,25,25,50,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,25,28,29,24,30,31,32,32,22,34,35,37,39,28,29,24,30,31,32,22,34,35,37,39,40,41,42,25,50,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,50,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,1,1,33,33,34,34,35,35,37,37,39,39,1,28,1,1,28,1,42,25,1,1,1,1,28,29,24,30,31,32,22,34,35,37,39,31,28,29,24,30,31,32,32,22,34,35,37,39,50,32,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,42,25,50,50,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,50,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,50,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,33,50,1,1,1,1,31,50,1,28,29,24,30,31,32,22,33,34,35,37,39,40,41,42,25,0,0,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,81,0,0,0,67,82,83,67,82,83,67,82,83,67,82,83,83,83,83,67,82,83,67,82,83,67,82,83,67,82,83,82,83,67,82,67,82,83,67,82,83,82,83,67,82,83,67,82,83,67,67,82,83,82,67,67,67,67,82,83,67,82,83,67,82,83,67,82,83,67,67,82,83,84,0,87,87,84,0,0,0,84,0,84,0,0,84,0,0,0,87,87,84,85,88,89,90,91,92,86,87,93,84,85,88,89,90,91,92,86,87,93,84,85,86,87,84,85,86,87,85,88,89,90,91,92,86,87,93,85,88,89,90,91,92,86,87,93,85,88,89,90,91,92,86,87,93,84,85,88,89,90,91,92,86,87,93,84,85,88,89,90,91,92,86,87,93,84,85,88,89,90,91,92,86,87,93,85,85,88,89,90,91,92,86,87,93,84,85,88,89,90,91,92,86,87,93,85,85,88,88,89,89,90,90,91,91,92,92,86,86,87,87,93,93,85,84,85,88,89,90,91,92,86,87,93,84,85,88,89,90,91,92,86,87,93,90,88,90,91,85,85,88,88,89,89,90,90,91,91,92,92,86,86,87,87,93,93,84,85,86,87,84,85,88,89,90,91,92,86,87,93,84,85,88,89,90,91,92,86,87,93,84,85,88,89,90,91,92,86,87,93,84,85,88,89,90,91,92,86,87,93],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],[[],2],[1,[[4,[[3,[1]]]]]],[[],[[4,[[3,[5]],6]]]],[[7,8,9,10],[[13,[11,12]]]],[[1,7,8],[[13,[11,12]]]],[[1,8,14],[[13,[15,12]]]],[[8,16,14],[[13,[15,12]]]],[[],17],[[],17],[[],17],[[],17],[[],17],[[],17],[[1,18]],[18],[1,[[21,[[20,[19]]]]]],[[],[[21,[[20,[19,6]]]]]],[[8,[4,[6]]],[[21,[[20,[19,6]]]]]],[[1,8,4],[[21,[[20,[19]]]]]],[[1,[23,[22]]],[[13,[24,25]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],10],[[1,[0,[26,27]]]],0,[28,28],[29,29],[24,24],[30,30],[31,31],[32,32],[22,22],[33,33],[[],10],[34,34],[[],9],[35,35],[[],16],[[],36],[37,37],[[],38],[39,39],[40,40],[41,41],[42,42],[25,25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[1,[43,[24]],4]],0,0,[44,[[13,[28,45]]]],[44,[[13,[29,45]]]],[44,[[13,[24,45]]]],[44,[[13,[30,45]]]],[44,[[13,[31,45]]]],[44,[[13,[32,45]]]],[44,[[13,[22,45]]]],[44,[[13,[34,45]]]],[44,[[13,[35,45]]]],[44,[[13,[37,45]]]],[44,[[13,[39,45]]]],[28,[[13,[46,47]]]],[29,[[13,[46,47]]]],[24,[[13,[46,47]]]],[30,[[13,[46,47]]]],[31,[[13,[46,47]]]],[32,[[13,[46,47]]]],[22,[[13,[46,47]]]],[34,[[13,[46,47]]]],[35,[[13,[46,47]]]],[37,[[13,[46,47]]]],[39,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[[],[[21,[[20,[19,6]]]]]],[1,[[21,[[20,[19]]]]]],0,0,[49,[[13,[38,45]]]],[49,[[13,[9,45]]]],[49,[[13,[16,45]]]],[49,[[13,[36,45]]]],[[],29],[[],34],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[34],[46],[46],[35],[46],[37],[39],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[34],[46],[35],[46],[46],[37],[46],[39],[46],[46],[46],[46],[[],[[13,[28]]]],[[],[[13,[29]]]],[[],[[13,[24]]]],[[],[[13,[30]]]],[[],[[13,[31]]]],[[],[[13,[32]]]],[[],[[13,[22]]]],[[],[[13,[34]]]],[[],[[13,[35]]]],[[],[[13,[37]]]],[[],[[13,[39]]]],[[50,51,52,53,54],[[21,[[20,[19]]]]]],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[[],55],[[],55],[[],55],[[],55],[[1,56,8],[[21,[[20,[19]]]]]],[[56,8],[[21,[[20,[19,6]]]]]],[[28,28],57],[[29,29],57],[[24,24],57],[[30,30],57],[[31,31],57],[[32,32],57],[[22,22],57],[[34,34],57],[[35,35],57],[[37,37],57],[[39,39],57],[[40,40],57],[[41,41],57],[[42,42],57],[[25,25],57],[9,57],[16,57],[36,57],[38,57],[[29,58]],[[1,59],60],[[28,59],60],[[29,59],60],[[24,59],60],[[30,59],60],[[31,59],60],[[32,59],60],[[22,59],60],[[33,59],60],[[34,59],60],[[35,59],60],[[37,59],60],[[39,59],60],[[40,59],60],[[41,59],60],[[42,59],60],[[42,59],60],[[25,59],60],[[25,59],60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[61,25],[[]],[62,[[13,[63]]]],[62,[[13,[63]]]],[62,[[13,[63]]]],[62,[[13,[63]]]],[62,[[13,[63]]]],[62,[[13,[63]]]],[[],32],[62,[[13,[63]]]],[62,[[13,[63]]]],[62,[[13,[63]]]],[62,[[13,[63]]]],[62,[[13,[63]]]],[28],[29],[24],[30],[31],[32],[22],[34],[35],[37],[39],[40],[41],[42],[25],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,64],[[],65],[33,66],[[],65],[34,66],[[],65],[[],65],[35,66],[37,66],[[],65],[[],65],[39,66],[[67,68],1],0,[14,[[43,[36]]]],[[1,14],43],0,[[1,8,52,14,24]],[69],[69],[1,[[72,[70,71]]]],0,0,0,[28,13],[29,13],[24,13],[30,13],[31,13],[32,13],[22,13],[34,13],[35,13],[37,13],[39,13],[31,73],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[32,[[4,[74]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[50,75],[[77,[76]]]],[32,78],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],79],[[],79],[[50,53]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],0,[[50,52,75],77],[[7,10,9],[[13,[11,12]]]],[[1,7],[[13,[11,12]]]],[16,[[13,[15,12]]]],[1,[[13,[15,12]]]],[[31,71],57],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[81,81],[[]],[49,[[13,[38,45]]]],[49,[[13,[9,45]]]],[49,[[13,[16,45]]]],[49,[[13,[36,45]]]],[[],81],[46],[46],[46],[[]],[[],46],[[]],[[]],[[],13],[[],13],[[],80],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[67,67],[82,82],[83,83],[[]],[[]],[[]],0,0,[[],83],[46],[46],[46],[46],[46],[46],[[],[[13,[67]]]],[[],[[13,[82]]]],[[],[[13,[83]]]],[46],[46],[46],[[82,82],57],[[83,83],57],0,0,[[67,59],60],[[82,59],60],[[83,59],60],[[]],[[]],[[]],[82],[83],[[],46],[[],46],[[],46],[[]],[[]],[[]],0,[67,13],[82,13],[83,13],0,0,0,[67,76],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],80],[[],80],[[],80],[[67,52],77],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[84,84],[85,85],[86,86],[87,87],[[]],[[]],[[]],[[]],[44,[[13,[85,45]]]],[44,[[13,[88,45]]]],[44,[[13,[89,45]]]],[44,[[13,[90,45]]]],[44,[[13,[91,45]]]],[44,[[13,[92,45]]]],[44,[[13,[86,45]]]],[44,[[13,[87,45]]]],[44,[[13,[93,45]]]],[85,[[13,[46,47]]]],[88,[[13,[46,47]]]],[89,[[13,[46,47]]]],[90,[[13,[46,47]]]],[91,[[13,[46,47]]]],[92,[[13,[46,47]]]],[86,[[13,[46,47]]]],[87,[[13,[46,47]]]],[93,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[48,[[13,[46,47]]]],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[46],[[85,85],57],[[85,59],60],[[88,59],60],[[89,59],60],[[90,59],60],[[91,59],60],[[92,59],60],[[86,59],60],[[87,59],60],[[93,59],60],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[62,[[13,[63]]]],[[],[[13,[63]]]],[[],[[13,[63]]]],[62,[[13,[63]]]],[[],[[13,[63]]]],[62,[[13,[63]]]],[62,[[13,[63]]]],[[],[[13,[63]]]],[[],[[13,[63]]]],[62,[[13,[63]]]],[[],[[13,[63]]]],[62,[[13,[63]]]],[[],[[13,[63]]]],[62,[[13,[63]]]],[62,[[13,[63]]]],[[],[[13,[63]]]],[62,[[13,[63]]]],[[],[[13,[63]]]],[85],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[],46],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[],[[4,[74,6]]]],[[]],[[]],[[]],[[]],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],13],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[],80],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]]],"p":[[3,"Mint"],[15,"str"],[3,"ApiEndpoint"],[3,"Vec"],[3,"ServerModule"],[3,"Global"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[3,"Input"],[3,"VerificationCache"],[3,"InputMeta"],[4,"ModuleError"],[4,"Result"],[3,"OutPoint"],[3,"TransactionItemAmount"],[3,"Output"],[8,"Any"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"BlindNonce"],[3,"TieredMulti"],[3,"PartialSigResponse"],[4,"MintError"],[8,"Iterator"],[8,"Send"],[3,"PartiallySignedRequest"],[3,"SignRequest"],[3,"SigResponse"],[3,"Note"],[3,"Nonce"],[3,"VerificationCache"],[3,"MintInput"],[3,"MintOutput"],[3,"OutputOutcome"],[3,"MintOutputOutcome"],[3,"ConsensusItem"],[3,"MintConsensusItem"],[3,"MintShareErrors"],[4,"PeerErrorType"],[4,"CombineError"],[4,"Option"],[6,"ModuleRegistry"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[8,"Read"],[3,"MintConfigGenerator"],[3,"MuxPeerConnections"],[3,"PeerId"],[3,"ModuleConfigGenParams"],[3,"TaskGroup"],[15,"u64"],[3,"HashSet"],[15,"bool"],[8,"IntoIterator"],[3,"Formatter"],[6,"Result"],[3,"InvalidAmountTierError"],[3,"BTreeMap"],[4,"DecodingError"],[6,"ModuleKey"],[15,"u16"],[6,"ModuleKey"],[3,"MintConfig"],[3,"Database"],[3,"Demand"],[3,"Amount"],[3,"AggregatePublicKey"],[3,"HashMap"],[3,"XOnlyPublicKey"],[15,"u8"],[3,"ServerModuleConfig"],[3,"ClientModuleConfig"],[6,"Result"],[3,"Message"],[3,"String"],[3,"TypeId"],[3,"MintModuleDecoder"],[3,"MintClientConfig"],[3,"FeeConsensus"],[4,"DbKeyPrefix"],[3,"NonceKey"],[3,"OutputOutcomeKey"],[4,"MintAuditItemKey"],[3,"ProposedPartialSignatureKey"],[3,"ProposedPartialSignaturesKeyPrefix"],[3,"ReceivedPartialSignatureKey"],[3,"ReceivedPartialSignatureKeyOutputPrefix"],[3,"ReceivedPartialSignaturesKeyPrefix"],[3,"MintAuditItemKeyPrefix"]]},\
"fedimint_rocksdb":{"doc":"","t":[3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11,11,11],"n":["RocksDb","RocksDbTransaction","begin_transaction","borrow","borrow","borrow_mut","borrow_mut","commit_tx","fmt","from","from","from","inner","into","into","open","raw_find_by_prefix","raw_get_bytes","raw_insert_bytes","raw_remove_entry","rocksdb","rollback_tx_to_savepoint","set_tx_savepoint","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_rocksdb","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","",""],"i":[0,0,1,3,1,3,1,3,1,3,1,1,1,3,1,1,3,3,3,3,0,3,3,3,1,3,1,3,1,3,1],"f":[0,0,[1,2],[[]],[[]],[[]],[[]],[[[4,[3]]],[[6,[[4,[5]]]]]],[[1,7],8],[[]],[[]],[9,1],[1,9],[[]],[[]],[[[11,[10]]],[[13,[1,12]]]],[3,14],[3,[[13,[[17,[[16,[15]]]]]]]],[[3,[16,[15]]],[[13,[[17,[[16,[15]]]]]]]],[3,[[13,[[17,[[16,[15]]]]]]]],0,[3],[3],[[],18],[[],18],[[],18],[[],18],[[],19],[[],19],[[]],[[]]],"p":[[3,"RocksDb"],[3,"DatabaseTransaction"],[3,"RocksDbTransaction"],[3,"Box"],[8,"Future"],[3,"Pin"],[3,"Formatter"],[6,"Result"],[6,"OptimisticTransactionDB"],[3,"Path"],[8,"AsRef"],[3,"Error"],[6,"Result"],[6,"PrefixIter"],[15,"u8"],[3,"Vec"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"fedimint_server":{"doc":"","t":[13,4,4,3,13,3,6,13,13,13,12,11,11,11,11,11,11,11,11,11,12,11,11,0,12,0,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,0,0,0,11,11,0,12,11,11,11,0,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,13,4,3,3,3,3,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,5,12,12,12,12,11,12,12,11,12,0,0,0,11,11,11,12,12,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,3,6,3,3,13,13,3,3,6,13,13,13,13,6,13,13,4,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,0,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,11,11,11,12,12,12,12,12,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,3,8,11,11,12,12,11,11,11,10,11,11,12,11,11,11,12,12,11,11,12,11,11,5,5,3,11,11,11,5,11,11,11,12,11,11,11,11,11,11,11,13,3,4,13,3,3,13,3,13,3,13,3,3,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,3,13,3,3,4,13,13,13,8,13,13,13,13,13,3,3,3,13,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,12,13,13,13,3,13,3,13,13,13,13,13,3,3,3,3,3,4,4,4,3,13,13,13,13,13,13,13,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,3,4,3,4,4,3,4,8,13,13,13,13,13,13,13,3,13,3,3,13,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,12,11,12,11,11,11,11,11,12,11,3,4,13,13,13,13,13,13,13,3,3,3,4,3,3,3,3,13,13,3,3,3,3,4,3,3,13,13,13,13,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,13,13,13,8,13,13,13,6,13,6,13,3,13,3,13,3,3,4,3,13,3,13,13,3,13,13,13,3,3,3,3,4,4,3,3,3,3,13,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,12,12,12,12,12,5,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,3,13,3,3,13,3,3,13,3,3,3,13,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,10,10,13,3,4,13,13,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,17,6,6,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,0,0,0,3,5,5,11,11,11,11,11,11,11,12,11,11,11,11,5,5,11,11,11,11,11,6,6,6,8,3,6,3,3,11,11,11,11,11,11,11,11,12,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,0,11,11,12,12,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,11,11,11,11,12,12,11,11,11,11,11,11,5,11,11,11,11,12,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,6,3,3,6,6,8,6,12,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,3,13,3,3,13,3,17,3,3,4,3,6,3,8,3,12,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,10,12,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,13,13,4,13,3,4,8,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,12,12,16,8,10,4,13,13,13,13,13,13,4,3,3,4,13,13,13,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["Continue","CoreError","EpochMessage","FedimintServer","MismatchingVariant","OsRngGen","PeerMessage","PendingPreimage","Rejoin","RejoinRequest","api","await_proposal_or_peer_message","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone_into","config","connections","consensus","consensus","db","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","determine_rejoin_epoch","download_history","drop","drop","drop","drop","epoch","fmt","fmt","fmt","from","from","from","from","get_rng","handle_message","hbbft","init","init","init","init","into","into","into","into","is_retryable","last_signed_epoch","module_parse_outcome","modules","multiplexed","net","new","new_with","outcome","peers","propose_epoch","provide","rejoin_consensus","rng","run","run_consensus","run_consensus_epoch","serialize","start_next_epoch","to_owned","to_string","transaction","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","Epoch","FederationeConfigGenParams","Hbbft","KeyType","Peer","PeerServerParams","ServerConfig","ServerConfigParams","address","amount_tiers","api","api_addr","api_bind_addr","base_port","bitcoin_rpc","bitcoind_rpc","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cert","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","connect","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","epoch_pk_set","epoch_sks","eq","equivalent","federation_name","federation_name","fmt","fmt","fmt","fmt","from","from","from","from","from","from","gen_cert_and_key","gen_local","gen_network","gen_params","get_incoming_count","get_module_config","hash","hbbft","hbbft","hbbft_bind_addr","hbbft_pk_set","hbbft_sks","identity","init","init","init","init","init","init","into","into","into","into","into","into","load_from_file","mint_amounts","modules","name","name","network_config","other","other","peers","peers","serde_binary_human_readable","serde_tls_cert","serde_tls_key","serialize","serialize","serialize","server_dkg","tls","tls_cert","tls_cert","tls_config","tls_key","to_client_config","to_owned","to_owned","to_owned","to_owned","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","vzip","vzip","vzip","deserialize","serialize","deserialize","serialize","deserialize","serialize","AcceptedTransaction","ConsensusOutcome","ConsensusOutcomeConversion","ConsensusProposal","ContractInputError","ContractOutputError","FedimintConsensus","FundingVerifier","HoneyBadgerMessage","InputCoinError","InputPegIn","OutputCoinError","OutputPegOut","SerdeConsensusOutcome","TransactionConflictError","TransactionError","TransactionSubmissionError","VerificationCaches","add_input","add_output","as_ref","as_ref","as_ref","as_ref","audit","await_consensus_proposal","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_interconnect","build_verification_caches","cfg","clone","clone","clone","clone_into","clone_into","clone_into","conflictfilter","consensus_decode","consensus_encode","consensus_encode_dyn","db","debug","default","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop_peers","epoch","epoch_history","eq","eq","equivalent","fee_amount","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","get_consensus_proposal","hash","init","init","init","init","init","init","init","input_amount","interconnect","into","into","into","into","into","into","into","items","ln","ln","mint","mint","modules","new","output_amount","process_consensus_outcome","process_transaction","provide","register_module","rng_gen","save_epoch_history","source","submit_transaction","to_bytes","to_owned","to_owned","to_owned","to_string","transaction","transaction_notify","transaction_status","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","verify_funding","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","wallet","ConflictFilter","ConflictFilterable","borrow","borrow_mut","coin_set","contract_set","deref","deref_mut","drop","filter_conflicts","from","init","inner_iter","into","partition","partitioned","peg_in_set","pegged_out","try_from","try_into","tx_accessor","type_id","vzip","epoch_message","item_message","FedimintInterconnect","borrow","borrow_mut","call","call_internal","deref","deref_mut","drop","fedimint","from","init","into","try_from","try_into","type_id","vzip","AcceptedTransaction","AcceptedTransactionKey","DbKeyPrefix","DropPeer","DropPeerKey","DropPeerKeyPrefix","EpochHistory","EpochHistoryKey","LastEpoch","LastEpochKey","ProposedTransaction","ProposedTransactionKey","ProposedTransactionKeyPrefix","RejectedTransaction","RejectedTransactionKey","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","ConsensusItem","EpochHistory","EpochInfo","EpochSignature","EpochSignatureShare","EpochVerifyError","InvalidEpochHash","InvalidPreviousEpochHash","InvalidSignature","IterUnzipConsensusItem","LN","Mint","MissingPreviousEpoch","MissingSignature","NotEnoughValidSigShares","OutcomeHistory","SerdeConsensusItem","SerdeEpochHistory","Transaction","UnzipConsensusItem","Wallet","add_sig_to_prev","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","epoch","epoch_info","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","items","last_hash","ln","mint","new","outcome","serialize","serialize","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_inner","try_into_inner","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_consensus_item","verify_hash","verify_sig","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","CancelOutgoing","Contract","Contract","ContractAccount","ContractNotReady","ContractOutput","InsufficientFunds","InsufficientIncomingFunding","InvalidCancellationSignature","InvalidEncryptedPreimage","InvalidPreimage","LightningConsensusItem","LightningGateway","LightningInput","LightningModule","LightningModuleConfigGen","LightningModuleError","LightningOutput","LightningOutputOutcome","LightningVerificationCache","MissingPreimage","NoOffer","NotOutgoingContract","Offer","Offer","UnknownContract","ZeroOutput","amount","amount","amount","api","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","contract","contract","contract_id","contract_id","contracts","db","decode_consensus_item","decode_input","decode_output","decode_output_outcome","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq","erased_eq","erased_eq","erased_eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_contract_account","get_offer","get_offers","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","list_gateways","mint_pub_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new","node_pub_key","output_status","output_status","provide","register_gateway","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","share","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","validate_config","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","witness","contract","gateway_signature","id","id","outcome","FeeConsensus","LightningModuleClientConfig","LightningModuleConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","contract_input","contract_output","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","serialize","serialize","serialize","threshold","threshold_pub_key","threshold_pub_keys","threshold_sec_key","to_client_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","Account","Account","Account","AccountContractOutcome","Contract","ContractId","ContractOutcome","DecryptedPreimage","EncryptedPreimage","FundedContract","IdentifyableContract","Incoming","Incoming","Incoming","Invalid","Outgoing","Outgoing","Outgoing","OutgoingContractOutcome","Pending","Preimage","PreimageDecryptionShare","Some","account","all_zeros","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract_id","contract_id","contract_id","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","encode_hex","encode_hex_upper","engine","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","incoming","index","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into_inner","new","outgoing","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_funded","to_hex","to_outcome","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_public_key","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","try_into_outcome","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write_base32","AccountContract","borrow","borrow_mut","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_bytes","hash","init","into","key","serialize","to_bytes","to_owned","try_from","try_into","type_id","vzip","FundedIncomingContract","IncomingContract","IncomingContractOffer","OfferId","all_zeros","amount","as_bits","as_hash","as_inner","as_ref","base32_len","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_base32","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","cmp","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","decrypted_preimage","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","encode_hex","encode_hex_upper","encrypted_preimage","encrypted_preimage","engine","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","expiry_time","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from_byte_iter","from_bytes","from_bytes","from_bytes","from_bytes","from_engine","from_hash","from_inner","from_slice","from_slice_delegated","from_str","gateway_key","hash","hash","hash","hash","hash","hash","id","index","init","init","init","init","into","into","into","into","into_inner","out_point","partial_cmp","serialize","serialize","serialize","serialize","to_bytes","to_bytes","to_bytes","to_bytes","to_hex","to_owned","to_owned","to_owned","to_owned","to_string","try_as_bits","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","write_base32","OutgoingContract","borrow","borrow_mut","cancellation_message","cancelled","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","contract_id","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_bytes","gateway_key","hash","hash","init","into","invoice","serialize","timelock","to_bytes","to_owned","try_from","try_into","type_id","user_key","vzip","BlindNonce","CombineError","DifferentNonce","DifferentStructureSigShare","InvalidAmountTier","InvalidAmountTier","InvalidCoin","InvalidSignature","InvalidSignature","Mint","MintConfigGenerator","MintConsensusItem","MintError","MintInput","MintOutput","MintOutputOutcome","MintShareErrors","MultiplePeerContributions","NoOwnContribution","Nonce","Note","PartialSigResponse","PartiallySignedRequest","PeerErrorType","SigResponse","SignRequest","SpentCoin","TooFewCoins","TooFewShares","TooFewValidShares","VerificationCache","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_verification_cache","build_verification_cache","cfg","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_proposal","consensus_proposal","db","decode_consensus_item","decode_input","decode_output","decode_output_outcome","default","default","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq","erased_eq","erased_eq","erased_eq","extend","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new","out_point","output_status","output_status","partial_signature","provide","provide","pub_key","pub_key","pub_key_shares","sec_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","spend_key","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_message","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","valid_coins","validate_config","validate_input","validate_input","validate_output","validate_output","verify","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FeeConsensus","MintClientConfig","MintConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coin_issuance_abs","coin_spend_abs","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","peer_tbs_pks","serialize","serialize","serialize","tbs_pks","tbs_sks","threshold","to_client_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","CONFIRMATION_TARGET","DuplicateSignature","ErrorFinalizingPsbt","InvalidSignature","IterUnzipWalletConsensusItem","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOutFeeRate","PegOutFees","PegOutSignature","PegOutSignatureItem","PendingTransaction","ProcessPegOutSigError","RoundConsensus","RoundConsensus","RoundConsensusItem","RpcError","SighashError","SpendableUTXO","UnknownNetwork","UnknownPegInProofBlock","UnknownTransaction","UnsignedTransaction","UnzipWalletConsensusItem","Wallet","WalletConfigGenerator","WalletConsensusItem","WalletError","WalletInput","WalletOutput","WalletOutputOutcome","WalletVerificationCache","WrongNetwork","WrongSignatureCount","amount","amount","amount","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","block_height","block_height","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","build_verification_cache","build_verification_cache","cfg","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_height","consensus_proposal","consensus_proposal","current_round_consensus","db","db","decode_consensus_item","decode_input","decode_output","decode_output_outcome","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","equivalent","erased_eq","erased_eq","erased_eq","erased_eq","fee_rate","fee_rate","fee_rate","fees","fees","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_wallet_value","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_address_valid_for_network","keys","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new_with_bitcoind","output_status","output_status","peg_out_signature","process_randomness_contributions","provide","provide","psbt","randomness","randomness_beacon","recipient","round_consensus","run_broadcast_pending_tx","secp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","signature","signatures","source","target_height","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total_weight","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into_outcome","tweak","tweak","tweakable","tx","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_wallet_consensus_item","validate_config","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","FeeConsensus","WalletClientConfig","WalletConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btc_rpc","clone","clone","clone","clone_into","clone_into","clone_into","default","default_fee","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fee_consensus","fee_consensus","finality_delay","finality_delay","fmt","fmt","fmt","from","from","from","hash","hash","init","init","init","into","into","into","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","serialize","serialize","serialize","to_client_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","BlockHash","BlockHashKey","DbKeyPrefix","PegOutBitcoinOutPoint","PegOutBitcoinTransaction","PegOutTxSigCi","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransaction","PendingTransactionKey","PendingTransactionPrefixKey","RoundConsensus","RoundConsensusKey","UTXOKey","UTXOPrefixKey","UnsignedTransaction","UnsignedTransactionKey","UnsignedTransactionPrefixKey","Utxo","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","fmt","from","from_str","hash","hash_to_hash160","init","into","is_uncompressed","key","new","partial_cmp","serialize","to_hash160","to_hash256","to_owned","to_pubkeyhash","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","TxOutProof","block","block_header","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contains_tx","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","equivalent","equivalent","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","hash","hash","identity","init","init","init","into","into","into","merkle_proof","new","outpoint","output_idx","proof_block","provide","serialize","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","type_id","validate","validate_args","verify","vzip","vzip","vzip","MAX_PEER_OUT_OF_ORDER_MESSAGES","ModuleId","ModuleIdRef","ModuleMultiplexed","ModuleMultiplexerInner","ModuleMultiplexerOutOfOrder","PeerConnectionMultiplexer","ban_peer","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","connections","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","fmt","from","from","from","from","init","init","init","init","inner","into","into","into","into","key","msg","msgs","new","out_of_order","peer_counts","receive","send","serialize","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","api","connect","framed","peers","queue","RpcHandlerCtx","attach_endpoints","attach_endpoints_erased","borrow","borrow_mut","clone","clone_into","deref","deref_mut","drop","fedimint","fmt","from","init","into","run_server","server_endpoints","to_owned","try_from","try_into","type_id","vzip","AnyConnector","ConnectResult","ConnectionListener","Connector","PeerCertStore","SharedAnyConnector","TlsConfig","TlsTcpConnector","accept_connection","authenticate_peer","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","cert_store","clone","clone","clone_into","clone_into","connect_framed","connect_framed","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","get_peer_by_cert","init","init","init","into","into","into","into_dyn","listen","listen","mock","new","new","our_certificate","our_certificate","our_private_key","our_private_key","peer_certificates","peer_certs","peer_certs","peer_names","peer_names","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","MockConnector","MockNetwork","borrow","borrow","borrow_mut","borrow_mut","clients","clients","connect_framed","connector","deref","deref","deref_mut","deref_mut","do_handshake","drop","drop","from","from","id","init","init","into","into","listen","new","timeout","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","AnyFramedTransport","BidiFramed","BincodeCodec","FramedSink","FramedStream","FramedTransport","TcpBidiFramed","_pd","borrow","borrow","borrow_mut","borrow_mut","borrow_parts","borrow_split","borrow_split","decode","deref","deref","deref_mut","deref_mut","drop","drop","encode","fmt","fmt","from","from","init","init","into","into","into_dyn","new","new","new_from_tcp","new_from_tcp","poll_close","poll_flush","poll_next","poll_ready","sink","start_send","stream","try_from","try_from","try_into","try_into","try_poll_next","type_id","type_id","vzip","vzip","CommonPeerConnectionState","Connected","ConnectedPeerConnectionState","ConnectionConfig","Disconnected","DisconnectedPeerConnectionState","MAX_FAIL_RECONNECT_COUNTER","NetworkConfig","PeerConnection","PeerConnectionState","PeerConnectionStateMachine","PeerConnector","PeerMessage","PeerSlice","ReconnectPeerConnections","ack","address","ban_peer","bind_addr","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cfg","clone","clone","clone","clone_into","clone_into","clone_into","common","connect","connect","connection","connections","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","disconnect","disconnect_err","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","failed_reconnect_counter","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","identity","incoming","incoming","incoming_connections","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","last_received","msg","new","new","nodes","outgoing","outgoing","peer","peers","peers","receive","receive","receive_connection","receive_message","receive_message_inner","reconnect","reconnect_at","resend_buffer_contents","resend_queue","run","run_io_thread","run_listen_task","send","send","send_message","send_message_connected","serialize","serialize","serialize","state","state_transition","state_transition_connected","state_transition_disconnected","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_reconnect","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MessageId","MessageQueue","UniqueMessage","ack","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","cmp","cmp","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","id","increment","init","init","init","into","into","into","iter","msg","next_id","partial_cmp","partial_cmp","push","queue","serialize","serialize","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Accepted","LN","Mint","OutputOutcome","Rejected","SerdeOutputOutcome","TransactionStatus","TryIntoOutcome","Wallet","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","drop","drop","drop","eq","eq","eq","equivalent","equivalent","equivalent","fmt","fmt","fmt","from","from","from","from","from_bytes","hash","hash","hash","init","init","init","into","into","into","is_final","is_final","serialize","serialize","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","try_into_inner","try_into_outcome","try_into_variant","type_id","type_id","type_id","vzip","vzip","vzip","epoch","outputs","Rng","RngGenerator","get_rng","Input","InvalidSignature","LN","LN","Mint","Mint","MissingSignature","Output","SerdeTransaction","Transaction","TransactionError","UnbalancedTransaction","Wallet","Wallet","agg_keys","agg_sign","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","hash","hash","hash","hash","init","init","init","init","init","inputs","into","into","into","into","into","outputs","provide","serialize","serialize","serialize","signature","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_string","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into_inner","tx_hash","tx_hash_from_parts","type_id","type_id","type_id","type_id","type_id","validate_signature","vzip","vzip","vzip","vzip","vzip","fee","inputs","outputs"],"q":["fedimint_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::config::serde_binary_human_readable","","fedimint_server::config::serde_tls_cert","","fedimint_server::config::serde_tls_key","","fedimint_server::consensusfedimint_server::consensus::conflictfilter","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::consensus::debug","","fedimint_server::consensus::interconnect","","","","","","","","","","","","","","","","fedimint_server::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::epoch","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::lnfedimint_server::modules::ln::LightningOutput","","fedimint_server::modules::ln::LightningOutputOutcome","","","fedimint_server::modules::ln::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contracts","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contracts::account","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contracts::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::ln::contracts::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::mintfedimint_server::modules::mint::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::walletfedimint_server::modules::wallet::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::dbfedimint_server::modules::wallet::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::modules::wallet::tweakable","","","","fedimint_server::modules::wallet::txoproof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::multiplexed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net","","","","","fedimint_server::net::api","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::connect","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::connect::mock","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::framed","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::net::peersfedimint_server::net::queue","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::outcome","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::outcome::TransactionStatus","","fedimint_server::rng","","","fedimint_server::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_server::transaction::TransactionError","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","Fedimint toplevel config","","The actual implementation of the federated mint","","Provides interfaces for ACID-compliant data store backends","","","","","","","","","","Sends a rejoin request and returns the max(valid_epoch) …","Requests, verifies and processes history from peers","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Runs a single HBBFT consensus step","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","Searches back in saved epoch history for the last signed …","","","Implementation of multiplexed peer connections","Networking for mint-to-mint and client-to-mint …","","","","","","","Builds a <code>ConsensusOutcome</code> then use the API to validate and …","Some abstractions to handle randomness","Start all the components of the mint and plug them together","Loop <code>run_conensus_epoch</code> until shut down","The main consensus function:","","","","","","","","","","","","","","","","","","","","","","","","","","","","","network config for a server","","","","The peer’s websocket network address and port (e.g. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","config for servers running on different ports on a local …","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","human-readable name","","extra options for extra settings and modules","extra options for extra settings and modules","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Proposed HBBFT consensus changes including removing peers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Configuration describing the federation and containing our …","","","","","","","","","","","KV Database into which all state is persisted to recover …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Cryptographic random number generator used for everything","","","","","","","","","","Notifies tasks when there is a new transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Our local mint","","The conflict filter is used to ensure that no conflicting …","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","outputs a useful debug message for epochs indicating what …","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Allow early refund of outgoing contract","Fund contract","","","","","","","","","","","","","The lightning module implements an account system. It does …","","","Represents an output of the Lightning module.","","","","","","Creat incoming contract offer","","","","While for now we only support spending the entire contract …","","","","","","","","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue coins, peg-out BTC, …","","","","","","","","Queries the database and returns all assets and …","","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","Validate a transaction output before submitting it to the …","","","","","","","","","","","","Of the three contract types only the outgoing one needs …","Contract to update","Signature of gateway","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A contract before execution as found in transaction outputs","The hash of a LN incoming contract","Outcome of a contract. Only incoming contracts currently …","Possible outcomes of preimage decryption","Threshold-encrypted <code>Preimage</code>","A contract after execution as saved in the database","Anything representing a contract which thus has an …","","","","The decrypted preimage was invalid","","","","","There aren’t enough decryption shares yet","","Share to decrypt an <code>EncryptedPreimage</code>","The decrypted preimage was valid","","","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","Creates this type from the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","Converts a contract to its executed version.","Outputs the hash in hexadecimal form.","Creates the initial contract outcome that is created on …","","","","","","","","","","","Create a Schnorr public key from this preimage","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A generic contract to hold money in a pub key locked …","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","The funded version of an <code>IncomingContract</code> contains the …","Specialized smart contract for incoming payments","","The hash of a LN incoming contract offer","","Amount for which the user is willing to sell the preimage","","Converts this type into the inner hash type.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Status of preimage decryption, will either end in failure …","","","","","","","","","","","","","","","","","","","","","Encrypted preimage as specified in offer","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Creates this type from the inner hash type.","","","","","Key that can unlock contract in case the decrypted …","","","","","","Payment hash which’s corresponding preimage is being sold","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Incoming contracts are funded exactly once, so they have …","","","","","","","","","","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","Specialized smart contract for outgoing payments.","","","","Flag that can be set by the gateway and allows the client …","","","","","","","","","","","","","","Returns the argument unchanged.","","Public key of the LN gateway allowed to claim the HTLC …","","Hash that can be used to spend the output before the …","","Calls <code>U::from(self)</code>.","Invoice containing metadata on how to obtain the preimage","","Block height at which the money will be spendable by the …","","","","","","Public key of the user that can claim the money back after …","","<code>Nonce</code> but blinded by the user key","","","","","","","","","Data structures taking into account different amount tiers …","","","","","","","Represents an array of mint indexes that delivered faulty …","","","Unique ID of a mint note.","An verifiable one time use IOU from the mint.","Blind signature share for a <code>SignRequest</code>","","","Blind signature for a <code>SignRequest</code>","Request to blind sign a certain amount of coins","","","","","","","","","","","Try to spend a transaction input. On success all necessary …","Try to create an output (e.g. issue coins, peg-out BTC, …","","","","","","","","Queries the database and returns all assets and …","","","Blocks until a new <code>consensus_proposal</code> is available.","","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Constructs a new mint","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","Access the nonce as the public key to the spend key","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","Validate a transaction output before submitting it to the …","","Verify the coin’s validity under a mit key <code>pk</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A peg-out tx that is ready to be broadcast with a tweak …","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","","","","","","","","","","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue coins, peg-out BTC, …","","","","","","","","Queries the database and returns all assets and …","","Blocks until a new <code>consensus_proposal</code> is available.","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Retrieve the current status of the output. Depending on …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","Validate a transaction output before submitting it to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Confirmations required for a peg in to be accepted by …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The bitcoin network the client will use","","","","","","The federations public peg-in-descriptoreturns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","An object that can be used as a ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifyable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Amount of per-peer messages after which we will stop …","TODO: Use proper ModuleId after modularization is complete","","A <code>Msg</code> that can target a specific destination module","Shared, mutable (wrapped in mutex) data of …","","A wrapper around <code>AnyPeerConnections</code> multiplexing …","","","","","","","","","","","","","","Underlying connection pool","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Messages per <code>ModuleId</code> in a queue each","","Messages that arrived before an interested thread asked …","Track pending messages per peer to avoid a potential DoS","Await receipt of a message from any connected peer.","","","","","","","","","","","","","","","","","","","","","Implements the client API through which users interact …","Provides an abstract network connection interface and …","Adapter that implements a message based protocol on top of …","Implements a connection manager for communication with …","","A state of fedimint server passed to each rpc handler …","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","","","","","","","","Owned <code>Connector</code> trait object","Result of a connection opening future","Owned trait object type for incoming connection listeners","Allows to connect to peers and to listen for incoming …","","Shared <code>Connector</code> trait object","","TCP connector with encryption and authentication","","","","","","","","","Copy of the certs from <code>peer_certs</code>, but in a format that …","","","","","Connect to a <code>destination</code>","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transform this concrete <code>Connector</code> into an owned trait …","Listen for incoming connections on <code>bind_addr</code>","","Fake network stack used in tests","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Owned <code>FramedTransport</code> trait object","Framed transport codec for streams","Framed codec that uses <code>bincode</code> to encode structs with <code>serde</code>…","Sink (sending) half of <code>BidiFramed</code>","Stream (receiving) half of <code>BidiFramed</code>","A bidirectional framed transport adapter that can be split …","Special case for tokio <code>TcpStream</code> based <code>BidiFramed</code> instances","","","","","","Splits the codec in its sending and receiving parts","Split the framed transport into read and write half","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Transforms concrete <code>FramedTransport</code> object into an owned …","Builds a new <code>BidiFramed</code> codec around a stream <code>stream</code>.","","Special constructor for tokio TCP connections.","Special constructor for tokio TCP connections.","","","","","","","","","","","","","","","","","","","","Information needed to connect to one other federation …","","","Maximum connection failures we consider for our back-off …","Specifies the network configuration for …","","","","Owned <code>Connector</code> trait object used by …","Internal message type for <code>ReconnectPeerConnections</code>, just …","","Connection manager that automatically reconnects to peers","","The peer’s network address and port (e.g. <code>10.42.0.10:4000</code>…","","Our listen address for incoming connections from other …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Our federation member’s identity","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Creates a new <code>ReconnectPeerConnections</code> connection manager …","","","","","","","Map of all peers’ connection information we want to be …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","The transaction was accepted and is now being processed","","","","The rejected state is only recorded if the error happens …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","Cheaply generates a new random number generator. Since …","","An Input consumed by a Transaction is defined within a …","","","","","","","","","An atomic value transfer operation within the Fedimint …","","","","","Aggregate a stream of public keys.","Create an aggregated signature over the <code>msg</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","<code>Input</code>s consumed by the transaction","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","<code>Output</code>s created as a result of the transaction","","","","","Aggregated MuSig2 signature over all the public keys of …","","","","","","","","","","","","","","","","","","","","Hash of the transaction (excluding the signature).","Generate the transaction hash.","","","","","","Validate the aggregated Schnorr Signature signed over the …","","","","","","","",""],"if":[0,0,0,0,0,0,0,0,0,0,0,[1,[[3,[2]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[4,4],[[]],0,0,0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[4]]]],[[1,7],3],[[1,8],[[6,[9]]]],[5],[5],[5],[5],0,[[10,11],[[6,[12]]]],[[10,11],[[6,[12]]]],[[4,11],13],[[]],[[]],[[]],[[]],[14],[1,[[3,[[15,[8]]]]]],0,[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[10,16],[[1,17],[[2,[18]]]],[[19,20]],0,0,0,[[21,22,23],1],[[21,22,[24,[4]],23],1],0,0,[[1,25],[[3,[[15,[8]]]]]],[26],[[1,7],3],0,[[21,22,23],27],[[1,28]],[[1,29],[[3,[[15,[8]]]]]],[4,6],[1,16],[[]],[[],30],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[21,21],[32,32],[33,33],[34,34],[[]],[[]],[[]],[[]],[[35,36,23],37],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[21]]]],[[],[[6,[32]]]],[[],[[6,[34]]]],[[38,39,33,[0,[40,41]],23],[[27,[3]]]],[5],[5],[5],[5],[5],[5],0,0,[[34,34],16],[[],16],0,0,[[21,11],13],[[32,11],13],[[33,11],13],[[34,11],13],[[]],[[]],[[]],[[]],[[]],[[]],[42,[[6,[43]]]],[[[15,[44]],45,42,42],[[46,[39,33]]]],[[39,45,47],35],[[48,39,[15,[44]],47,30,30],33],[21,45],[[21,42],[[27,[49]]]],[34],0,0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[50],0,0,0,0,[21,35],0,0,[33,[[47,[39,32]]]],0,0,0,0,[21,6],[32,6],[34,6],0,0,0,0,[21,36],0,[21,51],[[]],[[]],[[]],[[]],[[46,[0,[40,41]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[21,39],27],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],[[6,[52]]]],[52,6],[[],[[6,[48]]]],[48,6],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[53,54]],[[53,54]],[22,55],[22,22],[22,56],[22,57],[22,58],[22],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,59],[[22,[0,[60,61,62]]],63],0,[64,64],[25,25],[65,65],[[]],[[]],[[]],0,[20,[[6,[65,66]]]],[65,[[6,[5,67]]]],[68,[[6,[5,67]]]],0,0,[[],53],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[[22,17],[[2,[18]]]],[[64,64],16],[[65,65],16],[[],16],0,[[64,11],13],[[25,11],13],[[65,11],13],[[63,11],13],[[69,11],13],[[69,11],13],[[]],[[]],[[]],[70,64],[[]],[[]],[[]],[71,69],[[]],[47,[[6,[72]]]],[22,25],[65],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[21,57,56,55,73],22],0,[[22,8]],[[22,74,75,63],[[6,[69]]]],[26],[[22,76],22],0,[[22,8,74,15]],[69,[[2,[77]]]],[[22,75],[[6,[69]]]],[[],[[15,[78,79]]]],[[]],[[]],[[]],[[],30],0,0,[[22,80],[[2,[81]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[53,[[6,[71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[]],[[]],0,0,[5],[5],[5],[[],82],[[]],[[],5],0,[[]],[[82,75],[[6,[75,75]]]],[82],0,0,[[],6],[[],6],0,[[],31],[[]],[8,30],[83,30],0,[[]],[[]],[[59,42,30,84],[[86,[[85,[29]]]]]],[[30,84],[[6,[84,87]]]],[5],[5],[5],0,[[]],[[],5],[[]],[[],6],[[],6],[[],31],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[88,88],[89,89],[[]],[[]],[20,[[6,[90,66]]]],[20,[[6,[91,66]]]],[20,[[6,[92,66]]]],[20,[[6,[93,66]]]],[20,[[6,[94,66]]]],[20,[[6,[95,66]]]],[20,[[6,[89,66]]]],[20,[[6,[96,66]]]],[90,[[6,[5,67]]]],[91,[[6,[5,67]]]],[92,[[6,[5,67]]]],[93,[[6,[5,67]]]],[94,[[6,[5,67]]]],[95,[[6,[5,67]]]],[89,[[6,[5,67]]]],[96,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[90,11],13],[[91,11],13],[[92,11],13],[[93,11],13],[[94,11],13],[[95,11],13],[[89,11],13],[[96,11],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,[[6,[72]]]],[[],[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[18,97,18],[[6,[18,9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[83,83],[98,98],[99,99],[100,100],[18,18],[101,101],[70,70],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,[[6,[83,66]]]],[47,[[6,[99,66]]]],[47,[[6,[100,66]]]],[47,[[6,[18,66]]]],[47,[[6,[70,66]]]],[83,[[6,[5,67]]]],[99,[[6,[5,67]]]],[100,[[6,[5,67]]]],[18,[[6,[5,67]]]],[70,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[98]]]],[[],[[6,[99]]]],[[],[[6,[100]]]],[[],[[6,[101]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,0,[[83,83],16],[[98,98],16],[[99,99],16],[[100,100],16],[[18,18],16],[[101,101],16],[[70,70],16],[[9,9],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[83,11],[[6,[12]]]],[[98,11],[[6,[12]]]],[[99,11],[[6,[12]]]],[[100,11],[[6,[12]]]],[[18,11],[[6,[12]]]],[[101,11],[[6,[12]]]],[[70,11],[[6,[12]]]],[[9,11],[[6,[12]]]],[[]],[[]],[83,98],[[]],[[]],[[]],[[]],[[]],[18,101],[[]],[[]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[83],[98],[99],[100],[18],[101],[70],[70,102],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[17,[47,[39,[15,[83,79]],79]],2],18],0,[98,6],[99,6],[100,6],[101,6],0,[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[98,47],[[6,[83,66]]]],[[101,47],[[6,[18,66]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],103],[[18,2],[[6,[9]]]],[[18,104],[[6,[9]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[55,42],[[],42],[55,[[15,[[105,[55]],79]]]],[[],[[15,[[105,[76]],79]]]],[[55,106,74],[[6,[107,108]]]],[[106,74,109,110],[[6,[107,108]]]],[[55,74,111],[[6,[54,108]]]],[[74,112,111],[[6,[54,108]]]],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[55,58]],[58],[55,[[86,[[85,[29,79]]]]]],[[],[[86,[[85,[29,79]]]]]],[[74,[15,[79]]],[[86,[[85,[29,79]]]]]],[[55,74,[15,[79]]],[[86,[[85,[29,79]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[55,60]],[[],110],0,[[],109],[114,114],[115,115],[[],112],[116,116],[117,117],[118,118],[[],119],[120,120],[[],121],[122,122],[123,123],[[],110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[47,[[6,[114,66]]]],[47,[[6,[115,66]]]],[47,[[6,[116,66]]]],[47,[[6,[117,66]]]],[47,[[6,[118,66]]]],[47,[[6,[120,66]]]],[47,[[6,[122,66]]]],[47,[[6,[123,66]]]],[114,[[6,[5,67]]]],[115,[[6,[5,67]]]],[116,[[6,[5,67]]]],[117,[[6,[5,67]]]],[118,[[6,[5,67]]]],[120,[[6,[5,67]]]],[122,[[6,[5,67]]]],[123,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[55,[[86,[[85,[29,79]]]]]],[[],[[86,[[85,[29,79]]]]]],0,0,0,0,0,0,[124,[[6,[121,66]]]],[124,[[6,[109,66]]]],[124,[[6,[112,66]]]],[124,[[6,[119,66]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[114]]]],[[],[[6,[115]]]],[[],[[6,[116]]]],[[],[[6,[117]]]],[[],[[6,[118]]]],[[],[[6,[120]]]],[[],[[6,[122]]]],[[],[[6,[123]]]],[[125,38,39,126,23],[[86,[[85,[29,79]]]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],17],[[],17],[[],17],[[],17],[[55,127,74],[[86,[[85,[29,79]]]]]],[[127,74],[[86,[[85,[29,79]]]]]],[[114,114],16],[[115,115],16],[[116,116],16],[[117,117],16],[[118,118],16],[[120,120],16],[[122,122],16],[[123,123],16],[[128,128],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[109,16],[112,16],[119,16],[121,16],[[55,11],[[6,[12]]]],[[114,11],[[6,[12]]]],[[115,11],[[6,[12]]]],[[116,11],[[6,[12]]]],[[117,11],[[6,[12]]]],[[118,11],[[6,[12]]]],[[120,11],[[6,[12]]]],[[122,11],[[6,[12]]]],[[123,11],[[6,[12]]]],[[128,11],[[6,[12]]]],[[128,11],[[6,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[129,120],[[]],[[]],[[]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[[55,130],[[2,[117]]]],[[55,102],[[2,[131]]]],[55,[[15,[131,79]]]],[114],[115],[116],[117],[118],[120],[122],[123],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[55,[[15,[120,79]]]],0,[55,45],[[],45],[114,45],[[],45],[[],45],[115,45],[[],45],[118,45],[122,45],[[],45],[123,45],[[],45],[[132,73],55],0,[[55,111],2],[111,[[2,[119]]]],[26],[[55,120],29],[114,6],[115,6],[116,6],[117,6],[118,6],[120,6],[122,6],[123,6],0,[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[125,133],[[6,[134,43]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[125,126]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[135,[[6,[118,10]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[125,39,133],[[6,[43]]]],[[55,106],[[6,[107,108]]]],[[106,110,109],[[6,[107,108]]]],[55,[[6,[54,108]]]],[112,[[6,[54,108]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[132,132],[136,136],[137,137],[[]],[[]],[[]],0,0,[[],137],[5],[5],[5],[5],[5],[5],[[],[[6,[132]]]],[[],[[6,[136]]]],[[],[[6,[137]]]],[5],[5],[5],[[136,136],16],[[137,137],16],[[],16],[[],16],0,0,[[132,11],[[6,[12]]]],[[136,11],[[6,[12]]]],[[137,11],[[6,[12]]]],[[]],[[]],[[]],[136],[137],[[],5],[[],5],[[],5],[[]],[[]],[[]],[132,6],[136,6],[137,6],0,0,0,0,[132,134],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[132,39],[[6,[43]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],130],[[],138],[130,102],[130],[130],[[],5],[130],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[[15,[139,79]]]]]],[130,130],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[146,146],[147,147],[148,148],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[130,130],149],[47,[[6,[130,66]]]],[47,[[6,[140,66]]]],[47,[[6,[141,66]]]],[47,[[6,[142,66]]]],[47,[[6,[143,66]]]],[47,[[6,[144,66]]]],[47,[[6,[145,66]]]],[47,[[6,[146,66]]]],[47,[[6,[147,66]]]],[47,[[6,[148,66]]]],[130,[[6,[5,67]]]],[140,[[6,[5,67]]]],[141,[[6,[5,67]]]],[142,[[6,[5,67]]]],[143,[[6,[5,67]]]],[144,[[6,[5,67]]]],[145,[[6,[5,67]]]],[146,[[6,[5,67]]]],[147,[[6,[5,67]]]],[148,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[[],130],[140,130],[141,130],[5],[130],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[130]]]],[[],[[6,[140]]]],[[],[[6,[141]]]],[[],[[6,[142]]]],[[],[[6,[143]]]],[[],[[6,[144]]]],[[],[[6,[145]]]],[[],[[6,[146]]]],[[],[[6,[147]]]],[[],[[6,[148]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[]],[[]],[[]],[[130,130],16],[[140,140],16],[[141,141],16],[[142,142],16],[[143,143],16],[[144,144],16],[[145,145],16],[[146,146],16],[[147,147],16],[[148,148],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[130,11],[[6,[12]]]],[[130,11],[[6,[12]]]],[[130,11],[[6,[12]]]],[[140,11],[[6,[12]]]],[[141,11],[[6,[12]]]],[[142,11],[[6,[12]]]],[[143,11],[[6,[12]]]],[[144,11],[[6,[12]]]],[[145,11],[[6,[12]]]],[[146,11],[[6,[12]]]],[[147,11],[[6,[12]]]],[[148,11],[[6,[12]]]],[102,130],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[6,[150]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[[],130],[102,130],[[],130],[[],[[6,[130,151]]]],[[],[[6,[130,151]]]],[42,[[6,[130]]]],[130],[140],[141],[142],[143],[144],[145],[146],[147],[148],0,[130],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[130],[[145,104],147],0,[[130,130],[[2,[149]]]],[130,6],[140,6],[141,6],[142,6],[143,6],[144,6],[145,6],[146,6],[147,6],[148,6],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[140,111],141],[[],30],[140,142],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[145,[[6,[152,153]]]],[[],30],[[],[[6,[138,154]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[135,[[6,[143,10]]]],[135,[[6,[144,10]]]],[135,[[6,[145,10]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],0,[[]],[[]],[155,155],[[]],[47,[[6,[155,66]]]],[155,[[6,[5,67]]]],[68,[[6,[5,67]]]],[155,130],[5],[5],[[],[[6,[155]]]],[5],[[155,155],16],[[],16],[[155,11],[[6,[12]]]],[[]],[47,[[6,[72]]]],[155],[[],5],[[]],0,[155,6],[[],[[15,[78,79]]]],[[]],[[],6],[[],6],[[],31],[[]],0,0,0,0,[[],156],0,[[],138],[156,102],[156],[156],[[],5],[[]],[[]],[[]],[156],[[]],[[]],[[]],[[]],[[]],[[],[[6,[[15,[139,79]]]]]],[131,131],[157,157],[158,158],[156,156],[[]],[[]],[[]],[[]],[[156,156],149],[47,[[6,[131,66]]]],[47,[[6,[157,66]]]],[47,[[6,[158,66]]]],[47,[[6,[156,66]]]],[131,[[6,[5,67]]]],[157,[[6,[5,67]]]],[158,[[6,[5,67]]]],[156,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],0,[157,130],0,[5],[5],[5],[5],[156],[5],[5],[5],[5],[[],[[6,[131]]]],[[],[[6,[157]]]],[[],[[6,[158]]]],[[],[[6,[156]]]],[5],[5],[5],[5],[[]],[[]],0,0,[[]],[[131,131],16],[[157,157],16],[[158,158],16],[[156,156],16],[[],16],[[],16],[[],16],[[],16],0,[[131,11],[[6,[12]]]],[[157,11],[[6,[12]]]],[[158,11],[[6,[12]]]],[[156,11],[[6,[12]]]],[[156,11],[[6,[12]]]],[[156,11],[[6,[12]]]],[[]],[[]],[[]],[[]],[102,156],[[],[[6,[150]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[[],156],[102,156],[[],156],[[],[[6,[156,151]]]],[[],[[6,[156,151]]]],[42,[[6,[156]]]],0,[131],[157],[158],[156],0,0,[131,156],[156],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[156],0,[[156,156],[[2,[149]]]],[131,6],[157,6],[158,6],[156,6],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],30],[[]],[[]],[[]],[[]],[[],30],[[],[[6,[138,154]]]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[135,[[6,[156,10]]]],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[],6],0,[[]],[[]],[159,102],0,[159,159],[[]],[47,[[6,[159,66]]]],[159,[[6,[5,67]]]],[68,[[6,[5,67]]]],[159,130],[5],[5],[[],[[6,[159]]]],[5],[[159,159],16],[[],16],[[159,11],[[6,[12]]]],[[]],[47,[[6,[72]]]],0,[159],0,[[],5],[[]],0,[159,6],0,[[],[[15,[78,79]]]],[[]],[[],6],[[],6],[[],31],0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[57,42],[[],42],[[],[[15,[[105,[76]],79]]]],[57,[[15,[[105,[57]],79]]]],[[57,106,74],[[6,[107,108]]]],[[106,74,109,110],[[6,[107,108]]]],[[74,112,111],[[6,[54,108]]]],[[57,74,111],[[6,[54,108]]]],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[58],[[57,58]],[57,[[86,[[85,[29,79]]]]]],[[],[[86,[[85,[29,79]]]]]],[[57,74,[15,[79]]],[[86,[[85,[29,79]]]]]],[[74,[15,[79]]],[[86,[[85,[29,79]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[57,[0,[60,62]]]],[[],110],0,[160,160],[161,161],[162,162],[163,163],[164,164],[165,165],[166,166],[[],110],[167,167],[168,168],[[],109],[169,169],[[],112],[[],119],[170,170],[[],121],[171,171],[172,172],[173,173],[174,174],[175,175],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[47,[[6,[160,66]]]],[47,[[6,[161,66]]]],[47,[[6,[162,66]]]],[47,[[6,[163,66]]]],[47,[[6,[164,66]]]],[47,[[6,[165,66]]]],[47,[[6,[166,66]]]],[47,[[6,[168,66]]]],[47,[[6,[169,66]]]],[47,[[6,[170,66]]]],[47,[[6,[171,66]]]],[160,[[6,[5,67]]]],[161,[[6,[5,67]]]],[162,[[6,[5,67]]]],[163,[[6,[5,67]]]],[164,[[6,[5,67]]]],[165,[[6,[5,67]]]],[166,[[6,[5,67]]]],[168,[[6,[5,67]]]],[169,[[6,[5,67]]]],[170,[[6,[5,67]]]],[171,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[[],[[86,[[85,[29,79]]]]]],[57,[[86,[[85,[29,79]]]]]],0,[124,[[6,[121,66]]]],[124,[[6,[109,66]]]],[124,[[6,[112,66]]]],[124,[[6,[119,66]]]],[[],161],[[],168],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[168],[5],[5],[169],[170],[5],[5],[171],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[168],[169],[5],[5],[170],[171],[5],[5],[5],[5],[5],[[],[[6,[160]]]],[[],[[6,[161]]]],[[],[[6,[162]]]],[[],[[6,[163]]]],[[],[[6,[164]]]],[[],[[6,[165]]]],[[],[[6,[166]]]],[[],[[6,[168]]]],[[],[[6,[169]]]],[[],[[6,[170]]]],[[],[[6,[171]]]],[[176,38,39,126,23],[[86,[[85,[29,79]]]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],17],[[],17],[[],17],[[],17],[[57,127,74],[[86,[[85,[29,79]]]]]],[[127,74],[[86,[[85,[29,79]]]]]],[[160,160],16],[[161,161],16],[[162,162],16],[[163,163],16],[[164,164],16],[[165,165],16],[[166,166],16],[[168,168],16],[[169,169],16],[[170,170],16],[[171,171],16],[[172,172],16],[[173,173],16],[[174,174],16],[[175,175],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[109,16],[112,16],[119,16],[121,16],[161],[[57,11],[[6,[12]]]],[[160,11],[[6,[12]]]],[[161,11],[[6,[12]]]],[[162,11],[[6,[12]]]],[[163,11],[[6,[12]]]],[[164,11],[[6,[12]]]],[[165,11],[[6,[12]]]],[[166,11],[[6,[12]]]],[[167,11],[[6,[12]]]],[[168,11],[[6,[12]]]],[[169,11],[[6,[12]]]],[[170,11],[[6,[12]]]],[[171,11],[[6,[12]]]],[[172,11],[[6,[12]]]],[[173,11],[[6,[12]]]],[[174,11],[[6,[12]]]],[[174,11],[[6,[12]]]],[[175,11],[[6,[12]]]],[[175,11],[[6,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[177,175],[[]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[[],165],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[160],[161],[162],[163],[164],[165],[166],[168],[169],[170],[171],[172],[173],[174],[175],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],45],[57,45],[167,45],[[],45],[[],45],[168,45],[169,45],[[],45],[170,45],[[],45],[[],45],[171,45],[[178,73],57],0,[111,[[2,[119]]]],[[57,111],2],0,[26],[26],[57,[[46,[44,179,180]]]],0,0,0,[160,6],[161,6],[162,6],[163,6],[164,6],[165,6],[166,6],[168,6],[169,6],[170,6],[171,6],[164,152],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[165,[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[176,133],[[6,[134,43]]]],[165,181],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],[[176,126]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[135,[[6,[170,10]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],0,[[176,39,133],[[6,[43]]]],[[106,110,109],[[6,[107,108]]]],[[57,106],[[6,[107,108]]]],[112,[[6,[54,108]]]],[57,[[6,[54,108]]]],[[164,179],16],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[178,178],[182,182],[183,183],[[]],[[]],[[]],0,0,[[],183],[5],[5],[5],[5],[5],[5],[[],[[6,[178]]]],[[],[[6,[182]]]],[[],[[6,[183]]]],[5],[5],[5],[[182,182],16],[[183,183],16],[[],16],[[],16],0,0,[[178,11],[[6,[12]]]],[[182,11],[[6,[12]]]],[[183,11],[[6,[12]]]],[[]],[[]],[[]],[182],[183],[[],5],[[],5],[[],5],[[]],[[]],[[]],0,[178,6],[182,6],[183,6],0,0,0,[178,134],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[178,39],[[6,[43]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[184,185],0,0,[[],42],[56,42],[56,[[15,[[105,[56]],79]]]],[[],[[15,[[105,[76]],79]]]],[[56,106,74],[[6,[107,108]]]],[[106,74,109,110],[[6,[107,108]]]],[[56,74,111],[[6,[54,108]]]],[[74,112,111],[[6,[54,108]]]],[[],113],[[],113],[[],113],[[],113],[[],113],[[],113],[[56,58]],[58],[56,[[86,[[85,[29,79]]]]]],[[],[[86,[[85,[29,79]]]]]],[[74,[15,[79]]],[[86,[[85,[29,79]]]]]],[[56,74,[15,[79]]],[[86,[[85,[29,79]]]]]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[73,186],29],0,[[],110],[[56,60]],0,0,0,[187,187],[[],121],[188,188],[189,189],[190,190],[191,191],[192,192],[193,193],[184,184],[194,194],[[],119],[195,195],[196,196],[[],109],[[],112],[197,197],[198,198],[[],110],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[47,[[6,[187,66]]]],[47,[[6,[188,66]]]],[47,[[6,[189,66]]]],[47,[[6,[190,66]]]],[47,[[6,[191,66]]]],[47,[[6,[192,66]]]],[47,[[6,[193,66]]]],[47,[[6,[184,66]]]],[47,[[6,[194,66]]]],[47,[[6,[195,66]]]],[47,[[6,[196,66]]]],[47,[[6,[197,66]]]],[47,[[6,[198,66]]]],[187,[[6,[5,67]]]],[188,[[6,[5,67]]]],[189,[[6,[5,67]]]],[190,[[6,[5,67]]]],[191,[[6,[5,67]]]],[192,[[6,[5,67]]]],[193,[[6,[5,67]]]],[184,[[6,[5,67]]]],[194,[[6,[5,67]]]],[195,[[6,[5,67]]]],[196,[[6,[5,67]]]],[197,[[6,[5,67]]]],[198,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[56,[[2,[199]]]],[56,[[86,[[85,[29,79]]]]]],[[],[[86,[[85,[29,79]]]]]],[56,[[2,[190]]]],0,0,[124,[[6,[121,66]]]],[124,[[6,[109,66]]]],[124,[[6,[112,66]]]],[124,[[6,[119,66]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[196],[197],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[196],[197],[5],[5],[5],[5],[[],[[6,[187]]]],[[],[[6,[188]]]],[[],[[6,[189]]]],[[],[[6,[190]]]],[[],[[6,[191]]]],[[],[[6,[184]]]],[[],[[6,[194]]]],[[],[[6,[195]]]],[[],[[6,[196]]]],[[],[[6,[197]]]],[[],[[6,[198]]]],[[200,38,39,126,23],[[86,[[85,[29,79]]]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],17],[[],17],[[],17],[[],17],[[56,127,74],[[86,[[85,[29,79]]]]]],[[127,74],[[86,[[85,[29,79]]]]]],[[187,187],16],[[188,188],16],[[189,189],16],[[190,190],16],[[184,184],16],[[194,194],16],[[195,195],16],[[196,196],16],[[197,197],16],[[198,198],16],[[201,201],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[[],16],[121,16],[119,16],[109,16],[112,16],0,0,0,0,0,[[187,11],[[6,[12]]]],[[188,11],[[6,[12]]]],[[189,11],[[6,[12]]]],[[190,11],[[6,[12]]]],[[56,11],[[6,[12]]]],[[191,11],[[6,[12]]]],[[192,11],[[6,[12]]]],[[193,11],[[6,[12]]]],[[184,11],[[6,[12]]]],[[194,11],[[6,[12]]]],[[195,11],[[6,[12]]]],[[196,11],[[6,[12]]]],[[197,11],[[6,[12]]]],[[198,11],[[6,[12]]]],[[201,11],[[6,[12]]]],[[201,11],[[6,[12]]]],[[202,11],[[6,[12]]]],[[202,11],[[6,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,201],[203,201],[[]],[[]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[56,185],[187],[188],[189],[190],[184],[194],[195],[196],[197],[198],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[204,205],16],0,[[],45],[187,45],[56,45],[[],45],[195,45],[[],45],[196,45],[[],45],[[],45],[197,45],[[],45],[198,45],[[206,73,186,23],29],[111,[[2,[119]]]],[[56,111],2],0,[[56,[15,[79]]]],[26],[26],0,0,0,0,0,[[73,186,28],29],0,[187,6],[188,6],[189,6],[190,6],[191,6],[184,6],[194,6],[195,6],[196,6],[197,6],[198,6],0,0,[201,[[2,[77]]]],[56,29],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[200,133],[[6,[134,43]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],30],[[],30],0,[[200,126]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[135,[[6,[195,10]]]],0,0,0,0,0,0,[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],207],[[200,39,133],[[6,[43]]]],[[56,106],[[6,[107,108]]]],[[106,110,109],[[6,[107,108]]]],[112,[[6,[54,108]]]],[56,[[6,[54,108]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[206,206],[208,208],[209,209],[[]],[[]],[[]],[[],209],0,[5],[5],[5],[5],[5],[5],[[],[[6,[206]]]],[[],[[6,[208]]]],[[],[[6,[209]]]],[5],[5],[5],[[208,208],16],[[209,209],16],[[],16],[[],16],0,0,0,0,[[206,11],[[6,[12]]]],[[208,11],[[6,[12]]]],[[209,11],[[6,[12]]]],[[]],[[]],[[]],[208],[209],[[],5],[[],5],[[],5],[[]],[[]],[[]],0,0,[[[47,[39,210,79]],211,5,212],206],[[[213,[210]]],208],0,0,0,0,0,0,[206,6],[208,6],[209,6],[206,134],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[206,39],[[6,[43]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[214,214],[215,215],[216,216],[217,217],[218,218],[219,219],[220,220],[221,221],[222,222],[223,223],[224,224],[225,225],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,[[6,[215,66]]]],[47,[[6,[216,66]]]],[47,[[6,[217,66]]]],[47,[[6,[218,66]]]],[47,[[6,[219,66]]]],[47,[[6,[220,66]]]],[47,[[6,[221,66]]]],[47,[[6,[222,66]]]],[47,[[6,[223,66]]]],[47,[[6,[224,66]]]],[47,[[6,[225,66]]]],[215,[[6,[5,67]]]],[216,[[6,[5,67]]]],[217,[[6,[5,67]]]],[218,[[6,[5,67]]]],[219,[[6,[5,67]]]],[220,[[6,[5,67]]]],[221,[[6,[5,67]]]],[222,[[6,[5,67]]]],[223,[[6,[5,67]]]],[224,[[6,[5,67]]]],[225,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[215,11],[[6,[12]]]],[[216,11],[[6,[12]]]],[[217,11],[[6,[12]]]],[[218,11],[[6,[12]]]],[[219,11],[[6,[12]]]],[[220,11],[[6,[12]]]],[[221,11],[[6,[12]]]],[[222,11],[[6,[12]]]],[[223,11],[[6,[12]]]],[[224,11],[[6,[12]]]],[[225,11],[[6,[12]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[47,[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[47,[[6,[72]]]],[[],[[6,[72]]]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[210,210],[[]],[[210,210],149],[5],[5],[[],[[6,[210]]]],[5],[[210,210],16],[[],16],[[210,11],[[6,[12]]]],[[210,11],[[6,[12]]]],[[]],[42,[[6,[210]]]],[210],[[],226],[[],5],[[]],[210,16],0,[227,210],[[210,210],[[2,[149]]]],[210,6],[[],226],[[],228],[[]],[210],[210,229],[[],230],[[],102],[[],30],[[],6],[[],6],[[210,231],210],[[],31],[[]],0,0,[[],[[6,[67]]]],[231],0,0,0,0,0,0,0,[232,233],0,[[]],[[]],[[]],[[]],[[]],[[]],[234,234],[232,232],[[]],[[]],[47,[[6,[234,66]]]],[47,[[6,[232,66]]]],[234,[[6,[5,67]]]],[232,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[[232,235],16],[5],[5],[5],[5],[5],[5],[[],[[6,[234]]]],[[],[[6,[232]]]],[5],[5],[5],[[234,234],16],[[232,232],16],[[],16],[[],16],[[234,11],[[6,[12]]]],[[232,11],[[6,[12]]]],[[203,11],[[6,[12]]]],[[203,11],[[6,[12]]]],[[]],[[]],[[]],[47,[[6,[72]]]],[47,[[6,[72]]]],[234],[232],[234],[[],5],[[],5],[[],5],[[]],[[]],[[]],0,[[232,236,199,152],[[6,[234,203]]]],[234,237],0,[234,233],[26],[234,6],[232,6],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[]],[[]],[[],30],0,[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[234,152],0,[234,238],0,[[],31],[[],31],[[],31],[234,[[6,[239]]]],[234,[[6,[239]]]],[[234,231,213],[[6,[203]]]],[[]],[[]],[[]],0,0,0,0,0,0,0,[[240,39],[[86,[[85,[29]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[241,[61,61]]],[[241,[61,61]]]],[[[240,[61,61]]],[[240,[61,61]]]],[[]],[[]],0,[[],242],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[241]]]],[5],[5],[5],[5],[[[241,[243,243]],11],13],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],0,0,0,[[[37,[241]]],240],0,0,[240,[[86,[[85,[29]]]]]],[240,[[86,[[85,[29]]]]]],[241,6],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[[244,[15,[105]],[2,[42]]]],[[244,76]],[[]],[[]],[245,245],[[]],[5],[5],[5],0,[[245,11],13],[[]],[[],5],[[]],[[21,[246,[22]],28]],[[],[[15,[[105,[22]]]]]],[[]],[[],6],[[],6],[[],31],[[]],0,0,0,0,0,0,0,0,[[247,248,249],[[6,[43]]]],[[247,2],[[6,[39,43]]]],[[]],[[]],[[]],[[]],[[]],[[]],0,[36,36],[247,247],[[]],[[]],[[30,39],[[86,[[85,[29]]]]]],[[250,30,39],[[86,[[85,[29]]]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[250,11],13],[[36,11],13],[[247,11],13],[[]],[[]],[[]],[[247,52],[[2,[39]]]],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[],251],[30,[[86,[[85,[29]]]]]],[[250,30],[[86,[[85,[29]]]]]],0,[36,250],[252,247],0,0,0,0,0,0,0,0,0,[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[]],[[]],[[]],0,0,[[]],[[]],[[]],[[]],0,0,[[253,30,39],[[86,[[85,[29]]]]]],[[254,39],253],[5],[5],[5],[5],[39,[[6,[39,43]]]],[5],[5],[[]],[[]],0,[[],5],[[],5],[[]],[[]],[[253,30],[[86,[[85,[29]]]]]],[[],254],[[],2],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[]],[[]],0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[255],[[]],[255],[[256,257],[[6,[2]]]],[5],[5],[5],[5],[5],[5],[[256,257],6],[[[255,[243,243,243]],11],13],[[[256,[243]],11],13],[[]],[[]],[[],5],[[],5],[[]],[[]],[[],258],[[],[[255,[259,260]]]],[[],256],[261,262],[261,262],[[[86,[255]],263],[[264,[6]]]],[[[86,[255]],263],[[264,[6]]]],[[[86,[255]],263],[[264,[2]]]],[[[86,[255]],263],[[264,[6]]]],0,[[[86,[255]]],6],0,[[],6],[[],6],[[],6],[[],6],[[86,263],[[264,[[2,[6]]]]]],[[],31],[[],31],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[265,39],[[86,[[85,[29]]]]]],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[35,35],[266,266],[[[267,[61]]],[[267,[61]]]],[[]],[[]],[[]],0,[[268,[258,[267]],17],269],0,0,0,[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[35]]]],[[],[[6,[266]]]],[[],[[6,[267]]]],[[268,17],269],[[268,43,17],269],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],0,[[35,11],13],[[266,11],13],[[[267,[243]],11],13],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[35,24,23],265],[[39,266,[270,[267]],[271,[[258,[267]]]],23],272],[[35,42,[46,[39,30]]],[[15,[273]]]],0,0,0,[274,[[15,[39]]]],0,[265,[[86,[[85,[29]]]]]],[272,3],[[268,275,[258,[267]]],269],[[268,276,[6,[267,43]]],269],[[268,[6,[267,43]]],[[6,[43]]]],[[268,275],269],0,[[268,258],[[6,[43]]]],0,[[277,28]],[[278,271,39,266,[270,[267]],[271,[[258,[267]]]],28]],[[35,[270,[267]],[46,[39,[278,[[258,[267]]]]]],28]],[265,[[86,[[85,[29]]]]]],[272,3],[[268,275],269],[[268,276],269],[35,6],[266,6],[267,6],0,[277,[[2,[277]]]],[[268,276],[[2,[269]]]],[[268,275],[[2,[269]]]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[268,[[6,[[258,[267]],43]]]],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[],31],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[279,280]],[[]],[[]],[[]],[[]],[[]],[[]],[[[279,[61]]],[[279,[61]]]],[280,280],[[[281,[61]]],[[281,[61]]]],[[]],[[]],[[]],[[280,280],149],[[[281,[282]],281],149],[[],279],[5],[5],[5],[5],[5],[5],[[],[[6,[280]]]],[[],[[6,[281]]]],[5],[5],[5],[[[279,[283]],279],16],[[280,280],16],[[[281,[283]],281],16],[[],16],[[],16],[[],16],[[[279,[243]],11],13],[[280,11],13],[[[281,[243]],11],13],[[]],[[]],[[]],0,[280,280],[[],5],[[],5],[[],5],[[]],[[]],[[]],[279,60],0,0,[[280,280],[[2,[149]]]],[[[281,[284]],281],[[2,[149]]]],[279,281],0,[280,6],[281,6],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],31],[[],31],[[],31],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[81,81],[135,135],[285,285],[[]],[[]],[[]],[47,[[6,[135,66]]]],[135,[[6,[5,67]]]],[68,[[6,[5,67]]]],[5],[5],[5],[5],[5],[5],[[],[[6,[81]]]],[[],[[6,[285]]]],[5],[5],[5],[[81,81],16],[[135,135],16],[[285,285],16],[[],16],[[],16],[[],16],[[81,11],[[6,[12]]]],[[135,11],[[6,[12]]]],[[285,11],[[6,[12]]]],[[]],[[]],[[]],[135,285],[47,[[6,[72]]]],[81],[135],[285],[[],5],[[],5],[[],5],[[]],[[]],[[]],[81,16],[135,16],[81,6],[285,6],[[],[[15,[78,79]]]],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[285,47],[[6,[135,66]]]],[135,[[6,[10]]]],[135,[[6,[10]]]],[[],31],[[],31],[[],31],[[]],[[]],[[]],0,0,0,0,[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],152],[231,286],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[75,75],[287,287],[288,288],[289,289],[[]],[[]],[[]],[[]],[47,[[6,[75,66]]]],[47,[[6,[288,66]]]],[47,[[6,[289,66]]]],[75,[[6,[5,67]]]],[288,[[6,[5,67]]]],[289,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[68,[[6,[5,67]]]],[5],[5],[5],[5],[5],[5],[5],[5],[5],[5],[[],[[6,[287]]]],[[],[[6,[288]]]],[[],[[6,[289]]]],[5],[5],[5],[5],[5],[[75,75],16],[[287,287],16],[[288,288],16],[[289,289],16],[[],16],[[],16],[[],16],[[],16],[[75,11],[[6,[12]]]],[[287,11],[[6,[12]]]],[[288,11],[[6,[12]]]],[[289,11],[[6,[12]]]],[[71,11],[[6,[12]]]],[[71,11],[[6,[12]]]],[[]],[75,287],[[]],[[]],[[]],[[]],[47,[[6,[72]]]],[47,[[6,[72]]]],[47,[[6,[72]]]],[75],[287],[288],[289],[[],5],[[],5],[[],5],[[],5],[[],5],0,[[]],[[]],[[]],[[]],[[]],0,[26],[287,6],[288,6],[289,6],0,[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[],[[15,[78,79]]]],[[]],[[]],[[]],[[]],[[],30],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[287,47],[[6,[75,66]]]],[75,80],[[],80],[[],31],[[],31],[[],31],[[],31],[[],31],[[75,60],[[6,[71]]]],[[]],[[]],[[]],[[]],[[]],0,0,0],"p":[[3,"FedimintServer"],[4,"Option"],[6,"Cancellable"],[4,"EpochMessage"],[15,"usize"],[4,"Result"],[3,"Duration"],[6,"ConsensusOutcome"],[4,"EpochVerifyError"],[4,"CoreError"],[3,"Formatter"],[3,"Error"],[6,"Result"],[3,"OsRngGen"],[3,"Vec"],[15,"bool"],[15,"u64"],[3,"EpochHistory"],[6,"SerdeConsensusOutcome"],[6,"ModuleRegistry"],[3,"ServerConfig"],[3,"FedimintConsensus"],[3,"TaskGroup"],[6,"PeerConnector"],[3,"ConsensusProposal"],[3,"Demand"],[6,"Result"],[3,"TaskHandle"],[8,"Future"],[3,"String"],[3,"TypeId"],[3,"Peer"],[3,"ServerConfigParams"],[4,"KeyType"],[3,"NetworkConfig"],[3,"TlsConfig"],[3,"PeerConnections"],[3,"MuxPeerConnections"],[3,"PeerId"],[8,"RngCore"],[8,"CryptoRng"],[15,"str"],[3,"Error"],[3,"Amount"],[15,"u16"],[3,"HashMap"],[3,"BTreeMap"],[3,"PrivateKey"],[8,"TypedServerModuleConfig"],[3,"Path"],[3,"ClientConfig"],[3,"Certificate"],[3,"FundingVerifier"],[3,"TransactionItemAmount"],[3,"LightningModule"],[3,"Wallet"],[3,"Mint"],[3,"Audit"],[3,"FedimintInterconnect"],[8,"Iterator"],[8,"Clone"],[8,"Send"],[3,"VerificationCaches"],[3,"ConsensusOutcomeConversion"],[3,"AcceptedTransaction"],[3,"DecodeError"],[3,"Error"],[8,"Write"],[4,"TransactionSubmissionError"],[3,"OutcomeHistory"],[4,"TransactionError"],[4,"DecodingError"],[3,"Database"],[3,"DatabaseTransaction"],[3,"Transaction"],[3,"ServerModule"],[8,"Error"],[15,"u8"],[3,"Global"],[3,"TransactionId"],[4,"TransactionStatus"],[3,"ConflictFilter"],[4,"ConsensusItem"],[4,"Value"],[3,"Box"],[3,"Pin"],[3,"ApiError"],[4,"DbKeyPrefix"],[3,"EpochHistoryKey"],[3,"ProposedTransactionKey"],[3,"ProposedTransactionKeyPrefix"],[3,"AcceptedTransactionKey"],[3,"RejectedTransactionKey"],[3,"DropPeerKey"],[3,"DropPeerKeyPrefix"],[3,"LastEpochKey"],[3,"PublicKeySet"],[3,"SerdeConsensusItem"],[3,"EpochSignatureShare"],[3,"EpochSignature"],[3,"SerdeEpochHistory"],[3,"Hash"],[3,"UnzipConsensusItem"],[3,"PublicKey"],[3,"ApiEndpoint"],[8,"ModuleInterconect"],[3,"InputMeta"],[4,"ModuleError"],[3,"Input"],[3,"VerificationCache"],[3,"OutPoint"],[3,"Output"],[8,"Any"],[3,"LightningInput"],[4,"LightningOutput"],[3,"ContractOutput"],[3,"ContractAccount"],[4,"LightningOutputOutcome"],[3,"OutputOutcome"],[3,"LightningGateway"],[3,"ConsensusItem"],[3,"LightningConsensusItem"],[3,"LightningVerificationCache"],[8,"Read"],[3,"LightningModuleConfigGen"],[3,"ModuleConfigGenParams"],[3,"HashSet"],[4,"LightningModuleError"],[3,"GatewayClientConfig"],[3,"ContractId"],[3,"IncomingContractOffer"],[3,"LightningModuleConfig"],[3,"ServerModuleConfig"],[3,"ClientModuleConfig"],[4,"OutputOutcome"],[3,"LightningModuleClientConfig"],[3,"FeeConsensus"],[3,"BitSlice"],[3,"u5"],[4,"Contract"],[4,"FundedContract"],[4,"ContractOutcome"],[3,"AccountContractOutcome"],[3,"OutgoingContractOutcome"],[3,"Preimage"],[4,"DecryptedPreimage"],[3,"EncryptedPreimage"],[3,"PreimageDecryptionShare"],[4,"Ordering"],[4,"Error"],[4,"Error"],[3,"XOnlyPublicKey"],[4,"Error"],[4,"BitSpanError"],[3,"AccountContract"],[3,"OfferId"],[3,"IncomingContract"],[3,"FundedIncomingContract"],[3,"OutgoingContract"],[3,"PartiallySignedRequest"],[3,"SignRequest"],[3,"PartialSigResponse"],[3,"SigResponse"],[3,"Note"],[3,"Nonce"],[3,"BlindNonce"],[3,"VerificationCache"],[3,"MintInput"],[3,"MintOutput"],[3,"MintOutputOutcome"],[3,"MintConsensusItem"],[3,"MintShareErrors"],[4,"PeerErrorType"],[4,"CombineError"],[4,"MintError"],[3,"MintConfigGenerator"],[3,"InvalidAmountTierError"],[3,"MintConfig"],[3,"AggregatePublicKey"],[3,"RandomState"],[3,"Message"],[3,"MintClientConfig"],[3,"FeeConsensus"],[3,"PegOutFees"],[3,"Amount"],[3,"BitcoindRpc"],[4,"WalletConsensusItem"],[3,"RoundConsensusItem"],[3,"PegOutSignatureItem"],[3,"RoundConsensus"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[3,"WalletOutputOutcome"],[3,"WalletInput"],[3,"WalletOutput"],[3,"WalletVerificationCache"],[15,"u32"],[3,"WalletConfigGenerator"],[4,"WalletError"],[4,"ProcessPegOutSigError"],[4,"PegInProofError"],[3,"Address"],[4,"Network"],[3,"WalletConfig"],[3,"UnzipWalletConsensusItem"],[3,"WalletClientConfig"],[3,"FeeConsensus"],[3,"CompressedPublicKey"],[3,"SecretKey"],[3,"BitcoindRpcCfg"],[4,"Descriptor"],[4,"DbKeyPrefix"],[3,"BlockHashKey"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"RoundConsensusKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Secp256k1"],[3,"TxOutProof"],[3,"BlockHash"],[3,"PegInProof"],[3,"Txid"],[3,"Transaction"],[3,"OutPoint"],[3,"TxOut"],[3,"ValidationErrors"],[3,"PeerConnectionMultiplexer"],[3,"ModuleMultiplexed"],[3,"ModuleMultiplexerOutOfOrder"],[8,"Debug"],[3,"RpcModule"],[3,"RpcHandlerCtx"],[3,"Arc"],[3,"PeerCertStore"],[3,"TcpListener"],[3,"TlsAcceptor"],[3,"TlsTcpConnector"],[6,"AnyConnector"],[8,"IntoIterator"],[3,"MockConnector"],[3,"MockNetwork"],[3,"BidiFramed"],[3,"BincodeCodec"],[3,"BytesMut"],[6,"AnyFramedTransport"],[3,"WriteHalf"],[3,"ReadHalf"],[3,"TcpStream"],[6,"TcpBidiFramed"],[3,"Context"],[4,"Poll"],[3,"ReconnectPeerConnections"],[3,"ConnectionConfig"],[3,"PeerMessage"],[3,"CommonPeerConnectionState"],[4,"PeerConnectionState"],[6,"SharedAnyConnector"],[3,"Receiver"],[3,"PeerConnection"],[3,"Node"],[3,"BTreeSet"],[3,"DisconnectedPeerConnectionState"],[3,"ConnectedPeerConnectionState"],[3,"PeerConnectionStateMachine"],[3,"Sender"],[3,"MessageQueue"],[3,"MessageId"],[3,"UniqueMessage"],[8,"Ord"],[8,"PartialEq"],[8,"PartialOrd"],[3,"SerdeOutputOutcome"],[3,"Signature"],[3,"SerdeTransaction"],[4,"Input"],[4,"Output"],[3,"PeerServerParams"],[3,"FederationeConfigGenParams"],[8,"ConflictFilterable"],[8,"IterUnzipConsensusItem"],[13,"CancelOutgoing"],[13,"Contract"],[13,"Offer"],[8,"IdentifyableContract"],[8,"IterUnzipWalletConsensusItem"],[8,"Contract"],[8,"Tweakable"],[3,"ModuleMultiplexerInner"],[8,"Connector"],[8,"FramedTransport"],[8,"PeerSlice"],[8,"TryIntoOutcome"],[13,"Accepted"],[8,"RngGenerator"],[13,"UnbalancedTransaction"]]},\
"fedimint_sled":{"doc":"Sled implementation of the <code>Database</code> trait. It should not …","t":[3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,12,11,11,11,11,11,11,2,11,11,11,11,11,11,11,11],"n":["SledDb","SledTransaction","begin_transaction","borrow","borrow","borrow_mut","borrow_mut","commit_tx","db","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from","init","init","inner","into","into","num_pending_operations","num_savepoint_operations","open","operations","raw_find_by_prefix","raw_get_bytes","raw_insert_bytes","raw_remove_entry","rollback_tx_to_savepoint","set_tx_savepoint","sled","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip"],"q":["fedimint_sled","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,3,1,3,3,3,1,3,1,3,1,3,1,3,1,1,3,1,3,1,1,3,3,3,1,3,3,3,3,3,3,3,0,1,3,1,3,1,3,1,3],"f":[0,0,[1,2],[[]],[[]],[[]],[[]],[[[4,[3]]],[[6,[[4,[5]]]]]],0,[7],[7],[7],[7],[7],[7],[[1,8],9],[[3,8],9],[[]],[10,1],[[]],[[],7],[[],7],[1,10],[[]],[[]],0,0,[[[12,[11]],13],[[15,[1,14]]]],0,[3,16],[3,[[15,[[19,[[18,[17]]]]]]]],[[3,[18,[17]]],[[15,[[19,[[18,[17]]]]]]]],[3,[[15,[[19,[[18,[17]]]]]]]],[3],[3],0,[[],20],[[],20],[[],20],[[],20],[[],21],[[],21],[[]],[[]]],"p":[[3,"SledDb"],[3,"DatabaseTransaction"],[3,"SledTransaction"],[3,"Box"],[8,"Future"],[3,"Pin"],[15,"usize"],[3,"Formatter"],[6,"Result"],[3,"Tree"],[3,"Path"],[8,"AsRef"],[15,"str"],[4,"Error"],[6,"Result"],[6,"PrefixIter"],[15,"u8"],[3,"Vec"],[4,"Option"],[4,"Result"],[3,"TypeId"]]},\
"fedimint_testing":{"doc":"","t":[3,3,3,12,5,5,0,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,3,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,12,12,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11],"n":["FakeFed","FakeInterconnect","TestInputMeta","amount","assert_all_equal","assert_all_equal_result","bitcoind","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","call","client_cfg","client_cfg","client_cfg_typed","consensus_round","eq","fetch_from_all","fmt","fmt","from","from","from","into","into","into","keys","members","new","new_block_height_responder","output_outcome","patch_dbs","set_block_height","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","verify_input","verify_output","vzip","vzip","vzip","FakeBitcoindRpc","FakeBitcoindRpcController","FakeBitcoindRpcState","add_pending_tx_to_block","block_height","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","controller","default","default","fee_rate","fmt","fmt","from","from","from","get_block","get_block_hash","get_block_height","get_fee_rate","get_network","height_hash","into","into","into","is_btc_sent_to","new","set_block_height","set_fee_rate","state","state","submit_transaction","to_owned","transactions","try_from","try_from","try_from","try_into","try_into","try_into","tx_in_blocks","type_id","type_id","type_id","vzip","vzip","vzip"],"q":["fedimint_testing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_testing::bitcoind","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","Make sure all elements are equal for <code>Result&lt;O, E&gt;</code>","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,0,12,0,0,0,8,1,8,12,1,8,12,1,8,8,8,8,12,8,8,12,1,8,12,1,8,12,12,8,8,1,8,8,8,1,8,12,1,8,12,1,8,12,8,8,1,8,12,0,0,0,27,29,27,29,28,27,29,28,28,28,28,29,28,29,29,28,27,29,28,28,28,28,28,28,0,27,29,28,27,28,27,27,27,28,28,28,29,27,29,28,27,29,28,29,27,29,28,27,29,28],"f":[0,0,0,0,[[]],[[]],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[1,2,3,4],[[7,[[6,[5]]]]]],[8,9],0,[8,[[11,[10]]]],[8],[[12,12],13],[8],[[[8,[14]],15],16],[[12,15],16],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[17,18],[[11,[8]]]],[[[20,[19]]],1],[[8,21],22],[8],[[8,23]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],25],[[],25],[[],25],[8,[[24,[12,26]]]],[8,13],[[]],[[]],[[]],0,0,0,[[27,23]],0,[[]],[[]],[[]],[[]],[[]],[[]],[28,28],[[]],[28,27],[[],29],[[],28],0,[[29,15],16],[[28,15],16],[[]],[[]],[[]],[[28,30],[[7,[[6,[5]]]]]],[[28,23],[[7,[[6,[5]]]]]],[28,[[7,[[6,[5]]]]]],[[28,31],[[7,[[6,[5]]]]]],[28,[[7,[[6,[5]]]]]],[23,30],[[]],[[]],[[]],[[27,32,33],13],[[],28],[[27,23]],[[27,[22,[34]]]],0,0,[[28,35],[[7,[[6,[5]]]]]],[[]],0,[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],0,[[],25],[[],25],[[],25],[[]],[[]],[[]]],"p":[[3,"FakeInterconnect"],[15,"str"],[3,"String"],[4,"Value"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"FakeFed"],[3,"ClientModuleConfig"],[8,"DeserializeOwned"],[6,"Result"],[3,"TestInputMeta"],[15,"bool"],[8,"Debug"],[3,"Formatter"],[6,"Result"],[15,"usize"],[3,"ModuleConfigGenParams"],[3,"AtomicU64"],[3,"Arc"],[3,"OutPoint"],[4,"Option"],[15,"u64"],[4,"Result"],[3,"TypeId"],[4,"ModuleError"],[3,"FakeBitcoindRpcController"],[3,"FakeBitcoindRpc"],[3,"FakeBitcoindRpcState"],[3,"BlockHash"],[15,"u16"],[3,"Amount"],[3,"Address"],[3,"Feerate"],[3,"Transaction"]]},\
"fedimint_wallet":{"doc":"","t":[17,13,13,13,8,13,13,13,6,13,6,13,3,13,3,13,3,3,4,3,13,3,13,13,3,3,13,13,13,3,3,3,3,4,4,3,3,3,3,13,13,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,12,11,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,5,11,11,12,12,12,12,11,12,5,11,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,0,12,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,3,3,3,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,3,13,3,3,13,3,3,13,3,3,3,13,3,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,8,8,10,10,13,3,4,13,13,13,3,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,5,11,11,11,11],"n":["CONFIRMATION_TARGET","DuplicateSignature","ErrorFinalizingPsbt","InvalidSignature","IterUnzipWalletConsensusItem","MalformedSignature","MissingOrMalformedChangeTweak","NotEnoughSpendableUTXO","PartialSig","PegInAlreadyClaimed","PegInDescriptor","PegInProofError","PegOut","PegOutFeeRate","PegOutFees","PegOutSignature","PegOutSignatureItem","PendingTransaction","ProcessPegOutSigError","RoundConsensus","RoundConsensus","RoundConsensusItem","RpcError","SighashError","SpendableUTXO","StatelessWallet","UnknownNetwork","UnknownPegInProofBlock","UnknownTransaction","UnsignedTransaction","UnzipWalletConsensusItem","Wallet","WalletConfigGenerator","WalletConsensusItem","WalletError","WalletInput","WalletOutput","WalletOutputOutcome","WalletVerificationCache","WrongNetwork","WrongSignatureCount","amount","amount","amount","api_base_name","api_base_name","api_endpoints","api_endpoints","apply_input","apply_input","apply_output","apply_output","as_any","as_any","as_any","as_any","as_any","as_any","audit","audit","available_utxos","await_consensus_proposal","await_consensus_proposal","begin_consensus_epoch","begin_consensus_epoch","block_height","block_height","block_is_known","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast_pending_tx","btc_rpc","build_verification_cache","build_verification_cache","cfg","change","change","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","common","config","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_height","consensus_proposal","consensus_proposal","create_peg_out_tx","create_tx","current_round_consensus","db","db","decode_consensus_item","decode_input","decode_output","decode_output_outcome","deref","deref","deref_mut","deref_mut","derive_script","descriptor","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","distributed_gen","dyn_hash","dyn_hash","dyn_hash","dyn_hash","end_consensus_epoch","end_consensus_epoch","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","erased_eq","erased_eq","erased_eq","erased_eq","fee_rate","fee_rate","fee_rate","fees","fees","finalize_peg_out_psbt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","get_wallet_value","hash","hash","hash","hash","hash","hash","hash","hash","hash","hash","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","into","is_address_valid_for_network","keys","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","module_key","new_with_bitcoind","offline_wallet","output_status","output_status","peg_out_signature","process_block_height_proposals","process_fee_proposals","process_randomness_contributions","proprietary_tweak_key","provide","provide","psbt","randomness","randomness_beacon","recipient","recognize_change_utxo","round_consensus","run_broadcast_pending_tx","save_peg_out_signatures","secp","secp","secret_key","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_peg_out_psbt","sign_psbt","signature","signatures","source","sync_up_to_consensus_height","target_height","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_client_config","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","total_weight","trusted_dealer_gen","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","tweak","tweak","tweakable","tx","txid","txoproof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unzip_wallet_consensus_item","validate_config","validate_input","validate_input","validate_output","validate_output","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","WALLET_MODULE_KEY","WalletModuleDecoder","borrow","borrow_mut","clone","clone_into","decode_consensus_item","decode_input","decode_output","decode_output_outcome","default","from","into","to_owned","try_from","try_into","type_id","vzip","FINALITY_DELAY","FeeConsensus","WalletClientConfig","WalletConfig","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","btc_rpc","clone","clone","clone","clone_into","clone_into","clone_into","default","default_fee","deserialize","deserialize","deserialize","eq","eq","fee_consensus","fee_consensus","finality_delay","finality_delay","fmt","fmt","fmt","from","from","from","hash","hash","into","into","into","network","network","new","new","peer_peg_in_keys","peg_in_abs","peg_in_descriptor","peg_in_descriptor","peg_in_key","peg_out_abs","serialize","serialize","serialize","to_client_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","validate_config","vzip","vzip","vzip","BlockHash","BlockHashKey","DbKeyPrefix","PegOutBitcoinOutPoint","PegOutBitcoinTransaction","PegOutTxSigCi","PegOutTxSignatureCI","PegOutTxSignatureCIPrefix","PendingTransaction","PendingTransactionKey","PendingTransactionPrefixKey","RoundConsensus","RoundConsensusKey","UTXOKey","UTXOPrefixKey","UnsignedTransaction","UnsignedTransactionKey","UnsignedTransactionPrefixKey","Utxo","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","into","into","into","into","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","CompressedPublicKey","borrow","borrow_mut","clone","clone_into","cmp","deserialize","eq","fmt","fmt","from","from_str","hash","hash_to_hash160","into","is_uncompressed","key","new","partial_cmp","serialize","to_hash160","to_hash256","to_owned","to_pubkeyhash","to_public_key","to_ripemd160","to_sha256","to_string","try_from","try_into","tweak","type_id","vzip","Contract","Tweakable","encode","tweak","OutputIndexOutOfRange","PegInProof","PegInProofError","ScriptDoesNotMatch","TooManyTransactionOutputs","TransactionNotInProof","TxOutProof","block","block_header","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contains_tx","deserialize","deserialize","eq","eq","fmt","fmt","fmt","fmt","from","from","from","from_bytes","from_bytes","hash","hash","identity","into","into","into","merkle_proof","new","outpoint","output_idx","proof_block","provide","serialize","serialize","to_bytes","to_bytes","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_into","try_into","try_into","tweak_contract_key","tweak_contract_key","tx_output","txout_proof","type_id","type_id","type_id","validate","validate_args","validate_peg_in_proof","verify","vzip","vzip","vzip"],"q":["fedimint_walletfedimint_wallet::common","","","","","","","","","","","","","","","","","","fedimint_wallet::config","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::dbfedimint_wallet::keys","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fedimint_wallet::tweakable","","","","fedimint_wallet::txoproof","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","A peg-out tx that is ready to be broadcast with a tweak …","","","","","","","","","","","","A PSBT that is awaiting enough signatures from the …","","","","","","","","Contains the Bitcoin transaction id of the transaction …","","","","","","","","","","","Try to spend a transaction input. On success all necessary …","","Try to create an output (e.g. issue coins, peg-out BTC, …","","","","","","","","","Queries the database and returns all assets and …","","","Blocks until a new <code>consensus_proposal</code> is available.","","This function is called once before transaction processing …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Some modules may have slow to verify inputs that would …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This module’s contribution to the next consensus proposal","","","Attempts to create a tx ready to be signed from available …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","This function is called once all transactions have been …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Retrieve the current status of the output. Depending on …","","","Panics","Panics","","","","","","","","","Add a change UTXO to our spendable UTXO database after it …","","","","","","","","","","","","","","","","","","Try to attach signatures to a pending peg-out tx.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Validate a transaction input before submitting it to the …","","Validate a transaction output before submitting it to the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Confirmations required for a peg in to be accepted by …","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","The bitcoin network the client will use","","","","","","The federations public peg-in-descriptor","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","An object that can be used as a ricardian contract to …","A key or object containing keys that may be tweaked for …","Serialize the contract in a deterministic way to be used …","Tweak the key with a <code>tweak</code> contract","","A proof about a script owning a certain output. Verifyable …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,63,63,63,0,63,63,61,0,61,0,61,0,61,0,30,0,0,0,0,30,0,61,63,0,0,61,61,63,0,0,0,0,0,0,0,0,0,0,61,63,1,34,37,4,4,4,4,4,4,4,4,30,4,39,40,41,42,4,4,4,4,4,4,4,31,33,4,50,54,30,86,31,32,33,4,34,35,36,1,37,39,40,41,42,61,63,50,54,30,86,31,32,33,4,34,35,36,1,37,39,40,41,42,61,63,0,4,4,4,4,35,36,30,30,31,32,33,34,35,36,1,37,39,39,40,40,41,41,42,42,30,31,32,33,34,35,36,1,37,39,40,41,42,0,0,30,31,32,33,34,35,36,1,37,39,40,41,42,30,31,32,33,34,35,36,1,37,39,40,41,42,30,31,32,33,34,35,36,1,37,39,40,41,42,4,4,4,4,50,4,0,4,4,4,4,4,40,41,40,41,50,50,30,31,32,33,34,1,37,39,40,41,42,54,30,39,40,41,4,4,30,31,32,33,1,37,39,40,41,42,61,30,39,40,41,31,33,1,36,37,4,30,31,32,33,4,34,35,36,1,37,39,40,41,42,61,61,63,63,50,54,30,86,31,32,33,4,34,35,36,1,37,39,40,41,42,61,61,61,63,30,31,32,33,34,35,36,1,37,39,40,41,42,4,30,31,32,33,1,37,39,40,41,42,50,54,30,86,31,32,33,4,34,35,36,1,37,39,40,41,42,61,63,0,0,30,30,4,4,39,39,40,40,41,41,42,42,4,4,4,4,86,4,4,4,0,61,63,36,31,33,37,4,86,0,4,50,4,50,30,31,32,33,34,1,37,39,40,41,42,4,50,32,36,61,4,4,30,31,32,33,34,35,36,1,37,39,40,41,42,54,30,31,32,33,34,35,36,1,37,39,40,41,42,61,63,1,54,50,54,30,86,31,32,33,4,34,35,36,1,37,39,40,41,42,61,63,50,54,30,86,31,32,33,4,34,35,36,1,37,39,40,41,42,61,63,34,35,0,35,32,0,50,54,30,86,31,32,33,4,34,35,36,1,37,39,40,41,42,61,63,125,54,4,4,4,4,50,54,30,86,31,32,33,4,34,35,36,1,37,39,40,41,42,61,63,0,0,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,0,0,0,0,75,88,89,75,88,89,75,75,88,89,75,88,89,89,75,75,88,89,88,89,75,88,75,88,75,88,89,75,88,89,88,89,75,88,89,75,88,75,88,75,89,75,88,75,89,75,88,89,75,75,88,89,75,88,89,75,88,89,75,88,89,75,75,88,89,94,0,0,94,0,94,0,0,94,0,0,94,0,0,0,94,0,0,94,94,95,96,97,98,99,100,101,102,103,104,105,94,95,96,97,98,99,100,101,102,103,104,105,94,95,96,97,98,99,100,101,102,103,104,105,94,95,96,97,98,99,100,101,102,103,104,105,95,96,97,98,99,100,101,102,103,104,105,95,96,97,98,99,100,101,102,103,104,105,95,96,97,98,99,100,101,102,103,104,105,95,96,97,98,99,100,101,102,103,104,105,94,95,96,97,98,99,100,101,102,103,104,105,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,94,95,96,97,98,99,100,101,102,103,104,105,95,95,96,96,97,97,98,98,99,99,100,100,101,101,102,102,103,103,104,104,105,105,94,95,96,97,98,99,100,101,102,103,104,105,94,95,96,97,98,99,100,101,102,103,104,105,94,95,96,97,98,99,100,101,102,103,104,105,94,95,96,97,98,99,100,101,102,103,104,105,94,95,96,97,98,99,100,101,102,103,104,105,0,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,90,0,0,126,127,67,0,0,67,67,67,0,115,115,116,115,67,116,115,67,116,115,116,115,116,115,116,115,116,115,115,116,115,116,115,116,115,67,67,116,115,67,116,115,116,115,116,116,115,67,115,116,116,116,116,67,116,115,116,115,116,115,67,116,116,115,67,116,115,67,116,116,116,116,116,115,67,116,116,0,116,116,115,67],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[1,2],0,0,[[],3],[4,3],[[],[[8,[[6,[5]],7]]]],[4,[[8,[[6,[4]]]]]],[[9,10,11,12],[[15,[13,14]]]],[[4,9,10],[[15,[13,14]]]],[[10,16,17],[[15,[18,14]]]],[[4,10,17],[[15,[18,14]]]],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[4,20]],[20],[4,8],[4,[[23,[[22,[21]]]]]],[[],[[23,[[22,[21,7]]]]]],[[4,10,8],[[23,[[22,[21]]]]]],[[10,[8,[7]]],[[23,[[22,[21,7]]]]]],0,0,[[4,24],25],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[26,27]],0,[[],12],[[4,28]],0,0,0,[[],29],[30,30],[31,31],[32,32],[33,33],[34,34],[35,35],[36,36],[1,1],[37,37],[[],38],[39,39],[[],11],[40,40],[[],16],[41,41],[42,42],[[],12],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[43,[[15,[30,44]]]],[43,[[15,[31,44]]]],[43,[[15,[32,44]]]],[43,[[15,[33,44]]]],[43,[[15,[34,44]]]],[43,[[15,[35,44]]]],[43,[[15,[36,44]]]],[43,[[15,[1,44]]]],[43,[[15,[37,44]]]],[43,[[15,[39,44]]]],[43,[[15,[40,44]]]],[43,[[15,[41,44]]]],[43,[[15,[42,44]]]],[30,[[15,[45,46]]]],[31,[[15,[45,46]]]],[32,[[15,[45,46]]]],[33,[[15,[45,46]]]],[34,[[15,[45,46]]]],[35,[[15,[45,46]]]],[36,[[15,[45,46]]]],[1,[[15,[45,46]]]],[37,[[15,[45,46]]]],[39,[[15,[45,46]]]],[40,[[15,[45,46]]]],[41,[[15,[45,46]]]],[42,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[4,[[49,[48]]]],[[],[[23,[[22,[21,7]]]]]],[4,[[23,[[22,[21]]]]]],[[4,37],[[49,[36]]]],[[50,2,51,8,52],[[49,[36]]]],[4,[[49,[33]]]],0,0,[53,[[15,[29,44]]]],[53,[[15,[11,44]]]],[53,[[15,[16,44]]]],[53,[[15,[38,44]]]],[40],[41],[40],[41],[50,51],0,[[],[[15,[30]]]],[[],[[15,[31]]]],[[],[[15,[32]]]],[[],[[15,[33]]]],[[],[[15,[34]]]],[[],[[15,[1]]]],[[],[[15,[37]]]],[[],[[15,[39]]]],[[],[[15,[40]]]],[[],[[15,[41]]]],[[],[[15,[42]]]],[[54,55,56,57,58],[[23,[[22,[21]]]]]],[[],59],[[],59],[[],59],[[],59],[[60,10],[[23,[[22,[21,7]]]]]],[[4,60,10],[[23,[[22,[21]]]]]],[[30,30],25],[[31,31],25],[[32,32],25],[[33,33],25],[[1,1],25],[[37,37],25],[[39,39],25],[[40,40],25],[[41,41],25],[[42,42],25],[[61,61],25],[29,25],[38,25],[11,25],[16,25],0,0,0,0,0,[[4,62,2],[[15,[35,63]]]],[[30,64],65],[[31,64],65],[[32,64],65],[[33,64],65],[[4,64],65],[[34,64],65],[[35,64],65],[[36,64],65],[[1,64],65],[[37,64],65],[[39,64],65],[[40,64],65],[[41,64],65],[[42,64],65],[[61,64],65],[[61,64],65],[[63,64],65],[[63,64],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[66,61],[[]],[67,61],[[]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[4,2],[30],[31],[32],[33],[1],[37],[39],[40],[41],[42],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[70,71],25],0,[30,72],[[],73],[4,74],[[],73],[[],73],[39,72],[[],73],[40,72],[41,72],[[],73],[42,72],[[],73],[[75,26,27,58],[[15,[4,61]]]],[4,50],[17,[[49,[38]]]],[[4,17],49],0,[[4,10,[8,[48]]],48],[[4,[8,[52]]],52],[[4,8]],[[],76],[77],[77],0,0,0,0,[[4,10,35]],0,[[26,27,78]],[[4,10,8]],0,0,0,[30,15],[31,15],[32,15],[33,15],[34,15],[1,15],[37,15],[39,15],[40,15],[41,15],[42,15],[[4,62,56,32],[[15,[63]]]],[[50,62]],0,0,[61,[[49,[79]]]],[[4,10,48]],[4,48],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[54,81],[[83,[82]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],84],[[],84],0,[[54,57]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],0,0,0,0,0,0,[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],86],[[54,56,81],83],[[9,12,11],[[15,[13,14]]]],[[4,9],[[15,[13,14]]]],[16,[[15,[18,14]]]],[4,[[15,[18,14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[87,87],[[]],[53,[[15,[29,44]]]],[53,[[15,[11,44]]]],[53,[[15,[16,44]]]],[53,[[15,[38,44]]]],[[],87],[[]],[[]],[[]],[[],15],[[],15],[[],85],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],0,[75,75],[88,88],[89,89],[[]],[[]],[[]],[[],89],0,[[],[[15,[75]]]],[[],[[15,[88]]]],[[],[[15,[89]]]],[[88,88],25],[[89,89],25],0,0,0,0,[[75,64],65],[[88,64],65],[[89,64],65],[[]],[[]],[[]],[88],[89],[[]],[[]],[[]],0,0,[[[68,[56,90]],91,45,92],75],[93,88],0,0,0,0,0,0,[75,15],[88,15],[89,15],[75,82],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],85],[[],85],[[],85],[[75,56],83],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[94,94],[95,95],[96,96],[97,97],[98,98],[99,99],[100,100],[101,101],[102,102],[103,103],[104,104],[105,105],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,[[15,[95,44]]]],[43,[[15,[96,44]]]],[43,[[15,[97,44]]]],[43,[[15,[98,44]]]],[43,[[15,[99,44]]]],[43,[[15,[100,44]]]],[43,[[15,[101,44]]]],[43,[[15,[102,44]]]],[43,[[15,[103,44]]]],[43,[[15,[104,44]]]],[43,[[15,[105,44]]]],[95,[[15,[45,46]]]],[96,[[15,[45,46]]]],[97,[[15,[45,46]]]],[98,[[15,[45,46]]]],[99,[[15,[45,46]]]],[100,[[15,[45,46]]]],[101,[[15,[45,46]]]],[102,[[15,[45,46]]]],[103,[[15,[45,46]]]],[104,[[15,[45,46]]]],[105,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[[95,64],65],[[96,64],65],[[97,64],65],[[98,64],65],[[99,64],65],[[100,64],65],[[101,64],65],[[102,64],65],[[103,64],65],[[104,64],65],[[105,64],65],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[68,[[15,[69]]]],[[],[[15,[69]]]],[68,[[15,[69]]]],[[],[[15,[69]]]],[68,[[15,[69]]]],[[],[[15,[69]]]],[68,[[15,[69]]]],[[],[[15,[69]]]],[68,[[15,[69]]]],[[],[[15,[69]]]],[68,[[15,[69]]]],[[],[[15,[69]]]],[[],[[15,[69]]]],[68,[[15,[69]]]],[68,[[15,[69]]]],[[],[[15,[69]]]],[68,[[15,[69]]]],[[],[[15,[69]]]],[[],[[15,[69]]]],[68,[[15,[69]]]],[[],[[15,[69]]]],[68,[[15,[69]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[],85],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[]],[[]],[90,90],[[]],[[90,90],106],[[],[[15,[90]]]],[[90,90],25],[[90,64],65],[[90,64],65],[[]],[3,[[15,[90]]]],[90],[[],107],[[]],[90,25],0,[108,90],[[90,90],[[49,[106]]]],[90,15],[[],107],[[],109],[[]],[90],[90,110],[[],111],[[],112],[[],84],[[],15],[[],15],[[90,113],90],[[],85],[[]],0,0,[[],114],[113],0,0,0,0,0,0,0,[115,24],0,[[]],[[]],[[]],[[]],[[]],[[]],[116,116],[115,115],[[]],[[]],[43,[[15,[116,44]]]],[43,[[15,[115,44]]]],[116,[[15,[45,46]]]],[115,[[15,[45,46]]]],[47,[[15,[45,46]]]],[47,[[15,[45,46]]]],[[115,117],25],[[],[[15,[116]]]],[[],[[15,[115]]]],[[116,116],25],[[115,115],25],[[116,64],65],[[115,64],65],[[67,64],65],[[67,64],65],[[]],[[]],[[]],[68,[[15,[69]]]],[68,[[15,[69]]]],[116],[115],[116],[[]],[[]],[[]],0,[[115,118,48,119],[[15,[116,67]]]],[116,120],0,[116,24],[77],[116,15],[115,15],[[],[[8,[80,7]]]],[[],[[8,[80,7]]]],[[]],[[]],[[],84],0,[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[116,119],0,[116,121],0,[[],85],[[],85],[[],85],[116,[[15,[122]]]],[116,[[15,[122]]]],[116,[[15,[123]]]],[[116,113,124],[[15,[67]]]],[[]],[[]],[[]]],"p":[[3,"PegOutFees"],[3,"Amount"],[15,"str"],[3,"Wallet"],[3,"ServerModule"],[3,"ApiEndpoint"],[3,"Global"],[3,"Vec"],[8,"ModuleInterconect"],[3,"DatabaseTransaction"],[3,"Input"],[3,"VerificationCache"],[3,"InputMeta"],[4,"ModuleError"],[4,"Result"],[3,"Output"],[3,"OutPoint"],[3,"TransactionItemAmount"],[8,"Any"],[3,"Audit"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"BlockHash"],[15,"bool"],[3,"Database"],[3,"BitcoindRpc"],[8,"Iterator"],[3,"ConsensusItem"],[4,"WalletConsensusItem"],[3,"RoundConsensusItem"],[3,"PegOutSignatureItem"],[3,"RoundConsensus"],[3,"SpendableUTXO"],[3,"PendingTransaction"],[3,"UnsignedTransaction"],[3,"PegOut"],[3,"OutputOutcome"],[3,"WalletOutputOutcome"],[3,"WalletInput"],[3,"WalletOutput"],[3,"WalletVerificationCache"],[6,"ModuleRegistry"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[15,"u32"],[4,"Option"],[3,"StatelessWallet"],[3,"Script"],[3,"Feerate"],[8,"Read"],[3,"WalletConfigGenerator"],[3,"MuxPeerConnections"],[3,"PeerId"],[3,"ModuleConfigGenParams"],[3,"TaskGroup"],[15,"u64"],[3,"HashSet"],[4,"WalletError"],[3,"PartiallySignedTransaction"],[4,"ProcessPegOutSigError"],[3,"Formatter"],[6,"Result"],[3,"Error"],[4,"PegInProofError"],[3,"BTreeMap"],[4,"DecodingError"],[3,"Address"],[4,"Network"],[6,"ModuleKey"],[15,"u16"],[6,"ModuleKey"],[3,"WalletConfig"],[3,"ProprietaryKey"],[3,"Demand"],[3,"TaskHandle"],[8,"Error"],[15,"u8"],[3,"ServerModuleConfig"],[3,"ClientModuleConfig"],[6,"Result"],[3,"String"],[3,"TypeId"],[3,"UnzipWalletConsensusItem"],[3,"WalletModuleDecoder"],[3,"WalletClientConfig"],[3,"FeeConsensus"],[3,"CompressedPublicKey"],[3,"SecretKey"],[3,"BitcoindRpcCfg"],[6,"PegInDescriptor"],[4,"DbKeyPrefix"],[3,"BlockHashKey"],[3,"UTXOKey"],[3,"UTXOPrefixKey"],[3,"RoundConsensusKey"],[3,"UnsignedTransactionKey"],[3,"UnsignedTransactionPrefixKey"],[3,"PendingTransactionKey"],[3,"PendingTransactionPrefixKey"],[3,"PegOutTxSignatureCI"],[3,"PegOutTxSignatureCIPrefix"],[3,"PegOutBitcoinTransaction"],[4,"Ordering"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"PublicKey"],[3,"Hash"],[3,"Hash"],[3,"Secp256k1"],[6,"Result"],[3,"TxOutProof"],[3,"PegInProof"],[3,"Txid"],[3,"Transaction"],[3,"XOnlyPublicKey"],[3,"OutPoint"],[3,"TxOut"],[3,"ValidationErrors"],[3,"ValidationError"],[4,"Descriptor"],[8,"IterUnzipWalletConsensusItem"],[8,"Contract"],[8,"Tweakable"]]},\
"fedimintd":{"doc":"","t":[0,0,17,17,17,17,17,17,17,5,5,5,5,5,3,3,3,3,3,3,6,3,3,13,3,4,3,3,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,5,12,12,12,11,11,11,11,11,11,0,12,12,12,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,5,5,5,11,11,11,11,11,11,5,5,12,12,5,12,12,12,12,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,12,5,11,11,11,12,11,11,12,11,11,5,11,11,11,11],"n":["encrypt","ui","CONFIG_FILE","DB_FILE","ITERATIONS_DEBUG","ITERATIONS_PROD","SALT_FILE","TLS_CERT","TLS_PK","encrypted_read","encrypted_write","get_key","increment_nonce","zero_nonce","ChooseTemplate","DealerTemplate","DisplayConfigsTemplate","FedName","Guardian","HomeTemplate","MutableState","PlayerTemplate","ReceiveConfigsForm","SetupComplete","State","UiMessage","UrlConnection","UrlForm","add_guardian","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","btc_rpc","btc_rpc","cfg_path","choose","client_config","client_config","client_config","clone","clone","clone","clone_into","clone_into","clone_into","configgen","connection_string","connection_string","connection_string","deal","dealer","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","display_configs","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","dyn_render_into","extension","extension","extension","extension","extension","extension","federation_connection_string","federation_connection_string","federation_name","federation_name","federation_name","federation_name","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","guardians","guardians","home","init","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","into","into_response","into_response","into_response","into_response","into_response","into_response","ipaddr","mime_type","mime_type","mime_type","mime_type","mime_type","mime_type","name","player","qr","receive_configs","render_into","render_into","render_into","render_into","render_into","render_into","run_fedimint","run_ui","running","running","save_configs","sender","server_config","server_configs","server_configs","set_url_connection","size_hint","size_hint","size_hint","size_hint","size_hint","size_hint","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","url_connection","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","SetupConfigParams","amount_tiers","borrow","borrow_mut","btc_rpc","configgen","deref","deref_mut","drop","federation_name","fmt","from","guardians","init","into","trusted_dealer_gen","try_from","try_into","type_id","vzip"],"q":["fedimintd","","fedimintd::encrypt","","","","","","","","","","","","fedimintd::uifedimintd::ui::configgen","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","Reads encrypted data from a file, returns an incremented …","Write <code>data</code> encrypted to a <code>file</code> with an unused <code>nonce</code> that …","","returns a nonce from bytes and an incremented nonce for …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,31,0,0,0,0,0,12,28,16,20,19,29,17,30,18,22,8,31,12,28,16,20,19,29,17,30,18,22,8,31,19,8,8,0,18,22,8,12,17,18,12,17,18,0,12,30,8,0,0,12,28,16,20,19,29,17,30,18,22,8,31,12,28,16,20,19,29,17,30,18,22,8,31,12,19,17,18,0,12,28,16,20,19,29,17,30,18,22,8,31,28,16,20,29,30,22,28,16,20,29,30,22,28,16,20,29,30,22,28,22,28,19,22,8,12,28,16,20,19,29,17,30,18,22,8,31,12,28,16,20,19,29,17,30,18,22,8,31,20,8,0,12,28,16,20,19,29,17,30,18,22,8,31,12,28,16,20,19,29,17,30,18,22,8,31,28,16,20,29,30,22,17,28,16,20,29,30,22,12,0,0,0,28,16,20,29,30,22,0,0,28,8,0,8,18,22,8,0,28,16,20,29,30,22,12,17,18,28,16,20,29,30,22,12,28,16,20,19,29,17,30,18,22,8,31,12,28,16,20,19,29,17,30,18,22,8,31,12,28,16,20,19,29,17,30,18,22,8,31,0,12,28,16,20,19,29,17,30,18,22,8,31,0,43,43,43,43,0,43,43,43,43,43,43,43,43,43,0,43,43,43,43],"f":[0,0,0,0,0,0,0,0,0,[[1,2]],[[[4,[3]],1,5,2]],[[[7,[6]],2],1],[[]],[[],5],0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[11,[[10,[[9,[8]]]]]],[13,[12]]],[[15,[14]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[[11,[[10,[[9,[8]]]]]]],16],0,0,0,[12,12],[17,17],[18,18],[[]],[[]],[[]],0,0,0,0,[[[11,[[10,[[9,[8]]]]]],[13,[19]]],[[15,[14]]]],[[[11,[[10,[[9,[8]]]]]]],20],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[],[[15,[12]]]],[[],[[15,[19]]]],[[],[[15,[17]]]],[[],[[15,[18]]]],[[[11,[[10,[[9,[8]]]]]]],22],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[21],[[],[[15,[6,23]]]],[[],[[15,[6,23]]]],[[],[[15,[6,23]]]],[[],[[15,[6,23]]]],[[],[[15,[6,23]]]],[[],[[15,[6,23]]]],[24,[[15,[23]]]],[24,[[15,[23]]]],[24,[[15,[23]]]],[24,[[15,[23]]]],[24,[[15,[23]]]],[24,[[15,[23]]]],[[],[[7,[25]]]],[[],[[7,[25]]]],[[],[[7,[25]]]],[[],[[7,[25]]]],[[],[[7,[25]]]],[[],[[7,[25]]]],0,0,0,0,0,0,[[12,26],27],[[28,26],27],[[16,26],27],[[20,26],27],[[19,26],27],[[29,26],27],[[17,26],27],[[30,26],27],[[18,26],27],[[22,26],27],[[8,26],27],[[31,26],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[[11,[[10,[[9,[8]]]]]]],28],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[28,[[33,[32]]]],[16,[[33,[32]]]],[20,[[33,[32]]]],[29,[[33,[32]]]],[30,[[33,[32]]]],[22,[[33,[32]]]],0,[[],25],[[],25],[[],25],[[],25],[[],25],[[],25],0,[[[11,[[10,[[9,[8]]]]]]],30],[[[11,[[10,[[9,[8]]]]]]],34],[[[11,[[10,[[9,[8]]]]]],[13,[18]]],[[15,[14]]]],[28,35],[16,35],[20,35],[29,35],[30,35],[22,35],[36],[[2,[37,[31]],38]],0,0,[[39,40,2]],0,0,0,0,[[[11,[[10,[[9,[8]]]]]],[13,[17]]],[[15,[14]]]],[[],21],[[],21],[[],21],[[],21],[[],21],[[],21],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],6],[[],6],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],15],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[],41],[[[11,[[10,[[9,[8]]]]]]],29],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],0,[[6,[4,[12]],42]],[21],[21],[21],0,[[43,26],27],[[]],0,[[],21],[[]],[[43,[0,[44,45]]]],[[],15],[[],15],[[],41],[[]]],"p":[[3,"LessSafeKey"],[3,"PathBuf"],[15,"u8"],[3,"Vec"],[3,"Nonce"],[3,"String"],[4,"Option"],[3,"State"],[3,"RwLock"],[3,"Arc"],[3,"Extension"],[3,"Guardian"],[3,"Form"],[3,"Redirect"],[4,"Result"],[3,"ChooseTemplate"],[3,"UrlForm"],[3,"ReceiveConfigsForm"],[3,"FedName"],[3,"DealerTemplate"],[15,"usize"],[3,"DisplayConfigsTemplate"],[4,"Error"],[8,"Write"],[15,"str"],[3,"Formatter"],[6,"Result"],[3,"HomeTemplate"],[3,"UrlConnection"],[3,"PlayerTemplate"],[4,"UiMessage"],[6,"BoxBody"],[3,"Response"],[8,"IntoResponse"],[6,"Result"],[3,"RwLockWriteGuard"],[3,"Sender"],[15,"u32"],[3,"ServerConfig"],[3,"ClientConfig"],[3,"TypeId"],[3,"BitcoindRpcCfg"],[3,"SetupConfigParams"],[8,"RngCore"],[8,"CryptoRng"]]},\
"gateway_cli":{"doc":"","t":[13,13,3,4,13,13,13,13,13,13,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,12,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12],"n":["Address","Balance","Cli","Commands","Deposit","GenerateConfig","Info","RegisterFed","VersionHash","Withdraw","address","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","main","print_response","rpcpassword","source_password","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","address","address","amount","connect","federation_id","federation_id","federation_id","federation_id","out_dir","transaction","txout_proof"],"q":["gateway_cli","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","gateway_cli::Commands","","","","","","","","","",""],"d":["Generate a new peg-in address, funds sent to it can later …","Check gateway balance TODO: add federation id to scope the …","","","Deposit funds into a gateway federation TODO: add …","Ganerate gateway configuration NOTE: This command can only …","Display high-level information about the Gateway","Register federation with the gateway","Display CLI version hash","Claim funds from a gateway federation TODO: add federation …","The address of the gateway webserver","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","WARNING: Passing in a password from the command line may …","","","","","","","","","","","","","","The address of the gateway webserver","The address to send the funds to","The amount to withdraw","ConnectInfo code to connect to the federation","","","","","The gateway configuration directory","","The TxOutProof which was created from sending BTC to the …"],"i":[7,7,0,0,7,7,7,7,7,7,4,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,0,4,0,4,7,4,7,4,7,4,7,4,7,4,7,15,16,16,17,18,19,20,16,15,20,20],"f":[0,0,0,0,0,0,0,0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[]],[12],0,[[[9,[13]]],13],[[],6],[[],6],[[],6],[[],6],[[],14],[[],14],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Commands"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"Response"],[3,"String"],[3,"TypeId"],[13,"GenerateConfig"],[13,"Withdraw"],[13,"RegisterFed"],[13,"Balance"],[13,"Address"],[13,"Deposit"]]},\
"hkdf":{"doc":"This crate implements the RFC5869 hash based key …","t":[8,18,16,3,16,18,10,10,2,11,11,11,11,11,11,10,10,11,10,11,0,11,10,11,12,11,11,11,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["BitcoinHash","DISPLAY_BACKWARD","Engine","Hkdf","Inner","LEN","all_zeros","as_inner","bitcoin_hashes","borrow","borrow_mut","derive","derive_hmac","engine","from","from_engine","from_inner","from_prk","from_slice","hash","hashes","into","into_inner","new","prk","try_from","try_into","type_id","Hash160","Ripemd160","Sha1","Sha256","Sha256d","Sha512","Siphash24","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","all_zeros","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_inner","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_ref","as_u64","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","cmp","cmp","default","deref","deref","deref","deref","deref","deref","deref","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","engine","engine","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_byte_iter","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine","from_engine_to_u64","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_inner","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_slice_delegated","from_str","from_str","from_str","from_str","from_str","from_str","from_str","from_u64","hash","hash","hash","hash","hash","hash","hash","hash_to_u64_with_keys","hash_with_keys","index","index","index","index","index","index","index","into","into","into","into","into","into","into","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","into_inner","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_hex","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_string","to_string","to_string","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id"],"q":["hkdf","","","","","","","","","","","","","","","","","","","","","","","","","","","","hkdf::hashesd":["Trait which applies to hashes of all types.","Flag indicating whether user-visible serializations of …","A hashing engine which bytes can be serialized into. It is …","Implements the RFC5869 hash based key derivation function …","The byte array that represents the hash internally.","Length of the hash, in bytes.","Returns an all zero hash.","Unwraps the hash and returns a reference to the underlying …","","","","Run HKDF-expand to generate new key material","Run HKDF-expand to generate new key material with …","Constructs a new engine.","Returns the argument unchanged.","Produces a hash from the current state of a given engine.","Constructs a hash from the underlying byte array.","Construct the HKDF from a pseudo random key that has the …","Copies a byte slice into a hash object.","Hashes some bytes.","","Calls <code>U::from(self)</code>.","Unwraps the hash and returns the underlying byte array.","Run HKDF-extract and keep the resulting pseudo random key …","","","","","Output of the Bitcoin HASH160 hash function.","Output of the RIPEMD160 hash function.","Output of the SHA1 hash function.","Output of the SHA256 hash function.","Output of the SHA256d hash function.","Output of the SHA256 hash function.","Output of the SipHash24 hash function.","","","","","","","","","","","","","","","","","","","","","","Returns the (little endian) 64-bit integer representation …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Produces a hash as <code>u64</code> from the current state of a given …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Creates a hash from its (little endian) 64-bit integer …","","","","","","","","Hashes the given data directly to u64 with an engine with …","Hashes the given data with an engine with the provided …","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","Outputs the hash in hexadecimal form.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,1,1,0,1,1,1,1,0,2,2,2,2,1,2,1,1,2,1,1,0,2,1,2,2,2,2,2,0,0,0,0,0,0,0,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,14,8,8,9,9,10,10,11,11,12,12,13,13,14,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,8,9,10,11,12,13,14,8,9,10,11,12,13,14,9,13,8,9,10,11,12,13,14,8,8,8,9,9,9,10,10,10,11,11,11,12,12,12,13,13,13,14,14,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,14,8,9,10,11,12,13,14,14,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14,8,9,10,11,12,13,14],"f":[0,0,0,0,0,0,[[]],[[]],0,[[]],[[]],[[[2,[1]]]],[[[2,[1]]],[[3,[1]]]],[[]],[[]],[[]],[[]],[[[3,[1]]],[[2,[1]]]],[[],[[5,[4]]]],[[]],0,[[]],[[]],[6,[[2,[1]]]],0,[[],5],[[],5],[[],7],0,0,0,0,0,0,0,[[],8],[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[8],[9],[10],[11],[12],[13],[14],[8],[9],[10],[11],[12],[13],[14],[14,15],[[]],[8],[9],[[]],[[]],[10],[[]],[11],[[]],[12],[13],[[]],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8,8],[9,9],[10,10],[11,11],[12,12],[13,13],[14,14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[8,8],16],[[9,9],16],[[10,10],16],[[11,11],16],[[12,12],16],[[13,13],16],[[14,14],16],[[],8],[8],[9],[10],[11],[12],[13],[14],[[],[[5,[8]]]],[[],[[5,[9]]]],[[],[[5,[10]]]],[[],[[5,[11]]]],[[],[[5,[12]]]],[[],[[5,[13]]]],[[],[[5,[14]]]],[[],17],[[],17],[[8,8],18],[[9,9],18],[[10,10],18],[[11,11],18],[[12,12],18],[[13,13],18],[[14,14],18],[[8,19],[[5,[20]]]],[[8,19],[[5,[20]]]],[[8,19],[[5,[20]]]],[[9,19],[[5,[20]]]],[[9,19],[[5,[20]]]],[[9,19],[[5,[20]]]],[[10,19],[[5,[20]]]],[[10,19],[[5,[20]]]],[[10,19],[[5,[20]]]],[[11,19],[[5,[20]]]],[[11,19],[[5,[20]]]],[[11,19],[[5,[20]]]],[[12,19],[[5,[20]]]],[[12,19],[[5,[20]]]],[[12,19],[[5,[20]]]],[[13,19],[[5,[20]]]],[[13,19],[[5,[20]]]],[[13,19],[[5,[20]]]],[[14,19],[[5,[20]]]],[[14,19],[[5,[20]]]],[[14,19],[[5,[20]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[5,[21]]]],[[],[[5,[21]]]],[[],[[5,[21]]]],[[],[[5,[21]]]],[[],[[5,[21]]]],[[],[[5,[21]]]],[[],[[5,[21]]]],[22,8],[17,9],[23,10],[24,11],[17,12],[17,13],[25,14],[25,15],[[],8],[[],9],[[],10],[[],11],[[],12],[[],13],[[],14],[[],[[5,[8,4]]]],[[],[[5,[9,4]]]],[[],[[5,[10,4]]]],[[],[[5,[11,4]]]],[[],[[5,[12,4]]]],[[],[[5,[13,4]]]],[[],[[5,[14,4]]]],[[],[[5,[8,4]]]],[[],[[5,[9,4]]]],[[],[[5,[10,4]]]],[[],[[5,[11,4]]]],[[],[[5,[12,4]]]],[[],[[5,[13,4]]]],[[],[[5,[14,4]]]],[26,[[5,[8]]]],[26,[[5,[9]]]],[26,[[5,[10]]]],[26,[[5,[11]]]],[26,[[5,[12]]]],[26,[[5,[13]]]],[26,[[5,[14]]]],[15,14],[8],[9],[10],[11],[12],[13],[14],[[15,15],15],[[15,15],14],[8],[9],[10],[11],[12],[13],[14],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[8],[9],[10],[11],[12],[13],[14],[[8,8],[[6,[16]]]],[[9,9],[[6,[16]]]],[[10,10],[[6,[16]]]],[[11,11],[[6,[16]]]],[[12,12],[[6,[16]]]],[[13,13],[[6,[16]]]],[[14,14],[[6,[16]]]],[8,5],[9,5],[10,5],[11,5],[12,5],[13,5],[14,5],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],27],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7],[[],7]],"p":[[8,"BitcoinHash"],[3,"Hkdf"],[3,"Hmac"],[4,"Error"],[4,"Result"],[4,"Option"],[3,"TypeId"],[3,"Sha512"],[3,"Hash160"],[3,"Ripemd160"],[3,"Sha1"],[3,"Sha256"],[3,"Sha256d"],[3,"Siphash24"],[15,"u64"],[4,"Ordering"],[3,"HashEngine"],[15,"bool"],[3,"Formatter"],[3,"Error"],[4,"Error"],[3,"HashEngine"],[3,"HashEngine"],[3,"HashEngine"],[3,"HashEngine"],[15,"str"],[3,"String"]]},\
"ln_gateway":{"doc":"","t":[13,13,3,4,13,13,6,13,0,12,11,11,11,11,0,12,0,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,12,11,11,12,11,0,11,11,12,11,12,11,11,11,11,11,11,11,0,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,3,8,3,3,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,3,3,3,3,12,5,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,5,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,3,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,3,8,11,11,11,11,11,11,11,11,11,10,10,11,11,11,11,13,3,13,13,3,3,3,4,3,8,3,13,3,13,13,3,3,13,16,13,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,14,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,0,0,11,12,12,5,5,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,3,12,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5],"n":["ClientError","CouldNotRoute","LnGateway","LnGatewayError","MintClientE","Other","Result","UnknownFederation","actor","actors","borrow","borrow","borrow_mut","borrow_mut","client","client_builder","cln","config","config","deref","deref","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from","from","handle_address_msg","handle_balance_msg","handle_deposit_msg","handle_get_info","handle_pay_invoice_msg","handle_receive_invoice_msg","handle_register_federation","handle_withdraw_msg","init","init","into","into","into_response","ln","ln_rpc","new","provide","receiver","register_federation","rpc","run","select_actor","sender","source","task_group","to_string","try_from","try_from","try_into","try_into","type_id","type_id","utils","vzip","vzip","GatewayActor","await_outgoing_contract_claimed","await_preimage_decryption","borrow","borrow_mut","buy_preimage_external","buy_preimage_internal","buy_preimage_offer","client","deposit","deref","deref_mut","drop","fetch_all_coins","from","get_balance","get_deposit_address","id","init","into","new","pay_invoice","try_from","try_into","type_id","vzip","withdraw","GatewayClientBuilder","IGatewayClientBuilder","MemoryDbGatewayClientBuilder","RocksDbGatewayClientBuilder","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build","build","build","clone","clone","clone","clone_into","clone_into","clone_into","create_database","create_database","create_database","default","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","fmt","from","from","from","from","init","init","init","into","into","into","new","save_config","save_config","save_config","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","work_dir","ClnRpcRef","Htlc","HtlcAccepted","Onion","amount","as_fedimint_amount","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","build_cln_rpc","clone","clone","clone","clone_into","clone_into","clone_into","cltv_expiry","cltv_expiry_relative","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","fmt","fmt","fmt","forward_amount","from","from","from","from","htlc","htlc_accepted_hook","init","init","init","init","into","into","into","into","ln_rpc","next_onion","onion","outgoing_cltv_value","payload","payment_hash","serialize","serialize","serialize","shared_secret","short_channel_id","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","work_dir","GatewayConfig","address","borrow","borrow_mut","clone","clone_into","default_federation","deref","deref_mut","deserialize","drop","fmt","from","init","into","password","serialize","to_owned","try_from","try_into","type_id","vzip","LightningError","LnRpc","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","pay","pubkey","try_from","try_into","type_id","vzip","Balance","BalancePayload","Deposit","DepositAddress","DepositAddressPayload","DepositPayload","GatewayInfo","GatewayRequest","GatewayRequestInner","GatewayRequestTrait","GatewayRpcSender","Info","InfoPayload","PayInvoice","ReceivePayment","ReceivePaymentPayload","RegisterFedPayload","RegisterFederation","Response","Withdraw","WithdrawPayload","address","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","connect","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","federation_id","federation_id","federation_id","federation_id","federations","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","handle","htlc_accepted","impl_gateway_request_trait","init","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","into","new","request","rpc_client","rpc_server","send","sender","sender","serde_hex_deserialize","serde_hex_serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_enum","to_owned","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","txout_proof","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","version_hash","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","RpcClient","base_url","borrow","borrow_mut","call","client","deposit","deref","deref_mut","drop","from","get_balance","get_deposit_address","get_info","init","into","new","register_federation","try_from","try_into","type_id","vzip","withdraw","__axum_macros_check_address_0_from_request","__axum_macros_check_address_1_from_request","__axum_macros_check_address_future","__axum_macros_check_address_into_response","__axum_macros_check_balance_0_from_request","__axum_macros_check_balance_1_from_request","__axum_macros_check_balance_future","__axum_macros_check_balance_into_response","__axum_macros_check_deposit_0_from_request","__axum_macros_check_deposit_1_from_request","__axum_macros_check_deposit_future","__axum_macros_check_deposit_into_response","__axum_macros_check_info_0_from_request","__axum_macros_check_info_1_from_request","__axum_macros_check_info_future","__axum_macros_check_info_into_response","__axum_macros_check_withdraw_0_from_request","__axum_macros_check_withdraw_1_from_request","__axum_macros_check_withdraw_future","__axum_macros_check_withdraw_into_response","address","balance","deposit","info","pay_invoice","register","run_webserver","withdraw","retry"],"q":["ln_gateway","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::actor","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::cln","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::config","","","","","","","","","","","","","","","","","","","","","","ln_gateway::ln","","","","","","","","","","","","","","","","","ln_gateway::rpcln_gateway::rpc::rpc_client","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::rpc::rpc_server","","","","","","","","","","","","","","","","","","","","","","","","","","","","ln_gateway::utils"],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","Register a federation to the gateway.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","Arc reference to a Gateway federation client builder","Trait for gateway federation client builders","","","","","","","","","Build a new gateway federation client","","","","","","","","","Create a new database for the gateway federation client","Create a client database","Create a client database","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Save and persist the configuration of the gateway …","Persist federation client cfg to [<code>&lt;federation_id&gt;.json</code>] …","Persist gateway federation client cfg","","","","","","","","","","","","","","","","","","","","","","The core-lightning <code>htlc_accepted</code> event’s <code>amount</code> field …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Handle core-lightning “htlc_accepted” events by …","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","webserver address","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","webserver authentication password","","","","","","","","","","","","","","","Returns the argument unchanged.","","Calls <code>U::from(self)</code>.","Attempt to pay an invoice and block till it succeeds, …","Get the public key of the lightning node","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Generate deposit address","Display gateway ecash token balance","Deposit into a gateway federation.","Display gateway ecash token balance","","Register a new federation","","Withdraw from a gateway federation.","Retry an operation util the operation succeeds, OR The …"],"i":[3,3,0,0,3,3,0,3,0,2,2,3,2,3,0,2,0,0,2,2,3,2,3,2,2,3,3,3,2,3,3,3,3,2,2,2,2,2,2,2,2,2,3,2,3,3,0,2,2,3,2,2,0,2,2,2,3,2,3,2,3,2,3,2,3,0,2,3,0,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,0,0,0,0,27,53,54,27,53,54,90,53,54,27,53,54,27,53,54,90,53,54,54,27,27,53,54,27,53,54,27,53,54,27,53,54,27,27,53,54,27,53,54,27,53,54,53,90,53,54,27,53,54,27,53,54,27,53,54,27,53,54,27,53,54,53,0,0,0,0,60,0,58,60,61,62,58,60,61,62,0,60,61,62,60,61,62,60,60,58,60,61,62,58,60,61,62,60,61,62,58,60,61,62,60,61,62,61,58,60,61,62,62,0,58,60,61,62,58,60,61,62,58,61,62,61,61,60,60,61,62,61,61,60,61,62,58,60,61,62,58,60,61,62,61,58,60,61,62,58,60,61,62,58,0,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,0,0,65,65,65,65,65,65,65,65,65,25,25,65,65,65,65,28,0,28,28,0,0,0,0,0,0,0,28,0,28,28,0,0,28,72,28,0,22,22,57,21,19,16,12,9,14,22,17,28,73,57,21,19,16,12,9,14,22,17,28,73,57,57,21,57,21,19,16,12,9,14,22,17,28,73,57,21,19,16,12,9,14,22,17,28,73,21,19,16,12,9,14,22,17,57,21,19,16,12,9,14,22,17,28,73,12,9,14,22,17,57,21,19,16,12,9,14,22,17,28,73,57,21,19,16,12,9,14,22,17,28,73,73,19,0,57,21,19,16,12,9,14,22,17,28,73,57,21,19,16,12,9,14,22,17,28,73,57,73,0,0,57,57,73,0,0,21,19,16,12,9,14,22,17,72,21,19,16,12,9,14,22,57,14,57,21,19,16,12,9,14,22,17,28,73,57,21,19,16,12,9,14,22,17,28,73,14,57,21,19,16,12,9,14,22,17,28,73,17,57,21,19,16,12,9,14,22,17,28,73,0,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,79,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],0,0,0,0,0,[1],[1],[1],[1],[1],[2],[1],[[3,4],5],[[3,4],5],[[]],[[]],[6,3],[7,3],[8,3],[[2,9],[[11,[10]]]],[[2,12],[[11,[13]]]],[[2,14],[[11,[15]]]],[[2,16],[[11,[17]]]],[[2,18],11],[[2,19],[[11,[20]]]],[[2,21],11],[[2,22],[[11,[15]]]],[[],1],[[],1],[[]],[[]],[3,23],0,0,[[24,[26,[25]],27,[29,[28]],[30,[28]],31],2],[32],0,[[2,[26,[33]]],[[11,[[26,[34]]]]]],0,[2,11],[[2,35],[[11,[[26,[34]]]]]],0,[3,[[37,[36]]]],0,[[],38],[[],39],[[],39],[[],39],[[],39],[[],40],[[],40],0,[[]],[[]],0,[[34,41,42],11],[[34,42],[[11,[20]]]],[[]],[[]],[[34,[26,[25]],43,44],[[11,[20]]]],[[34,45,13],[[11,[20]]]],[[34,45,13,[0,[46,47]]],11],0,[[34,48,49],[[11,[15]]]],[1],[1],[1],[34],[[]],[34,[[11,[13]]]],[34,[[11,[10]]]],0,[[],1],[[]],[[[26,[33]],35],[[11,[34]]]],[[34,[26,[25]],41],[[11,[42]]]],[[],39],[[],39],[[],40],[[]],[[34,50,10],[[11,[15]]]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[51,[[11,[[52,[51]]]]]],[[53,51],[[11,[[52,[51]]]]]],[[54,51],[[11,[[52,[51]]]]]],[27,27],[53,53],[54,54],[[]],[[]],[[]],[35,[[11,[55]]]],[[53,35],[[11,[55]]]],[[54,35],[[11,[55]]]],[[],54],[27],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[27,4],5],[[53,4],5],[[54,4],5],[[],27],[[]],[[]],[[]],[[],1],[[],1],[[],1],[[]],[[]],[[]],[56,53],[51,11],[[53,51],11],[[54,51],11],[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],40],[[],40],[[],40],[[]],[[]],[[]],0,0,0,0,0,0,[[],[[39,[13]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,[[39,[58,59]]]],[60,60],[61,61],[62,62],[[]],[[]],[[]],0,0,[1],[1],[1],[1],[1],[1],[1],[1],[[],[[39,[60]]]],[[],[[39,[61]]]],[[],[[39,[62]]]],[1],[1],[1],[1],[[60,4],5],[[61,4],5],[[62,4],5],0,[[]],[[]],[[]],[[]],0,[[[63,[57]],64],[[39,[64,59]]]],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],0,0,0,0,0,0,[60,39],[61,39],[62,39],0,0,[[]],[[]],[[]],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,[[],40],[[],40],[[],40],[[],40],[[]],[[]],[[]],[[]],0,0,0,[[]],[[]],[24,24],[[]],0,[1],[1],[[],[[39,[24]]]],[1],[[24,4],5],[[]],[[],1],[[]],0,[24,39],[[]],[[],39],[[],39],[[],40],[[]],0,0,[[]],[[]],[1],[1],[1],[[65,4],5],[[]],[[],1],[[]],[[43,66,67],[[70,[[69,[68]]]]]],[[],[[70,[[69,[68]]]]]],[[],39],[[],39],[[],40],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[57,57],[[]],0,[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[[],[[39,[21]]]],[[],[[39,[19]]]],[[],[[39,[16]]]],[[],[[39,[12]]]],[[],[[39,[9]]]],[[],[[39,[14]]]],[[],[[39,[22]]]],[[],[[39,[17]]]],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],[1],0,0,0,0,0,[[57,4],5],[[21,4],5],[[19,4],5],[[16,4],5],[[12,4],5],[[9,4],5],[[14,4],5],[[22,4],5],[[17,4],5],[[28,4],5],[[[73,[[0,[71,72]]]],4],5],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[73,74]],0,0,[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[],1],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[29,[28]]],57],0,0,0,[57,[[39,[8]]]],0,0,[75,[[39,[76]]]],[77,39],[21,39],[19,39],[16,39],[12,39],[9,39],[14,39],[22,39],[17,39],[[[78,[11]]],28],[[21,[78,[11]]],28],[[19,[78,[11]]],28],[[16,[78,[11]]],28],[[12,[78,[11]]],28],[[9,[78,[11]]],28],[[14,[78,[11]]],28],[[22,[78,[11]]],28],[[]],0,[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],[[],39],0,[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],[[],40],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[[79,80,38],[[39,[81,82]]]],0,[[79,38,14],[[39,[81,82]]]],[1],[1],[1],[[]],[[79,38,12],[[39,[81,82]]]],[[79,38,9],[[39,[81,82]]]],[[79,38],[[39,[81,82]]]],[[],1],[[]],[80,79],[[79,38,21],[[39,[81,82]]]],[[],39],[[],39],[[],40],[[]],[[79,38,22],[[39,[81,82]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[83,[57]],[84,[9]]],[[39,[85,3]]]],[[[83,[57]],[84,[12]]],[[39,[85,3]]]],[[[83,[57]],[84,[14]]],[[39,[85,3]]]],[[[83,[57]],[84,[16]]],[[39,[85,3]]]],[[[83,[57]],[84,[18]]],[[39,[85,3]]]],[[[83,[57]],[84,[21]]],[[39,[85,3]]]],[[38,86,57],87],[[[83,[57]],[84,[22]]],[[39,[85,3]]]],[[38,88,89],[[39,[8]]]]],"p":[[15,"usize"],[3,"LnGateway"],[4,"LnGatewayError"],[3,"Formatter"],[6,"Result"],[4,"ClientError"],[4,"MintClientError"],[3,"Error"],[3,"DepositAddressPayload"],[3,"Address"],[6,"Result"],[3,"BalancePayload"],[3,"Amount"],[3,"DepositPayload"],[3,"TransactionId"],[3,"InfoPayload"],[3,"GatewayInfo"],[3,"PayInvoicePayload"],[3,"ReceivePaymentPayload"],[3,"Preimage"],[3,"RegisterFedPayload"],[3,"WithdrawPayload"],[6,"Response"],[3,"GatewayConfig"],[8,"LnRpc"],[3,"Arc"],[3,"GatewayClientBuilder"],[4,"GatewayRequest"],[3,"Sender"],[3,"Receiver"],[3,"TaskGroup"],[3,"Demand"],[6,"GatewayClient"],[3,"GatewayActor"],[3,"FederationId"],[8,"Error"],[4,"Option"],[3,"String"],[4,"Result"],[3,"TypeId"],[3,"ContractId"],[3,"OutPoint"],[3,"Invoice"],[3,"PaymentParameters"],[3,"Hash"],[8,"RngCore"],[8,"CryptoRng"],[3,"TxOutProof"],[3,"Transaction"],[3,"Amount"],[3,"GatewayClientConfig"],[3,"Client"],[3,"RocksDbGatewayClientBuilder"],[3,"MemoryDbGatewayClientBuilder"],[3,"Database"],[3,"PathBuf"],[3,"GatewayRpcSender"],[3,"ClnRpcRef"],[6,"Error"],[3,"Htlc"],[3,"Onion"],[3,"HtlcAccepted"],[3,"Plugin"],[4,"Value"],[3,"LightningError"],[15,"u64"],[15,"f64"],[8,"Future"],[3,"Box"],[3,"Pin"],[8,"Debug"],[8,"GatewayRequestTrait"],[3,"GatewayRequestInner"],[8,"Fn"],[8,"Deserializer"],[8,"Decodable"],[8,"Serializer"],[3,"Sender"],[3,"RpcClient"],[3,"Url"],[3,"Response"],[3,"Error"],[3,"Extension"],[3,"Json"],[8,"IntoResponse"],[4,"SocketAddr"],[6,"Result"],[3,"Duration"],[15,"u32"],[8,"IGatewayClientBuilder"]]},\
"mint_client":{"doc":"","t":[13,3,4,3,13,13,3,13,6,3,13,13,13,13,13,13,13,13,13,13,13,17,13,13,13,13,13,13,3,13,13,13,13,6,13,17,13,13,13,6,3,13,13,13,13,13,11,0,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,12,11,11,11,12,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,12,11,12,12,0,11,5,11,11,11,12,11,12,11,11,11,0,11,12,11,11,11,11,12,11,0,0,11,11,11,11,11,11,11,12,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,0,11,4,13,13,3,3,3,8,8,13,13,6,13,13,13,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,12,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,10,11,10,11,10,11,10,11,11,10,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,12,12,12,11,11,10,11,12,12,11,11,10,11,11,11,12,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,5,11,11,11,11,11,11,17,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,4,13,13,3,6,13,11,11,11,11,11,11,11,11,12,12,12,11,11,11,11,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,4,13,3,13,3,3,13,13,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,13,4,13,13,13,13,13,13,17,3,4,13,3,3,13,13,6,3,13,13,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,12,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,4,13,3,13,3,3,13,3,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,13,3,3,13,4,8,13,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,17,17,3,3,17,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,5,11,11,11,11,11,11,11,11,11,11,11,11,5,5,8,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,10,12,11,11,11,11,12,11,11,12,11,11,3,12,11,11,12,11,11,11,11,11,5,11,11,5,5,5,5,5,12,5,11,11,11,11,13,13,13,13,6,3,4,11,11,11,11,11,11,12,12,11,0,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,4,13,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["CancelUnknownOutgoingContract","Client","ClientError","ClientSecret","DeleteUnknownOutgoingContract","FailedPaymentNoRefund","FederationId","FetchOfferError","GatewayClient","GatewayClientConfig","GatewayNotFound","HttpError","InvalidAmountTier","InvalidInvoice","InvalidOffer","InvalidPreimage","InvalidSignature","InvalidTransaction","InvoiceError","InvoiceMissingAmount","LnClientError","MINT_SECRET_CHILD_ID","MintApiError","MintClientError","NoGateways","NoOffer","NotOurKey","OutgoingPaymentTimeout","PaymentParameters","PegInAmountTooSmall","PegOutWaitingForUTXOs","RefundUnknownOutgoingContract","RefundedFailedPayment","Result","SpendReusedNote","TIMELOCK","Timeout","TimeoutTooClose","Underfunded","UserClient","UserClientConfig","ViolatedFeePolicy","WaitContractTimeout","WalletClientError","WrongContractType","WrongTransactionType","abort_outgoing_payment","api","api","as_ref","as_ref","await_consensus_block_height","await_consensus_block_height_inner","await_outgoing_contract_acceptance","await_outgoing_contract_claimed","await_outgoing_contract_execution","await_outpoint_outcome","await_preimage_decryption","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buy_preimage_offer","claim_incoming_contract","claim_outgoing_contract","client_config","clone","clone","clone","clone_into","clone_into","clone_into","coins","config","config","consensus_decode","consensus_encode","consensus_encode_dyn","context","db","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","drop","drop","drop","drop","eq","equivalent","fetch_active_gateway","fetch_all_coins","fetch_coins","fetch_epoch_history","fetch_outgoing_contract","fetch_registered_gateways","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_str","fund_outgoing_ln_contract","generate_invoice","get_new_pegin_address","get_secret","hash","hash","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into_root_secret","invoice_amount","is_maybe_internal_payment","list_active_issuances","list_fetchable_coins","list_pending_claimed_outgoing","list_pending_outgoing","ln","ln_client","max_delay","max_fee_percent","max_send_amount","maybe_internal","mint","mint_client","module_decode_stubs","new","new_peg_out_with_fees","new_with_api","node_pub_key","pay_to_blind_nonces","payment_hash","peg_in","peg_out","provide","query","receive_coins","redeem_key","refund_incoming_contract","register_with_federation","reissue","reissue_pending_coins","root_secret","save_outgoing_payment","secrets","serde_keypair","serialize","serialize","serialize","source","spend_ecash","submit_tx_with_change","switch_active_gateway","timelock_delta","to_bytes","to_owned","to_owned","to_owned","to_string","transaction","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_refund_outgoing_contract","type_id","type_id","type_id","type_id","type_id","type_id","type_id","utils","validate_note_signatures","validate_outgoing_account","vzip","vzip","vzip","vzip","vzip","vzip","vzip","wallet","wallet_client","ApiError","CoreError","DecodeError","FedResponse","FederationApi","FederationMember","IFederationApi","JsonRpcClient","NoResult","OutPointOutOfRange","Result","RpcError","Timeout","TransactionError","TransactionRejected","WsFederationApi","WsFederationConnect","await_output_outcome","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","client","connect","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","drop","drop","drop","fetch_consensus_block_height","fetch_consensus_block_height","fetch_contract","fetch_contract","fetch_epoch_history","fetch_epoch_history","fetch_gateways","fetch_gateways","fetch_offer","fetch_offer","fetch_output_outcome","fetch_peg_out_fees","fetch_peg_out_fees","fetch_tx_outcome","fetch_tx_outcome","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","init","init","init","init","init","init","into","into","into","into","into","into","is_connected","is_retryable","members","members","module_registry","new","new_with_client","offer_exists","offer_exists","peer","peer_id","peers","provide","register_gateway","register_gateway","request","request","result","serialize","source","submit_transaction","submit_transaction","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","url","url_to_string_with_default_port","vzip","vzip","vzip","vzip","vzip","vzip","CLIENT_SECRET_DB_PREFIX","ClientSecretKey","borrow","borrow_mut","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref_mut","drop","fmt","from","from_bytes","from_bytes","init","into","to_bytes","to_bytes","try_from","try_into","type_id","vzip","ApiError","LnClient","LnClientError","MissingInvoiceAmount","NoConfirmedInvoice","PayInvoicePayload","Result","WrongAccountType","as_any","await_outgoing_refundable","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","config","context","contract_id","create_cancel_outgoing_output","create_offer_output","create_outgoing_output","create_refund_outgoing_contract_input","db","decode_consensus_item","decode_input","decode_output","decode_output_outcome","decode_stub","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","drop","drop","drop","federation_id","fmt","fmt","fmt","fmt","from","from","from","get_confirmed_invoice","get_contract_account","get_incoming_contract","get_offer","get_outgoing_contract","incoming","init","init","init","input_amount","into","into","into","is_outgoing_contract_refundable","module_key","new","offer_exists","outgoing","output_amount","provide","refundable_outgoing_contracts","save_confirmed_invoice","serialize","to_string","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","ConfirmedInvoice","ConfirmedInvoiceKey","ConfirmedInvoiceKeyPrefix","DbKeyPrefix","LightningGateway","LightningGatewayKey","OutgoingContractAccount","OutgoingContractAccountKey","OutgoingContractAccountKeyPrefix","OutgoingPayment","OutgoingPaymentClaim","OutgoingPaymentClaimKey","OutgoingPaymentClaimKeyPrefix","OutgoingPaymentKey","OutgoingPaymentKeyPrefix","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","init","init","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","into","into","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","LnDecoder","as_any","borrow","borrow_mut","decode_consensus_item","decode_input","decode_output","decode_output_outcome","deref","deref_mut","drop","fmt","from","init","input_amount","into","module_key","output_amount","try_from","try_into","type_id","vzip","ConfirmedInvoice","IncomingContractAccount","amount","borrow","borrow","borrow_mut","borrow_mut","claim","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contract","contract_id","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","from_bytes","init","init","into","into","invoice","keypair","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","OutgoingContractAccount","OutgoingContractData","amount","borrow","borrow","borrow_mut","borrow_mut","claim","clone","clone_into","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","contract","contract_account","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","from_bytes","init","init","into","into","recovery_key","refund","to_bytes","to_bytes","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","ApiError","CoinFinalizationError","FinalizationError","InvalidAmountTier","InvalidIssuanceId","InvalidOutcomeType","InvalidOutcomeWrongStructure","InvalidSignature","MINT_E_CASH_TYPE_CHILD_ID","MintClient","MintClientError","NotEnoughCoins","NoteIssuanceRequest","NoteIssuanceRequests","OutputNotReadyYet","ReceivedUspendableCoin","Result","SpendableNote","UnknownIssuance","WrongMintAnswer","as_any","blinding_key","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","coin_amount","coin_count","coins","coins","config","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","context","db","decode_consensus_item","decode_input","decode_output","decode_output_outcome","decode_stub","default","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize_key_pair","drop","drop","drop","drop","drop","drop","eq","equivalent","extend","fetch_all_coins","fetch_coins","finalize","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","hash","init","init","init","init","init","init","input_amount","into","into","into","into","into","into","is_retryable","list_active_issuances","module_key","new","new_ecash_note","new_note_secret","nonce","note","output_amount","provide","provide","receive_coins","secret","select_coins","serialize","serialize","serialize","source","spend_key","spend_key","submit_tx_with_change","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","Coin","CoinKey","CoinKeyPrefix","DbKeyPrefix","LastECashNoteIndex","LastECashNoteIndexKey","OutputFinalizationData","OutputFinalizationKey","OutputFinalizationKeyPrefix","PendingCoins","PendingCoinsKey","PendingCoinsKeyPrefix","amount","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_decode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","consensus_encode_dyn","deref","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","drop","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes","init","init","init","init","init","init","init","init","into","into","into","into","into","into","into","into","nonce","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_bytes","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","MintDecoder","as_any","borrow","borrow_mut","decode_consensus_item","decode_input","decode_output","decode_output_outcome","deref","deref_mut","drop","fmt","from","init","input_amount","into","module_key","output_amount","try_from","try_into","type_id","vzip","Continue","CurrentConsensus","EventuallyConsistent","Finished","QueryStep","QueryStrategy","Request","Retry404","TrustAllPeers","UnionResponses","ValidHistory","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","current","current","current","current","deref","deref","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","drop","drop","drop","drop","drop","drop","drop","epoch_pk","errors","existing_results","existing_results","from","from","from","from","from","from","from","init","init","init","init","init","init","init","into","into","into","into","into","into","into","new","new","new","new","new","process","process","process","process","process","process","process","required","required","required","responses","responses","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","BLS12_381_TAG","CHILD_TAG","ChildId","DerivableSecret","SECP256K1_TAG","borrow","borrow","borrow_mut","borrow_mut","child_key","clone","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","from","from","from_bytes","init","init","into","into","kdf","new","tagged_derive","to_bls12_381_key","to_bytes","to_owned","to_secp_key","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","deserialize","serialize","Final","TransactionBuilder","borrow","borrow_mut","build","change_required","create_input_from_coins","create_output_coins","default","deref","deref_mut","drop","fee_amount","from","init","input","input_amount","input_amount_iter","input_coins","input_notes","into","is_final","keys","output","output_amount","output_amount_iter","output_coins","output_notes","try_from","try_into","tx","type_id","vzip","ClientContext","api","borrow","borrow_mut","db","deref","deref_mut","drop","fmt","from","from_hex","init","into","network_to_currency","parse_bitcoin_amount","parse_coins","parse_fedimint_amount","parse_node_pub_key","secp","serialize_coins","try_from","try_into","type_id","vzip","ApiError","NoMatchingPegInFound","PegInAmountTooSmall","PegInProofError","Result","WalletClient","WalletClientError","as_any","await_peg_out_outcome","borrow","borrow","borrow_mut","borrow_mut","config","context","create_pegin_input","db","decode_consensus_item","decode_input","decode_output","decode_output_outcome","decode_stub","deref","deref","deref_mut","deref_mut","drop","drop","fmt","fmt","fmt","from","from","from","get_new_pegin_address","init","init","input_amount","into","into","module_key","output_amount","provide","source","to_string","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","DbKeyPrefix","PegIn","PegInKey","PegInPrefixKey","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","consensus_decode","consensus_encode","consensus_encode_dyn","deref","deref","deref","deref_mut","deref_mut","deref_mut","drop","drop","drop","fmt","fmt","from","from","from","from_bytes","from_bytes","init","init","init","into","into","into","peg_in_script","to_bytes","to_bytes","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","WalletDecoder","as_any","borrow","borrow_mut","decode_consensus_item","decode_input","decode_output","decode_output_outcome","deref","deref_mut","drop","fmt","from","init","input_amount","into","module_key","output_amount","try_from","try_into","type_id","vzip"],"q":["mint_clientmint_client::api","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::db","","","","","","","","","","","","","","","","","","","","","","mint_client::ln","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::ln::dbmint_client::ln::decode_stub","","","","","","","","","","","","","","","","","","","","","","mint_client::ln::incoming","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::ln::outgoing","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::mintmint_client::mint::dbmint_client::mint::decode_stub","","","","","","","","","","","","","","","","","","","","","","mint_client::query","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::secrets","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::serde_keypair","","mint_client::transaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::utils","","","","","","","","","","","","","","","","","","","","","","","","mint_client::wallet","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::wallet::db","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_client::wallet::decode_stub","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Abort payment if our node can’t route it and give money …","","","","","","","","Waits for a outgoing contract claim transaction to be …","Notify gateway that we’ve escrowed tokens they can claim …","Waits for the federation to sign an ecash note.","Wait for a lightning preimage gateway has purchased to be …","","","","","","","","","","","","","","","Buy a lightning preimage listed for sale inside the …","","Claim an outgoing contract after acquiring the preimage by …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Tries to fetch e-cash tokens from a certain out point. An …","","Fetch the specified outgoing payment contract account","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","Returns a bitcoin address suited to perform a fedimint …","Fetches the client secret from the database or generates a …","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","Returns true if the invoice contains us as a routing hint","","","Lists all claim transactions for outgoing contracts that …","Lists all previously saved transactions that have not been …","","","","","","","","","Builds a fake module registry which is only usable for …","","","","","Pay by creating notes provided (and most probably …","","","","","","","","Claw back funds after incoming contract that had invalid …","Register this gateway with the federation","Spent some <code>SpendableNote</code>s to receive a freshly minted ones","Should be called after any transaction that might have …","","Save the details about an outgoing payment the client is …","Scheme for deriving deterministic secret keys","","","","","","Issues a spendable amount of ecash","","Switches the clients active gateway to a registered …","","","","","","","","","","","","","","","","","","","","","","Claims a refund for an expired or cancelled outgoing …","","","","","","","","","Validate signatures on notes.","Check if we can claim the contract account and returns the …","","","","","","","","","","","","","","","","","","","","","","","","","Mint API client that will try to run queries against all …","Information required for client to construct …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Fetch the current consensus block height (trailing actual …","","Fetch ln contract state","","","","Fetch available lightning gateways (assumes gateways …","","Fetch preimage offer for incoming lightning payments","","","Fetch the expected peg-out fees given a peg-out tx","","Fetch the outcome of an entire transaction","Fetch the outcome of an entire transaction","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","","","Creates a new API client","Creates a new API client","Checks if there exists an offer for a payment hash","","","","","","Register a gateway with the federation","","","","","","","Submit a transaction to all federation members","Submit a transaction to all federation members","","","","","","","","","","","","","","","","","","","","","<code>jsonrpsee</code> converts the <code>Url</code> to a <code>&amp;str</code> internally and then …","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Waits for an outgoing contract to become refundable","","","","","","","","","","Used by gateway to prematurely return funds to the user if …","","Create an output that incentivizes a Lighning gateway to …","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Determines if an outgoing contract can be refunded","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Invoice whose “offer” has been accepted by federation","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","The invoice itself","Keypair that will be able to sweep contract once it has …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","Federation module client for the Mint module. It can both …","","","Single <code>Note</code> issuance request to the mint.","Multiple <code>Note</code> issuance requests","","","","A <code>Note</code> with associated secret key that allows to proof …","","","","Key to unblind the blind signature supplied by the mint …","","","","","","","","","","","","","","","","","","","","","","Finalization data for all coin outputs in this request","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Finalize the issuance request using a <code>SigResponse</code> from the …","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Returns <code>true</code> if queried outpoint isn’t ready yet but may …","","","Generate a request session for a single coin and returns …","","","","","","","","","","","","","","","Spend key from which the coin nonce (corresponding public …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","Returns when <code>required</code> responses are equal","Returns when <code>required</code> responses are equal, retrying after …","","Results from the strategy handling a response from a peer","","","Returns when <code>required</code> responses are equal, retrying on 404 …","Returns a result from the first responding peer","Returns the deduplicated union of <code>required</code> responses","Returns first epoch with a valid sig, otherwise wait till …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Previously received responses/results","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Describes a child key of a <code>DerivableSecret</code>","Secret key that allows deriving child secret keys","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","","","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","Federation module client for the Wallet module. It can …","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns a bitcoin-address derived from the federations …","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","",""],"i":[4,0,0,0,4,4,0,4,0,0,4,4,4,4,4,4,4,4,4,4,4,0,4,4,4,4,4,4,0,4,4,4,4,0,4,0,4,4,4,0,0,4,4,4,4,4,2,0,1,6,1,2,2,2,2,2,2,2,2,33,18,6,1,22,4,2,33,18,6,1,22,4,2,2,2,1,18,6,1,18,6,1,2,2,2,22,22,22,2,0,2,33,18,6,1,22,4,2,33,18,6,1,22,4,18,6,1,2,33,18,6,1,22,4,18,18,2,2,2,2,2,2,33,18,6,1,22,4,4,2,33,18,6,1,22,4,4,4,4,4,4,4,4,22,18,2,2,2,2,18,18,2,33,18,6,1,22,4,2,33,18,6,1,22,4,22,33,2,2,2,2,2,0,2,33,33,33,33,0,2,0,2,2,2,1,2,33,2,2,4,0,2,1,2,2,2,2,2,2,0,0,18,6,1,4,2,2,2,1,22,18,6,1,4,0,2,33,18,6,1,22,4,2,33,18,6,1,22,4,2,2,33,18,6,1,22,4,0,2,2,2,33,18,6,1,22,4,0,2,0,37,37,0,0,0,0,0,37,37,0,37,37,37,37,0,0,61,95,61,86,87,82,37,95,61,86,87,82,37,87,83,95,61,61,86,87,82,37,95,61,86,87,82,37,82,95,61,86,87,82,37,175,86,175,86,175,86,175,86,175,86,61,175,86,175,86,61,86,87,82,37,37,95,61,61,86,87,82,82,37,37,37,37,95,61,86,87,82,37,95,61,86,87,82,37,83,37,86,82,86,86,86,175,86,95,87,86,37,175,86,86,87,95,82,37,175,86,37,95,61,86,87,82,37,95,61,86,87,82,37,95,61,86,87,82,37,87,0,95,61,86,87,82,37,0,0,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,97,40,0,0,40,40,0,0,40,53,53,53,110,40,53,110,40,53,53,110,53,53,53,53,0,53,53,53,53,0,53,110,40,53,110,40,110,53,110,40,110,53,110,40,40,53,110,40,53,53,53,53,53,0,53,110,40,53,53,110,40,53,53,110,53,0,53,40,53,53,110,40,53,110,40,53,110,40,53,110,40,53,110,40,116,0,0,0,116,0,116,0,0,116,116,0,0,0,0,116,117,118,119,120,121,122,123,124,125,116,117,118,119,120,121,122,123,124,125,116,116,117,118,119,120,121,122,123,124,125,117,118,119,120,121,122,123,124,125,117,118,119,120,121,122,123,124,125,116,117,118,119,120,121,122,123,124,125,116,117,118,119,120,121,122,123,124,125,116,117,118,119,120,121,122,123,124,125,117,118,119,120,121,122,123,124,125,116,117,118,119,120,121,122,123,124,125,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,116,117,118,119,120,121,122,123,124,125,116,117,118,119,120,121,122,123,124,125,117,117,118,118,119,119,120,120,121,121,122,122,123,123,124,124,125,125,116,116,117,118,119,120,121,122,123,124,125,116,117,118,119,120,121,122,123,124,125,116,117,118,119,120,121,122,123,124,125,116,117,118,119,120,121,122,123,124,125,0,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,126,0,0,112,112,49,112,49,112,112,112,112,49,112,49,112,49,112,49,112,49,112,49,112,49,112,49,112,49,112,49,112,49,112,49,49,49,112,49,112,112,49,112,49,112,49,112,49,0,0,32,104,32,104,32,32,32,32,104,32,104,32,104,32,32,104,104,32,104,32,104,32,104,32,104,32,104,32,104,32,104,32,104,32,104,32,32,104,32,104,32,104,32,104,32,39,0,39,135,135,39,39,135,0,0,0,39,0,0,39,39,0,0,135,135,55,128,55,128,129,19,135,39,55,128,129,19,135,39,128,129,19,128,129,19,129,129,55,129,55,128,129,19,128,129,19,128,129,19,55,0,55,55,55,55,0,129,55,128,129,19,135,39,55,128,129,19,135,39,128,129,19,0,55,128,129,19,135,39,19,19,129,55,55,129,55,128,129,19,135,135,39,39,55,128,129,19,135,135,39,39,39,128,129,19,19,55,128,129,19,135,39,55,55,128,129,19,135,39,39,55,55,128,55,55,128,19,55,135,39,55,55,55,128,129,19,39,128,19,55,128,129,19,128,129,19,135,39,55,128,129,19,135,39,55,128,129,19,135,39,55,128,129,19,135,39,55,128,129,19,135,39,138,0,0,0,138,0,138,0,0,138,0,0,139,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,139,140,141,142,143,144,145,139,140,141,142,143,144,145,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,139,139,140,140,141,141,142,142,143,143,144,144,145,145,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,139,139,139,140,140,141,141,142,142,143,143,144,144,145,145,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,138,139,140,141,142,143,144,145,0,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,146,152,0,0,152,0,0,152,0,0,0,0,153,147,148,149,150,151,152,153,147,148,149,150,151,152,147,148,149,150,153,147,148,149,150,151,152,153,147,148,149,150,151,152,153,147,148,149,150,151,152,147,151,148,151,153,147,148,149,150,151,152,153,147,148,149,150,151,152,153,147,148,149,150,151,152,147,148,149,150,151,94,153,147,148,149,150,151,148,150,151,148,150,153,147,148,149,150,151,152,153,147,148,149,150,151,152,153,147,148,149,150,151,152,153,147,148,149,150,151,152,0,0,0,0,0,52,155,52,155,52,155,155,155,155,155,52,155,52,155,52,155,52,155,52,155,155,52,155,52,155,52,52,0,52,155,155,52,52,155,52,155,52,155,52,155,0,0,0,0,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,68,176,68,68,68,68,68,68,68,68,68,68,68,0,161,161,161,161,161,161,161,161,161,0,161,161,0,0,0,0,0,161,0,161,161,161,161,38,38,38,38,0,0,0,73,73,73,38,73,38,73,73,73,0,73,73,73,73,0,73,38,73,38,73,38,73,38,38,73,38,38,73,73,38,73,73,38,73,73,38,38,38,73,38,73,38,73,38,73,38,0,171,0,0,171,172,173,171,172,173,171,172,173,171,172,173,172,172,172,171,172,173,171,172,173,171,172,173,172,173,171,172,173,172,172,171,172,173,171,172,173,172,172,172,171,172,173,171,172,173,171,172,173,171,172,173,171,172,173,0,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174,174],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[[2,[1]],3],[[5,[4]]]],0,0,[6,7],[1,7],[[[2,[[0,[[8,[7]],9]]]],10],[[5,[10,11]]]],[[[2,[[0,[[8,[7]],9]]]],10],10],[[[2,[6]],12],[[5,[4]]]],[[[2,[1]],3,12],[[5,[4]]]],[[[2,[6]],3,[0,[13,14]]],[[5,[4]]]],[[[2,[6]],12],[[5,[4]]]],[[[2,[1]],12],[[5,[15,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[[2,[1]],16,17,[0,[13,14]]],[[5,[4]]]],[[[2,[6]],3,[0,[13,14]]],[[5,[12,4]]]],[[[2,[1]],3,15,[0,[13,14]]],[[5,[12,4]]]],0,[18,18],[6,6],[1,1],[[]],[[]],[[]],[[[2,[[0,[[8,[7]],9]]]]],[[20,[19]]]],[[[2,[[0,[[8,[7]],9]]]]],[[0,[[8,[7]],9]]]],0,[21,[[5,[22,23]]]],[22,[[5,[24,25]]]],[26,[[5,[24,25]]]],0,0,[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[],[[5,[18]]]],[[],[[5,[6]]]],[[],[[5,[1]]]],[24],[24],[24],[24],[24],[24],[24],[[18,18],27],[[],27],[[[2,[6]]],[[5,[28,4]]]],[[[2,[[0,[[8,[7]],9]]]]],[[29,[[5,[12,4]]]]]],[[[2,[[0,[[8,[7]],9]]]],12],[[5,[4]]]],[[[2,[[0,[[8,[7]],9]]]],10,30],[[5,[31,4]]]],[[[2,[1]],3],[[5,[32,4]]]],[[[2,[6]]],[[5,[[29,[28]],4]]]],[[33,34],35],[[18,34],35],[[6,34],35],[[1,34],35],[[22,34],35],[[4,34],35],[[4,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[36,4],[[]],[37,4],[38,4],[39,4],[40,4],[41,4],[42,4],[43,[[5,[44]]]],[45,[[5,[18]]]],[[[2,[6]],46,[0,[13,14]]],[[5,[4]]]],[[[2,[6]],17,47,[0,[13,14]],[48,[10]]],[[5,[49,4]]]],[[[2,[[0,[[8,[7]],9]]]],[0,[13,14]]],50],[51,52],[18],[18,16],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[22,52],0,[[[2,[1]],46],27],[[[2,[[0,[[8,[7]],9]]]]],29],[[[2,[1]]],[[29,[12]]]],[[[2,[1]]],[[29,[3]]]],[[[2,[1]]],[[29,[32]]]],0,[[[2,[[0,[[8,[7]],9]]]]],53],0,[33,54],0,0,0,[[[2,[[0,[[8,[7]],9]]]]],55],[[],[[21,[56]]]],[[[0,[[8,[7]],9]],51,[58,[57]]],[[2,[[0,[[8,[7]],9]]]]]],[[[2,[[0,[[8,[7]],9]]]],59,50],[[5,[60,4]]]],[[[0,[[8,[7]],9]],51,61,[58,[57]]],[[2,[[0,[[8,[7]],9]]]]]],0,[[[2,[[0,[[8,[7]],9]]]],[20,[62]],[0,[13,14]]],[[5,[12,4]]]],0,[[[2,[[0,[[8,[7]],9]]]],63,64,[0,[13,14]]],[[5,[65,4]]]],[[[2,[[0,[[8,[7]],9]]]],60,[0,[13,14]]],[[5,[12,4]]]],[66],0,[[[2,[[0,[[8,[7]],9]]]],17]],0,[[[2,[1]],3,[0,[13,14]]],[[5,[65,4]]]],[[[2,[1]],28],[[5,[4]]]],[[[2,[[0,[[8,[7]],9]]]],[20,[19]],[0,[13,14]]],[[5,[12,4]]]],[[[2,[[0,[[8,[7]],9]]]],[0,[13,14]]],[[5,[12,4]]]],0,[[[2,[1]],32]],0,0,[18,5],[6,5],[1,5],[4,[[48,[67]]]],[[[2,[[0,[[8,[7]],9]]]],17,[0,[13,14]]],[[5,[[20,[19]],4]]]],[[[2,[[0,[[8,[7]],9]]]],68,[0,[13,14]]],[[5,[65,4]]]],[[[2,[6]],[48,[69]]],[[5,[28,4]]]],0,[[],[[29,[70,71]]]],[[]],[[]],[[]],[[],47],0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[[2,[6]],3,[0,[13,14]]],[[5,[12,4]]]],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],0,[[[2,[[0,[[8,[7]],9]]]],20],[[5,[4]]]],[[[2,[1]],32],[[5,[33,4]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[[2,[[0,[[8,[7]],9]]]]],73],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[61,12,74],[[77,[[0,[75,76]]]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[78,[[81,[[80,[79]]]]]],[24],[24],[61],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[],[[5,[82]]]],[24],[24],[24],[24],[24],[24],[[],[[81,[[80,[79]]]]]],[[[86,[[0,[83,84,76,85]]]]],[[81,[[80,[79]]]]]],[3,[[81,[[80,[79]]]]]],[[[86,[[0,[83,84,76,85]]]],3],[[81,[[80,[79]]]]]],[[10,30],[[81,[[80,[79]]]]]],[[[86,[[0,[83,84,76,85]]]],10,30],[[81,[[80,[79]]]]]],[[],[[81,[[80,[79]]]]]],[[[86,[[0,[83,84,76,85]]]]],[[81,[[80,[79]]]]]],[16,[[81,[[80,[79]]]]]],[[[86,[[0,[83,84,76,85]]]],16],[[81,[[80,[79]]]]]],[[61,12],77],[[50,59],[[81,[[80,[79]]]]]],[[[86,[[0,[83,84,76,85]]]],50,59],[[81,[[80,[79]]]]]],[65,[[81,[[80,[79]]]]]],[[[86,[[0,[83,84,76,85]]]],65],[[81,[[80,[79]]]]]],[[61,34],35],[[[86,[84]],34],35],[[[87,[84]],34],35],[[82,34],35],[[37,34],35],[[37,34],35],[[]],[[]],[[],61],[[]],[[]],[7,82],[[]],[88,37],[23,37],[[]],[89,37],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[],27],[37,27],0,0,0,[29,[[86,[90]]]],[29,86],[16,[[81,[[80,[79]]]]]],[[[86,[[0,[83,84,76,85]]]],16],[[81,[[80,[79]]]]]],0,0,[86,[[29,[91]]]],[66],[28,[[81,[[80,[79]]]]]],[[[86,[[0,[83,84,76,85]]]],28],[[81,[[80,[79]]]]]],[[[86,[83]],45,92,[94,[93]]],[[77,[93]]]],[[[87,[83]],45],95],0,[82,5],[37,[[48,[67]]]],[96,[[81,[[80,[79]]]]]],[[[86,[[0,[83,84,76,85]]]],96],[[81,[[80,[79]]]]]],[[],47],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],0,[78,47],[[]],[[]],[[]],[[]],[[]],[[]],0,0,[[]],[[]],[21,[[5,[97,23]]]],[97,[[5,[24,25]]]],[26,[[5,[24,25]]]],[24],[24],[24],[[97,34],35],[[]],[43,[[5,[44]]]],[[],[[5,[44]]]],[[],24],[[]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],5],[[],5],[[],72],[[]],0,0,0,0,0,0,0,0,[[],98],[[53,3],99],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,[[53,3,100],101],[[53,17,16,15,[48,[10]]],101],[[53,102,46,28,103,[0,[13,14]]],[[99,[101]]]],[[53,104]],0,[105,[[5,[106,23]]]],[105,[[5,[107,23]]]],[105,[[5,[108,23]]]],[105,[[5,[109,23]]]],0,[24],[24],[24],[24],[24],[24],[[],[[5,[110]]]],[24],[24],[24],0,[[53,34],35],[[110,34],35],[[40,34],35],[[40,34],35],[[]],[[]],[[]],[[53,3],[[99,[49]]]],[[53,3],[[99,[111]]]],[[53,3],[[99,[112]]]],[[53,16],[[99,[113]]]],[[53,3],[[99,[32]]]],0,[[],24],[[],24],[[],24],[53,114],[[]],[[]],[[]],[[53,3],[[99,[27]]]],[[],115],[[18,3],110],[[53,16],[[99,[27]]]],0,[53,114],[66],[[53,10],[[29,[104]]]],[[53,49]],[110,5],[[],47],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[],72],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[116,116],[[]],[21,[[5,[117,23]]]],[21,[[5,[118,23]]]],[21,[[5,[119,23]]]],[21,[[5,[120,23]]]],[21,[[5,[121,23]]]],[21,[[5,[122,23]]]],[21,[[5,[123,23]]]],[21,[[5,[124,23]]]],[21,[[5,[125,23]]]],[117,[[5,[24,25]]]],[118,[[5,[24,25]]]],[119,[[5,[24,25]]]],[120,[[5,[24,25]]]],[121,[[5,[24,25]]]],[122,[[5,[24,25]]]],[123,[[5,[24,25]]]],[124,[[5,[24,25]]]],[125,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[117,34],35],[[118,34],35],[[119,34],35],[[120,34],35],[[121,34],35],[[122,34],35],[[123,34],35],[[124,34],35],[[125,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,[[5,[44]]]],[[],[[5,[44]]]],[[],[[5,[44]]]],[43,[[5,[44]]]],[43,[[5,[44]]]],[[],[[5,[44]]]],[[],[[5,[44]]]],[43,[[5,[44]]]],[43,[[5,[44]]]],[[],[[5,[44]]]],[[],[[5,[44]]]],[43,[[5,[44]]]],[43,[[5,[44]]]],[[],[[5,[44]]]],[[],[[5,[44]]]],[43,[[5,[44]]]],[[],[[5,[44]]]],[43,[[5,[44]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],98],[[]],[[]],[105,[[5,[106,23]]]],[105,[[5,[107,23]]]],[105,[[5,[108,23]]]],[105,[[5,[109,23]]]],[24],[24],[24],[[126,34],35],[[]],[[],24],[126,114],[[]],[[],115],[126,114],[[],5],[[],5],[[],72],[[]],0,0,0,[[]],[[]],[[]],[[]],[112,127],[112,112],[[]],[21,[[5,[112,23]]]],[21,[[5,[49,23]]]],[112,[[5,[24,25]]]],[49,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],0,[49,3],[24],[24],[24],[24],[24],[24],[[112,34],35],[[49,34],35],[[]],[[]],[43,[[5,[44]]]],[43,[[5,[44]]]],[[],24],[[],24],[[]],[[]],0,0,[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[]],[[]],0,0,0,[[]],[[]],[[]],[[]],[[32,15],127],[32,32],[[]],[21,[[5,[104,23]]]],[21,[[5,[32,23]]]],[104,[[5,[24,25]]]],[32,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],0,0,[24],[24],[24],[24],[24],[24],[[104,34],35],[[32,34],35],[[]],[[]],[43,[[5,[44]]]],[43,[[5,[44]]]],[[],24],[[],24],[[]],[[]],0,[32,127],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[]],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[],98],0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[128,128],[129,129],[19,19],[[]],[[]],[[]],[129,17],[129,24],[55,[[20,[19]]]],0,0,[21,[[5,[128,23]]]],[21,[[5,[129,23]]]],[21,[[5,[19,23]]]],[128,[[5,[24,25]]]],[129,[[5,[24,25]]]],[19,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],0,0,[105,[[5,[106,23]]]],[105,[[5,[107,23]]]],[105,[[5,[108,23]]]],[105,[[5,[109,23]]]],0,[[],129],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[],[[5,[128]]]],[[],[[5,[129]]]],[[],[[5,[19]]]],[130,[[5,[131]]]],[24],[24],[24],[24],[24],[24],[[19,19],27],[[],27],[[129,132]],[55,[[29,[[5,[12,39]]]]]],[[55,102,12],[[5,[39]]]],[[129,133,134],[[5,[[20,[19]],135]]]],[[55,34],35],[[128,34],35],[[129,34],35],[[19,34],35],[[135,34],35],[[135,34],35],[[39,34],35],[[39,34],35],[[]],[[]],[[]],[[]],[[]],[42,135],[[]],[37,39],[135,39],[43,[[5,[44]]]],[43,[[5,[44]]]],[43,[[5,[44]]]],[19],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[55,114],[[]],[[]],[[]],[[]],[[]],[[]],[39,27],[55,29],[[],115],[[58,52]],[[55,58,102]],[[55,102],52],[128,136],0,[55,114],[66],[66],[[55,17,102,137]],0,[[55,17],[[5,[[20,[19]],39]]]],[128,5],[129,5],[19,5],[39,[[48,[67]]]],0,0,[[55,2,68],[[5,[65,39]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[]],[[]],[[]],[[],47],[[],47],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[138,138],[139,139],[140,140],[141,141],[142,142],[143,143],[144,144],[145,145],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[21,[[5,[139,23]]]],[21,[[5,[140,23]]]],[21,[[5,[141,23]]]],[21,[[5,[142,23]]]],[21,[[5,[143,23]]]],[21,[[5,[144,23]]]],[21,[[5,[145,23]]]],[139,[[5,[24,25]]]],[140,[[5,[24,25]]]],[141,[[5,[24,25]]]],[142,[[5,[24,25]]]],[143,[[5,[24,25]]]],[144,[[5,[24,25]]]],[145,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[26,[[5,[24,25]]]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[139,34],35],[[140,34],35],[[141,34],35],[[142,34],35],[[143,34],35],[[144,34],35],[[145,34],35],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[43,[[5,[44]]]],[[],[[5,[44]]]],[[],[[5,[44]]]],[43,[[5,[44]]]],[43,[[5,[44]]]],[[],[[5,[44]]]],[43,[[5,[44]]]],[[],[[5,[44]]]],[43,[[5,[44]]]],[[],[[5,[44]]]],[[],[[5,[44]]]],[43,[[5,[44]]]],[43,[[5,[44]]]],[[],[[5,[44]]]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,[[],98],[[]],[[]],[105,[[5,[106,23]]]],[105,[[5,[107,23]]]],[105,[[5,[108,23]]]],[105,[[5,[109,23]]]],[24],[24],[24],[[146,34],35],[[]],[[],24],[146,114],[[]],[[],115],[146,114],[[],5],[[],5],[[],72],[[]],0,0,0,0,0,0,0,0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],[24],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[],24],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[30,24],147],[24,148],[24,149],[24,150],[24,151],[95,152],[[153,95],152],[[147,[95,[31]]],[[152,[31]]]],[[[148,[[0,[84,154,9]]]],[95,[[29,[[0,[84,154,9]]]]]]],[[152,[[29,[[0,[84,154,9]]]]]]]],[[[149,[[0,[84,154,9]]]],[95,[[0,[84,154,9]]]]],[[152,[[0,[84,154,9]]]]]],[[[150,[[0,[154,9,84]]]],[95,[[0,[154,9,84]]]]],[[152,[[0,[154,9,84]]]]]],[[[151,[[0,[154,9,84]]]],[95,[[0,[154,9,84]]]]],[[152,[[0,[154,9,84]]]]]],0,0,0,0,0,[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[],72],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,0,[[]],[[]],[[]],[[]],[[52,155],52],[155,155],[[]],[21,[[5,[155,23]]]],[155,[[5,[24,25]]]],[26,[[5,[24,25]]]],[24],[24],[24],[24],[24],[24],[[52,34],35],[[155,34],35],[[]],[[]],[43,[[5,[44]]]],[[],24],[[],24],[[]],[[]],0,[[],52],[155],[52,156],[[],[[29,[70,71]]]],[[]],[[52,58],131],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[]],[[]],[[],[[5,[131]]]],[131,5],0,0,[[]],[[]],[[68,17,102,157,58,134,[0,[13,14]]],96],[[68,2],17],[[68,[20,[19]]],[[5,[39]]]],[[68,17,157,134]],[[],68],[24],[24],[24],[[68,2],17],[[]],[[],24],[[68,29,158]],[[68,2],17],[[68,2],159],[[68,[20,[19]]],[[5,[39]]]],0,[[]],[[],27],0,[[68,160],10],[[68,2],17],[[68,2],159],[[68,17,157,134]],0,[[],5],[[],5],0,[[],72],[[]],0,0,[[]],[[]],0,[24],[24],[24],[[161,34],35],[[]],[45,[[5,[162,163]]]],[[],24],[[]],[164,165],[45,[[5,[59,166]]]],[45,[[167,[[20,[19]]]]]],[45,[[5,[17,168]]]],[45,[[5,[69,169]]]],0,[20,47],[[],5],[[],5],[[],72],[[]],0,0,0,0,0,0,0,[[],98],[[73,12],[[5,[170,38]]]],[[]],[[]],[[]],[[]],0,0,[[73,63,64],[[5,[38]]]],0,[105,[[5,[106,23]]]],[105,[[5,[107,23]]]],[105,[[5,[108,23]]]],[105,[[5,[109,23]]]],0,[24],[24],[24],[24],[24],[24],[[73,34],35],[[38,34],35],[[38,34],35],[[]],[[]],[37,38],[[73,102,[0,[13,14]]],50],[[],24],[[],24],[73,114],[[]],[[]],[[],115],[73,114],[66],[38,[[48,[67]]]],[[],47],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[]],[[]],0,0,0,0,[[]],[[]],[[]],[[]],[[]],[[]],[171,171],[172,172],[173,173],[[]],[[]],[[]],[21,[[5,[172,23]]]],[172,[[5,[24,25]]]],[26,[[5,[24,25]]]],[24],[24],[24],[24],[24],[24],[24],[24],[24],[[172,34],35],[[173,34],35],[[]],[[]],[[]],[[],[[5,[44]]]],[43,[[5,[44]]]],[[],24],[[],24],[[],24],[[]],[[]],[[]],0,[[],[[29,[70,71]]]],[[],[[29,[70,71]]]],[[]],[[]],[[]],[[],5],[[],5],[[],5],[[],5],[[],5],[[],5],[[],72],[[],72],[[],72],[[]],[[]],[[]],0,[[],98],[[]],[[]],[105,[[5,[106,23]]]],[105,[[5,[107,23]]]],[105,[[5,[108,23]]]],[105,[[5,[109,23]]]],[24],[24],[24],[[174,34],35],[[]],[[],24],[174,114],[[]],[[],115],[174,114],[[],5],[[],5],[[],72],[[]]],"p":[[3,"GatewayClientConfig"],[3,"Client"],[3,"ContractId"],[4,"ClientError"],[4,"Result"],[3,"UserClientConfig"],[3,"ClientConfig"],[8,"AsRef"],[8,"Clone"],[15,"u64"],[3,"Elapsed"],[3,"OutPoint"],[8,"RngCore"],[8,"CryptoRng"],[3,"Preimage"],[3,"Hash"],[3,"Amount"],[3,"FederationId"],[3,"SpendableNote"],[3,"TieredMulti"],[6,"ModuleRegistry"],[3,"ClientSecret"],[3,"DecodeError"],[15,"usize"],[3,"Error"],[8,"Write"],[15,"bool"],[3,"LightningGateway"],[3,"Vec"],[3,"PublicKey"],[3,"EpochHistory"],[3,"OutgoingContractAccount"],[3,"PaymentParameters"],[3,"Formatter"],[6,"Result"],[4,"CreationError"],[4,"ApiError"],[4,"WalletClientError"],[4,"MintClientError"],[4,"LnClientError"],[3,"Error"],[3,"InvalidAmountTierError"],[3,"BTreeMap"],[4,"DecodingError"],[15,"str"],[3,"Invoice"],[3,"String"],[4,"Option"],[3,"ConfirmedInvoice"],[3,"Address"],[3,"Database"],[3,"DerivableSecret"],[3,"LnClient"],[15,"f64"],[3,"MintClient"],[3,"ClientModule"],[4,"All"],[3,"Secp256k1"],[3,"Amount"],[3,"PegOut"],[3,"FederationApi"],[3,"BlindNonce"],[3,"TxOutProof"],[3,"Transaction"],[3,"TransactionId"],[3,"Demand"],[8,"Error"],[3,"TransactionBuilder"],[3,"PublicKey"],[15,"u8"],[3,"Global"],[3,"TypeId"],[3,"WalletClient"],[3,"Duration"],[8,"TryIntoOutcome"],[8,"Send"],[6,"Result"],[3,"Url"],[8,"Future"],[3,"Box"],[3,"Pin"],[3,"WsFederationConnect"],[8,"JsonRpcClient"],[8,"Debug"],[8,"Sync"],[3,"WsFederationApi"],[3,"FederationMember"],[4,"Error"],[4,"CoreError"],[3,"Client"],[3,"PeerId"],[8,"Serialize"],[8,"DeserializeOwned"],[8,"QueryStrategy"],[3,"FedResponse"],[3,"Transaction"],[3,"ClientSecretKey"],[8,"Any"],[6,"Result"],[3,"Signature"],[4,"LightningOutput"],[3,"DatabaseTransaction"],[15,"u32"],[3,"OutgoingContractData"],[8,"Read"],[3,"ConsensusItem"],[3,"Input"],[3,"Output"],[3,"OutputOutcome"],[3,"PayInvoicePayload"],[3,"ContractAccount"],[3,"IncomingContractAccount"],[3,"IncomingContractOffer"],[3,"TransactionItemAmount"],[15,"u16"],[4,"DbKeyPrefix"],[3,"OutgoingPaymentKey"],[3,"OutgoingPaymentKeyPrefix"],[3,"OutgoingPaymentClaimKey"],[3,"OutgoingPaymentClaimKeyPrefix"],[3,"OutgoingContractAccountKey"],[3,"OutgoingContractAccountKeyPrefix"],[3,"ConfirmedInvoiceKey"],[3,"ConfirmedInvoiceKeyPrefix"],[3,"LightningGatewayKey"],[3,"LnDecoder"],[3,"LightningInput"],[3,"NoteIssuanceRequest"],[3,"NoteIssuanceRequests"],[8,"Deserializer"],[3,"KeyPair"],[8,"IntoIterator"],[3,"SigResponse"],[3,"Tiered"],[4,"CoinFinalizationError"],[3,"Nonce"],[8,"Fn"],[4,"DbKeyPrefix"],[3,"CoinKey"],[3,"CoinKeyPrefix"],[3,"PendingCoinsKey"],[3,"PendingCoinsKeyPrefix"],[3,"OutputFinalizationKey"],[3,"OutputFinalizationKeyPrefix"],[3,"LastECashNoteIndexKey"],[3,"MintDecoder"],[3,"ValidHistory"],[3,"UnionResponses"],[3,"Retry404"],[3,"EventuallyConsistent"],[3,"CurrentConsensus"],[4,"QueryStep"],[3,"TrustAllPeers"],[8,"Eq"],[3,"ChildId"],[3,"Scalar"],[8,"FnMut"],[4,"Input"],[8,"Iterator"],[4,"Output"],[3,"ClientContext"],[8,"Decodable"],[3,"Error"],[4,"Network"],[4,"Currency"],[4,"ParseAmountError"],[6,"Result"],[4,"ParseAmountError"],[4,"Error"],[3,"Txid"],[4,"DbKeyPrefix"],[3,"PegInKey"],[3,"PegInPrefixKey"],[3,"WalletDecoder"],[8,"IFederationApi"],[8,"Final"]]},\
"mint_rpc_client":{"doc":"","t":[13,3,4,13,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12],"n":["ApiCall","Cli","Commands","VersionHash","augment_args","augment_args_for_update","augment_subcommands","augment_subcommands_for_update","borrow","borrow","borrow_mut","borrow_mut","command","command","command_for_update","deref","deref","deref_mut","deref_mut","drop","drop","from","from","from_arg_matches","from_arg_matches","from_arg_matches_mut","from_arg_matches_mut","group_id","has_subcommand","init","init","into","into","main","try_from","try_from","try_into","try_into","type_id","type_id","update_from_arg_matches","update_from_arg_matches","update_from_arg_matches_mut","update_from_arg_matches_mut","vzip","vzip","arg","method","url"],"q":["mint_rpc_client","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","mint_rpc_client::Commands","",""],"d":["","","","Print the latest git commit hash this bin. was build with","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","Args that will be serialized and send with the request","The rpc method","The url to use for the api call"],"i":[7,0,0,7,4,4,7,7,4,7,4,7,4,4,4,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,4,7,0,4,7,4,7,4,7,4,7,4,7,4,7,13,13,13],"f":[0,0,0,0,[1,1],[1,1],[1,1],[1,1],[[]],[[]],[[]],[[]],[[],1],0,[[],1],[2],[2],[2],[2],[2],[2],[[]],[[]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[3,[[6,[4,5]]]],[3,[[6,[7,5]]]],[[],[[9,[8]]]],[10,11],[[],2],[[],2],[[]],[[]],[[]],[[],6],[[],6],[[],6],[[],6],[[],12],[[],12],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[4,3],[[6,[5]]]],[[7,3],[[6,[5]]]],[[]],[[]],0,0,0],"p":[[3,"Command"],[15,"usize"],[3,"ArgMatches"],[3,"Cli"],[6,"Error"],[4,"Result"],[4,"Commands"],[3,"Id"],[4,"Option"],[15,"str"],[15,"bool"],[3,"TypeId"],[13,"ApiCall"]]},\
"tbs":{"doc":"Threshold Blind Signatures","t":[8,16,3,3,3,3,3,8,3,3,3,3,3,3,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,14,0,11,11,11,11,11,0,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,17,5,5,3,12,11,11,11,12,11,11,11,11,5,11,11,11,11,11,11,0,0,14,0,5,5,5,5,5,5],"n":["Aggregatable","Aggregate","AggregatePublicKey","BlindedMessage","BlindedSignature","BlindedSignatureShare","BlindingKey","FromRandom","Message","MessagePoint","PubKeyPoint","PublicKeyShare","Scalar","SecretKeyShare","Signature","add","add","add","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","aggregate","blind_message","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","char_le_bits","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","combine_valid_shares","conditional_negate","conditional_negate","conditional_negate","conditional_select","conditional_select","conditional_select","ct_eq","ct_eq","ct_eq","dealer_keygen","default","default","default","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","double","double","encode_compressed","encode_compressed","encode_compressed","encode_compressed","encode_compressed","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bytes","from_bytes","from_bytes","from_bytes","from_bytes_unchecked","from_bytes_unchecked","from_bytes_wide","from_compressed","from_compressed","from_compressed_unchecked","from_compressed_unchecked","from_hash","from_random","from_random","from_raw","from_repr","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","from_uncompressed_unchecked","generator","generator","generator","generator","hash","hash","hash","hash","hash","hash","hash","identity","identity","identity","identity","infinity","infinity","into","into","into","into","into","into","into","into","into","into","into","into","invert","invert","is_identity","is_identity","is_identity","is_identity","is_odd","is_on_curve","is_on_curve","is_torsion_free","is_torsion_free","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","multiplicative_generator","neg","neg","neg","neg","neg","neg","neg","one","one","pairing_with","pairing_with","point_impl","poly","pow","pow_vartime","random","random","root_of_unity","serde_impl","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","sign_blinded_msg","sqrt","sqrt","square","square","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sum","to_bytes","to_bytes","to_bytes","to_compressed","to_compressed","to_curve","to_curve","to_le_bits","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pub_key_share","to_repr","to_string","to_string","to_string","to_uncompressed","to_uncompressed","to_uncompressed","to_uncompressed","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unblind_signature","verify","verify_blind_share","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","x","x","y","y","zero","zero","zeroize","zeroize","zeroize","HASH_TAG","hash_bytes_to_curve","hash_to_curve","Poly","_pd","borrow","borrow_mut","coefficients","coefficients","evaluate","fmt","from","from","interpolate_zero","into","random","try_from","try_into","type_id","vzip","g1","g2","impl_serde_g","scalar","deserialize","serialize","deserialize","serialize","deserialize","serialize"],"q":["tbstbs::hash","","","tbs::poly","","","","","","","","","","","","","","","","","tbs::serde_impl","","","","tbs::serde_impl::g1","","tbs::serde_impl::g2","","tbs::serde_impl::scalar",""],"d":["","","","","","","","","","This is an element of $\\\\mathbb{G}_1$ represented in the …","This is an element of $\\\\mathbb{G}_2$ represented in the …","","Represents an element of the scalar field $\\\\mathbb{F}_q$ …","","","Adds <code>rhs</code> to <code>self</code>, returning the result.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Combines a sufficent amount of valid blinded signature …","","","","","","","","","","<code>threshold</code>: how many signature shares are needed to produce …","","","","","","","","","","","","","","Doubles this field element.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","","Returns the argument unchanged.","","","Returns the argument unchanged.","","","Attempts to convert a little-endian byte representation of …","","","","","Converts a 512-bit little endian integer into a <code>Scalar</code> by …","Attempts to deserialize a compressed element. See …","Attempts to deserialize a compressed element. See …","Attempts to deserialize an uncompressed element, not …","Attempts to deserialize an uncompressed element, not …","<strong>IMPORTANT</strong>: <code>from_bytes</code> includes a tag in the hash, this …","","","Converts from an integer represented in little endian into …","","Attempts to deserialize an uncompressed element. See …","","","Attempts to deserialize an uncompressed element. See …","","Attempts to deserialize an uncompressed element, not …","","Attempts to deserialize an uncompressed element, not …","","Returns a fixed generator of the group. See <code>notes::design</code> …","Returns a fixed generator of the group. See <code>notes::design</code> …","","","","","","","","","","Returns the identity of the group: the point at infinity.","Returns the identity of the group: the point at infinity.","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Computes the multiplicative inverse of this element, …","","","Returns true if this element is the identity (the point at …","","Returns true if this element is the identity (the point at …","","Returns true if this point is on the curve. This should …","Returns true if this point is on the curve. This should …","Returns true if this point is free of an $h$-torsion …","Returns true if this point is free of an $h$-torsion …","","","","Multiplies <code>rhs</code> by <code>self</code>, returning the result.","","","","","","","","","","","","","","","Negates <code>self</code>.","","","","","","Returns one, the multiplicative identity.","","","","","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","Exponentiates <code>self</code> by <code>by</code>, where <code>by</code> is a little-endian …","","","","","","","","","","","","","","","Computes the square root of this element, if it exists.","","","Squares this element.","","","","Subtracts <code>rhs</code> from <code>self</code>, returning the result.","","","","","","","","","","","","","Converts an element of <code>Scalar</code> into a byte representation in","","","Serializes this element into compressed form. See …","Serializes this element into compressed form. See …","","","","","","","","","","","","","","","","","","","","","Serializes this element into uncompressed form. See …","","Serializes this element into uncompressed form. See …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns zero, the additive identity.","","","","","","<strong>IMPORTANT</strong>: the byte hashing fn includes a tag, this doesn…","","","","","","","","","Returns the argument unchanged.","","Interpolates the constant factor of a polynomial defined …","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","",""],"i":[0,40,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,40,0,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,1,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,0,1,2,4,1,2,4,1,2,4,0,1,2,4,12,13,14,8,9,15,16,17,7,1,1,9,15,16,17,7,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,1,2,2,4,4,12,13,14,8,9,15,16,17,7,1,1,2,2,2,4,4,4,7,1,2,4,2,4,1,2,4,2,4,7,41,1,1,1,2,2,4,4,2,2,4,4,2,2,4,4,0,14,9,15,16,17,7,2,2,4,4,2,4,12,13,14,8,9,15,16,17,7,1,2,4,1,1,2,2,4,4,1,2,4,2,4,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,1,1,2,2,4,4,1,1,2,4,0,0,1,1,8,1,1,0,12,13,14,8,9,15,16,17,7,0,1,1,1,1,1,1,1,1,1,2,2,2,2,4,4,4,4,1,1,1,1,2,4,2,4,2,4,1,12,13,14,8,9,15,16,17,7,1,2,4,13,1,1,2,4,2,2,4,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,12,13,14,8,9,15,16,17,7,1,2,4,0,0,0,12,13,14,8,9,15,16,17,7,1,2,4,2,4,2,4,1,1,1,2,4,0,0,0,0,31,31,31,31,31,31,31,31,31,0,31,31,31,31,31,31,0,0,0,0,0,0,0,0,0,0],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[6],[[7,8],9],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[[11,[10]]]],[12,12],[13,13],[14,14],[8,8],[9,9],[15,15],[16,16],[17,17],[7,7],[1,1],[2,2],[4,4],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[6,16],[18],[18],[18],[[1,1,18],1],[[2,2,18],2],[[4,4,18],4],[[1,1],18],[[2,2],18],[[4,4],18],[[6,6]],[[],1],[[],2],[[],4],[[],[[19,[12]]]],[[],[[19,[13]]]],[[],[[19,[14]]]],[[],[[19,[8]]]],[[],[[19,[9]]]],[[],[[19,[15]]]],[[],[[19,[16]]]],[[],[[19,[17]]]],[[],[[19,[7]]]],[1,1],[1,1],[9],[15],[16],[17],[7],[[12,12],20],[[13,13],20],[[14,14],20],[[8,8],20],[[9,9],20],[[15,15],20],[[16,16],20],[[17,17],20],[[7,7],20],[[1,1],20],[[2,2],20],[[4,4],20],[[12,21],22],[[13,21],22],[[14,21],22],[[8,21],22],[[9,21],22],[[15,21],22],[[16,21],22],[[17,21],22],[[7,21],22],[[1,21],[[19,[23]]]],[[1,21],[[19,[23]]]],[[2,21],[[19,[23]]]],[[2,21],[[19,[23]]]],[[4,21],[[19,[23]]]],[[4,21],[[19,[23]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[24,1],[[]],[3,2],[[]],[3,2],[5,4],[[]],[5,4],[[],7],[[],[[25,[1]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],1],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[26,7],[[]],[[],1],[[],1],[[],[[25,[1]]]],[[],[[25,[2]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[4]]]],[[],[[25,[2]]]],[[],[[25,[2]]]],[[],[[25,[4]]]],[[],[[25,[4]]]],[[],2],[[],2],[[],4],[[],4],0,[14],[9],[15],[16],[17],[7],[[],2],[[],2],[[],4],[[],4],0,0,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[1,[[25,[1]]]],[1,[[25,[1]]]],[2,18],[2,18],[4,18],[4,18],[1,18],[2,18],[4,18],[2,18],[4,18],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,1]],[[2,1],3],[[2,1],3],[[2,1],3],[[4,1],5],[[4,1],5],[[4,1]],[[4,1],5],[[1,1]],[[1,1]],[[],1],[1,1],[1,1],[1,1],[2,2],[2,2],[4,4],[4,4],[[],1],[[],1],[2],[4],0,0,[1,1],[1,1],[[],8],[27,1],[[],1],0,[12,19],[13,19],[14,19],[8,19],[9,19],[15,19],[16,19],[17,19],[7,19],[[9,13],15],[1,[[25,[1]]]],[1,[[25,[1]]]],[1,1],[1,1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[1,1],1],[[2,3],3],[[2,3],3],[[2,3],3],[[2,3],3],[[4,5],5],[[4,5],5],[[4,5],5],[[4,5],5],[[1,1]],[[1,1]],[[],1],[1],[2],[4],[2],[4],[2],[4],[1,[[11,[10]]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[13,12],[1],[[],28],[[],28],[[],28],[2],[2],[4],[4],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],19],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[],29],[[8,16],17],[[7,17,14],20],[[9,15,12],20],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],0,0,0,0,[[],1],[[],1],[[]],[[]],[[]],0,[[],30],[26,30],0,0,[[]],[[]],[31,32],0,[[31,33]],[[[31,[34,34]],21],22],[[]],[35,31],[[[0,[36,37]]]],[[]],[6,31],[[],19],[[],19],[[],29],[[]],0,0,0,0,[38,[[19,[2]]]],[[2,39],19],[38,[[19,[4]]]],[[4,39],19],[38,[[19,[1]]]],[[1,39],19]],"p":[[3,"Scalar"],[3,"MessagePoint"],[3,"G1Projective"],[3,"PubKeyPoint"],[3,"G2Projective"],[15,"usize"],[3,"Message"],[3,"BlindingKey"],[3,"BlindedMessage"],[3,"Lsb0"],[3,"BitArray"],[3,"PublicKeyShare"],[3,"SecretKeyShare"],[3,"AggregatePublicKey"],[3,"BlindedSignatureShare"],[3,"BlindedSignature"],[3,"Signature"],[3,"Choice"],[4,"Result"],[15,"bool"],[3,"Formatter"],[6,"Result"],[3,"Error"],[15,"u64"],[3,"CtOption"],[8,"Digest"],[8,"RngCore"],[3,"String"],[3,"TypeId"],[8,"Group"],[3,"Poly"],[3,"Iter"],[8,"Into"],[8,"Debug"],[3,"Vec"],[8,"Iterator"],[8,"Clone"],[8,"Deserializer"],[8,"Serializer"],[8,"Aggregatable"],[8,"FromRandom"]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
